{
  "posts": [
    {
      "reward": { "type": "xlm" },
      "sourcedFromGithub": false,
      "githubAsSourceMeta": null,
      "isAnonymous": false,
      "views": 51,
      "slugOverridden": false,
      "coverImage": "",
      "autoGeneratedCover": "",
      "brief": "Embracing the Power of Metered Pricing\nIn the world of subscription-based businesses, finding the ideal pricing model that maximizes revenue while keeping customers satisfied is paramount. The emergence of metered pricing has opened new doors for bus...",
      "content": "<h2 id=\"heading-embracing-the-power-of-metered-pricing\"><strong>Embracing the Power of Metered Pricing</strong></h2>\n<p>In the world of subscription-based businesses, finding the ideal pricing model that maximizes revenue while keeping customers satisfied is paramount. The emergence of metered pricing has opened new doors for businesses to tailor their offerings to customers' unique needs and usage patterns. Stripe Billing's metered pricing is a game-changing solution that empowers businesses to implement dynamic pricing structures based on actual usage. In this article, we will explore the concept of Stripe Billing metered pricing and delve into strategies to leverage its benefits effectively.</p>\n<h2 id=\"heading-stripe-billing-metered-pricing-understanding-the-fundamentals\"><strong>Stripe Billing Metered Pricing: Understanding the Fundamentals</strong></h2>\n<p>Stripe Billing metered pricing is a flexible pricing model that allows businesses to charge customers based on their actual usage. It enables granular tracking of usage metrics and empowers businesses to align their pricing with value delivered. By employing metered pricing, businesses can move away from fixed, one-size-fits-all plans and instead introduce pricing tiers that better reflect customers' varying consumption levels.</p>\n<h3 id=\"heading-key-features-of-stripe-billing-metered-pricing\"><strong>Key Features of Stripe Billing Metered Pricing</strong></h3>\n<ol>\n<li><p><strong>Granular Usage Tracking</strong>: Stripe Billing's metered pricing allows businesses to track usage metrics with exceptional granularity. This enables businesses to accurately measure and bill customers for the services they consume.</p>\n</li>\n<li><p><strong>Dynamic Pricing Tiers</strong>: With metered pricing, businesses can create dynamic pricing tiers that adjust according to customers' usage. This ensures customers only pay for what they actually use, fostering transparency and fairness.</p>\n</li>\n<li><p><strong>Flexible Billing Cycles</strong>: Stripe Billing offers flexible billing cycles to accommodate different business needs. Whether it's hourly, daily, monthly, or any other interval, you can align your billing cycles with your customers' usage patterns.</p>\n</li>\n<li><p><strong>Automated Invoicing</strong>: Stripe Billing streamlines the entire invoicing process by automating the generation and delivery of invoices based on customers' usage. This saves time and reduces the likelihood of human error.</p>\n</li>\n</ol>\n<h2 id=\"heading-implementing-stripe-billing-metered-pricing-best-practices\"><strong>Implementing Stripe Billing Metered Pricing: Best Practices</strong></h2>\n<p>Implementing Stripe Billing metered pricing requires careful planning and execution. By following these best practices, you can ensure a seamless transition to this innovative pricing model:</p>\n<h3 id=\"heading-1-analyze-your-customers-usage-patterns\"><strong>1. Analyze Your Customer's Usage Patterns</strong></h3>\n<p>Before implementing metered pricing, thoroughly analyze your customers' usage patterns. Identify the key metrics that will drive your pricing tiers and evaluate how different usage levels impact your business costs. This analysis will serve as the foundation for creating optimal pricing tiers.</p>\n<h3 id=\"heading-2-define-clear-pricing-tiers\"><strong>2. Define Clear Pricing Tiers</strong></h3>\n<p>Create well-defined pricing tiers that align with your customers' usage patterns. Consider offering multiple tiers that cater to different levels of consumption. This ensures that customers can choose the plan that best suits their needs and encourages them to upgrade as their usage increases.</p>\n<h3 id=\"heading-3-communicate-transparently-with-customers\"><strong>3. Communicate Transparently with Customers</strong></h3>\n<p>Transparency is key when transitioning to metered pricing. Clearly communicate the benefits and mechanics of the new pricing model to your customers. Ensure they understand how their usage will be measured, the flexibility they will gain, and the potential cost savings associated with the metered pricing model.</p>\n<h3 id=\"heading-4-offer-usage-analytics-and-insights\"><strong>4. Offer Usage Analytics and Insights</strong></h3>\n<p>To enhance customer engagement and satisfaction, provide customers with detailed usage analytics and insights. By giving them visibility into their consumption patterns, you empower them to make informed decisions about their usage and optimize their spending accordingly.</p>\n<h3 id=\"heading-5-optimize-billing-and-invoicing-processes\"><strong>5. Optimize Billing and Invoicing Processes</strong></h3>\n<p>Leverage Stripe Billing's automated invoicing capabilities to streamline your billing processes. Automate invoice generation and delivery based on customers' usage to reduce administrative burdens and improve accuracy. Additionally, provide customers with self-service</p>\n<h3 id=\"heading-6-use-a-priceops-approach-to-simplify-any-changes-you-need-to-make\">6. Use a PriceOps approach to simplify any changes you need to make</h3>\n<p>It's one thing to come up with a price and configure Stripe Billing for the first time, but sooner or later you will need to deploy changes to your initial pricing model. A <a target=\"_blank\" href=\"https://priceops.org\">PriceOps</a> bases approach to implementing pricing will pay dividends as your company growth. <a target=\"_blank\" href=\"https://tier.run\">Tier</a> is designed from the ground up to simplify the implementation and management of all types of pricing models.</p>\n",
      "contentMarkdown": "## **Embracing the Power of Metered Pricing**\n\nIn the world of subscription-based businesses, finding the ideal pricing model that maximizes revenue while keeping customers satisfied is paramount. The emergence of metered pricing has opened new doors for businesses to tailor their offerings to customers' unique needs and usage patterns. Stripe Billing's metered pricing is a game-changing solution that empowers businesses to implement dynamic pricing structures based on actual usage. In this article, we will explore the concept of Stripe Billing metered pricing and delve into strategies to leverage its benefits effectively.\n\n## **Stripe Billing Metered Pricing: Understanding the Fundamentals**\n\nStripe Billing metered pricing is a flexible pricing model that allows businesses to charge customers based on their actual usage. It enables granular tracking of usage metrics and empowers businesses to align their pricing with value delivered. By employing metered pricing, businesses can move away from fixed, one-size-fits-all plans and instead introduce pricing tiers that better reflect customers' varying consumption levels.\n\n### **Key Features of Stripe Billing Metered Pricing**\n\n1. **Granular Usage Tracking**: Stripe Billing's metered pricing allows businesses to track usage metrics with exceptional granularity. This enables businesses to accurately measure and bill customers for the services they consume.\n    \n2. **Dynamic Pricing Tiers**: With metered pricing, businesses can create dynamic pricing tiers that adjust according to customers' usage. This ensures customers only pay for what they actually use, fostering transparency and fairness.\n    \n3. **Flexible Billing Cycles**: Stripe Billing offers flexible billing cycles to accommodate different business needs. Whether it's hourly, daily, monthly, or any other interval, you can align your billing cycles with your customers' usage patterns.\n    \n4. **Automated Invoicing**: Stripe Billing streamlines the entire invoicing process by automating the generation and delivery of invoices based on customers' usage. This saves time and reduces the likelihood of human error.\n    \n\n## **Implementing Stripe Billing Metered Pricing: Best Practices**\n\nImplementing Stripe Billing metered pricing requires careful planning and execution. By following these best practices, you can ensure a seamless transition to this innovative pricing model:\n\n### **1\\. Analyze Your Customer's Usage Patterns**\n\nBefore implementing metered pricing, thoroughly analyze your customers' usage patterns. Identify the key metrics that will drive your pricing tiers and evaluate how different usage levels impact your business costs. This analysis will serve as the foundation for creating optimal pricing tiers.\n\n### **2\\. Define Clear Pricing Tiers**\n\nCreate well-defined pricing tiers that align with your customers' usage patterns. Consider offering multiple tiers that cater to different levels of consumption. This ensures that customers can choose the plan that best suits their needs and encourages them to upgrade as their usage increases.\n\n### **3\\. Communicate Transparently with Customers**\n\nTransparency is key when transitioning to metered pricing. Clearly communicate the benefits and mechanics of the new pricing model to your customers. Ensure they understand how their usage will be measured, the flexibility they will gain, and the potential cost savings associated with the metered pricing model.\n\n### **4\\. Offer Usage Analytics and Insights**\n\nTo enhance customer engagement and satisfaction, provide customers with detailed usage analytics and insights. By giving them visibility into their consumption patterns, you empower them to make informed decisions about their usage and optimize their spending accordingly.\n\n### **5\\. Optimize Billing and Invoicing Processes**\n\nLeverage Stripe Billing's automated invoicing capabilities to streamline your billing processes. Automate invoice generation and delivery based on customers' usage to reduce administrative burdens and improve accuracy. Additionally, provide customers with self-service\n\n### 6\\. Use a PriceOps approach to simplify any changes you need to make\n\nIt's one thing to come up with a price and configure Stripe Billing for the first time, but sooner or later you will need to deploy changes to your initial pricing model. A [PriceOps](https://priceops.org) bases approach to implementing pricing will pay dividends as your company growth. [Tier](https://tier.run) is designed from the ground up to simplify the implementation and management of all types of pricing models.",
      "hasPolls": false,
      "totalPollVotes": 0,
      "upvotes": 0,
      "downvotes": 0,
      "tags": [
        "56744723958ef13879b9554c",
        "631ca902f73f4734bc054995",
        "56744721958ef13879b94cad"
      ],
      "untaggedFrom": [],
      "upvotedBy": [],
      "downvotedBy": [],
      "popularity": 6141.4066,
      "responses": [],
      "responseCount": 0,
      "replyCount": 0,
      "followers": [],
      "isActive": true,
      "isFeatured": false,
      "isEngaging": false,
      "answeredByTarget": false,
      "inviters": [],
      "isDelisted": false,
      "isNotified": false,
      "duplicatePosts": [],
      "numCollapsed": 0,
      "hasReward": false,
      "bookmarkedIn": [],
      "similarPostIds": [],
      "reactions": [],
      "totalReactions": 0,
      "reactionsByCurrentUser": [],
      "totalReactionsByCurrentUser": 0,
      "isPinnedToBlog": false,
      "disableComments": false,
      "commentsPaused": false,
      "hasLatex": false,
      "syncAlgolia": false,
      "enableToc": false,
      "toc": [],
      "numUniqueUsersWhoReacted": 0,
      "_id": "6474c623d08961fd6ea6e0b3",
      "createdAt": "2023-05-29T15:34:59.156Z",
      "updatedAt": "2023-05-29T15:34:59.156Z",
      "type": "story",
      "partOfPublication": true,
      "tweetOptions": { "enabled": false },
      "title": "Stripe Billing Metered Pricing: Optimizing Your Subscription Model",
      "cuid": "cli90gmdu000509lf47ylb1gc",
      "dateAdded": "2023-05-29T15:34:59.154Z",
      "hasCustomDate": null,
      "isCoverAttributionHidden": false,
      "coverImageAttribution": "",
      "coverImagePhotographer": "",
      "stickCoverToBottom": false,
      "slug": "stripe-billing-metered-pricing-optimizing-your-subscription-model",
      "author": "61eabf4c0b35507a93a04907",
      "sB": true,
      "isRepublished": false,
      "originalArticleURL": null,
      "readTime": 3,
      "draft": "6474c4aea46770000f86837f",
      "publication": "62a38c37a2c282d2d8377855",
      "ogImage": null,
      "metaTitle": "Discover Stripe Billing's metered pricing",
      "metaDescription": "Discover how Stripe Billing's metered pricing can revolutionize your subscription model. Learn about its benefits, implementation strategies, and FAQs to op",
      "isNewsletterActivated": true,
      "noIndex": true,
      "viewsUpdatedOn": 1687338032566,
      "pollOptions": [],
      "badges": [],
      "questionReplies": [],
      "contributors": [],
      "uniqueReactions": [],
      "reactionToCountMapUnique": { "any": 1 },
      "id": "6474c623d08961fd6ea6e0b3"
    },
    {
      "reward": { "type": "xlm" },
      "sourcedFromGithub": false,
      "githubAsSourceMeta": null,
      "isAnonymous": false,
      "views": 333,
      "slugOverridden": true,
      "coverImage": "",
      "autoGeneratedCover": "",
      "brief": "One lesson we've learned talking to companies on their pricing journeys (and from our own in the past) is the importance of separating the concepts of \"Billing Engine\" and \"Pricing Engine\".\nIt's one of those things that feels obvious when you see it,...",
      "content": "<p>One lesson we've learned talking to companies on their pricing journeys (and from our own in the past) is the importance of separating the concepts of \"Billing Engine\" and \"Pricing Engine\".</p>\n<p>It's one of those things that feels obvious when you see it, but until you do, it can be hard to grasp why it's important. The result is that we end up with the wrong abstraction trying to do double duty.</p>\n<p>Just as you probably wouldn't use a relational database as a message bus, mixing the concepts of Pricing and Billing can bring disaster.</p>\n<h2 id=\"heading-the-problem\"><strong>The Problem</strong></h2>\n<p>Most companies approach their pricing implementation in the following way:</p>\n<ol>\n<li><p>Choose a billing engine (Stripe, Lago, etc.)</p>\n</li>\n<li><p>Have a bunch of meetings where they argue about the best pricing model (and hopefully write it down somewhere!)</p>\n</li>\n<li><p>Configure the billing engine with the model they decided on (or realize it's too complicated, and go back to step 2).</p>\n</li>\n<li><p>Store all the information that the billing engine needs in their application database (identifiers for prices, products, customer IDs associated with each user, etc.), and add the required reporting logic in the application in the appropriate places.</p>\n</li>\n<li><p>Pray that no one ever has to touch it again. (Or failing that, hope you've got a new job somewhere else before that happens.)</p>\n</li>\n</ol>\n<p>Where does the pricing model live? Typically, it's smeared across a variety of loosely connected components, some of which store it as implicit assumptions.</p>\n<ul>\n<li><p>The billing engine</p>\n</li>\n<li><p>The application code</p>\n</li>\n<li><p>The CFO's spreadsheets</p>\n</li>\n<li><p>The <code>/pricing</code> page</p>\n</li>\n<li><p>The terms and conditions of various customer contracts</p>\n</li>\n<li><p>Feature requests from PMs and PMMs who want to make changes</p>\n</li>\n<li><p>The fallible human brains of everyone on the team</p>\n</li>\n</ul>\n<h2 id=\"heading-billing-engine-vs-pricing-engine\"><strong>Billing Engine vs Pricing Engine</strong></h2>\n<p>A lot of value can be unlocked by separating these two abstractions.</p>\n<p>A <strong>Billing Engine</strong> is the component in the stack that <em>bills customers</em>. Its \"one job\" is to send an invoice at the right time, in the right amount, to the right buyer.</p>\n<p>To do this, it needs to know some information about the customer, what thing they bought, the price they should be charged for it, and in the case of metered billing, the amount of that thing that they consumed.</p>\n<p>A <strong>Pricing Engine</strong> is the component in the stack that <em>manages and implements the pricing model</em>. You can think of it as \"the thing that does <a target=\"_blank\" href=\"https://priceops.org\">PriceOps</a>\". It knows what the various pricing plans are, and where they live in the Billing Engine, and thus can present a clean API surface for application code to create subscriptions and report usage.</p>\n<p>To do its job (and prevent other components from trying to take over!) it needs to store the pricing model itself, and present a clean abstraction to the application code, billing engine, and all other technical and business components that need access to price information.</p>\n<p>And perhaps most importantly, it must support making <em>changes</em> to the pricing model, without its abstractions leaking out to consumers.</p>\n<h2 id=\"heading-benefits\"><strong>Benefits</strong></h2>\n<p>The most tangible immediate benefit of a comprehensive Pricing Engine is that it can simplify the process of setting up a Billing Engine, and reduce the amount of billing-related metadata that needs to be tracked and managed by application code.</p>\n<p>While this is enough of a reason to use it, it doesn't always <em>feel</em> like a huge win. Integrating with a whole new component in the stack feels like adding complexity in one place to maybe save it elsewhere. Even if it makes your code cleaner and simpler, it's not <em>that</em> bad, right? Isn't \"having too many customers and complicated deals\" sort of a problem I can worry about when I'm rich and successful?</p>\n<p>However, the trouble with this line of thinking (which all of us at Tier have learned through painful expensive experience) is that it can be very difficult for a company to <em>become</em> successful if they cannot easily iterate on their approach to pricing and packaging.</p>\n<p><strong>Streamlining pricing with a comprehensive Pricing Engine lets everyone focus on their specialty.</strong> This unlocks growth that would otherwise be lost to inefficient processes.</p>\n<h2 id=\"heading-why-we-made-tier\"><strong>Why We Made Tier</strong></h2>\n<p>What we've found is that the most experienced and insightful practitioners in this space follow exactly this kind of approach. That's how the concept of PriceOps was born.</p>\n<p>Tier is a comprehensive Pricing Engine, which drives your billing engine and application code from a single source of pricing model truth, so that everything in your company can work in concert, even as your business changes and grows.</p>\n",
      "contentMarkdown": "One lesson we've learned talking to companies on their pricing journeys (and from our own in the past) is the importance of separating the concepts of \"Billing Engine\" and \"Pricing Engine\".\n\nIt's one of those things that feels obvious when you see it, but until you do, it can be hard to grasp why it's important. The result is that we end up with the wrong abstraction trying to do double duty.\n\nJust as you probably wouldn't use a relational database as a message bus, mixing the concepts of Pricing and Billing can bring disaster.\n\n## **The Problem**\n\nMost companies approach their pricing implementation in the following way:\n\n1. Choose a billing engine (Stripe, Lago, etc.)\n    \n2. Have a bunch of meetings where they argue about the best pricing model (and hopefully write it down somewhere!)\n    \n3. Configure the billing engine with the model they decided on (or realize it's too complicated, and go back to step 2).\n    \n4. Store all the information that the billing engine needs in their application database (identifiers for prices, products, customer IDs associated with each user, etc.), and add the required reporting logic in the application in the appropriate places.\n    \n5. Pray that no one ever has to touch it again. (Or failing that, hope you've got a new job somewhere else before that happens.)\n    \n\nWhere does the pricing model live? Typically, it's smeared across a variety of loosely connected components, some of which store it as implicit assumptions.\n\n* The billing engine\n    \n* The application code\n    \n* The CFO's spreadsheets\n    \n* The `/pricing` page\n    \n* The terms and conditions of various customer contracts\n    \n* Feature requests from PMs and PMMs who want to make changes\n    \n* The fallible human brains of everyone on the team\n    \n\n## **Billing Engine vs Pricing Engine**\n\nA lot of value can be unlocked by separating these two abstractions.\n\nA **Billing Engine** is the component in the stack that *bills customers*. Its \"one job\" is to send an invoice at the right time, in the right amount, to the right buyer.\n\nTo do this, it needs to know some information about the customer, what thing they bought, the price they should be charged for it, and in the case of metered billing, the amount of that thing that they consumed.\n\nA **Pricing Engine** is the component in the stack that *manages and implements the pricing model*. You can think of it as \"the thing that does [PriceOps](https://priceops.org)\". It knows what the various pricing plans are, and where they live in the Billing Engine, and thus can present a clean API surface for application code to create subscriptions and report usage.\n\nTo do its job (and prevent other components from trying to take over!) it needs to store the pricing model itself, and present a clean abstraction to the application code, billing engine, and all other technical and business components that need access to price information.\n\nAnd perhaps most importantly, it must support making *changes* to the pricing model, without its abstractions leaking out to consumers.\n\n## **Benefits**\n\nThe most tangible immediate benefit of a comprehensive Pricing Engine is that it can simplify the process of setting up a Billing Engine, and reduce the amount of billing-related metadata that needs to be tracked and managed by application code.\n\nWhile this is enough of a reason to use it, it doesn't always *feel* like a huge win. Integrating with a whole new component in the stack feels like adding complexity in one place to maybe save it elsewhere. Even if it makes your code cleaner and simpler, it's not *that* bad, right? Isn't \"having too many customers and complicated deals\" sort of a problem I can worry about when I'm rich and successful?\n\nHowever, the trouble with this line of thinking (which all of us at Tier have learned through painful expensive experience) is that it can be very difficult for a company to *become* successful if they cannot easily iterate on their approach to pricing and packaging.\n\n**Streamlining pricing with a comprehensive Pricing Engine lets everyone focus on their specialty.** This unlocks growth that would otherwise be lost to inefficient processes.\n\n## **Why We Made Tier**\n\nWhat we've found is that the most experienced and insightful practitioners in this space follow exactly this kind of approach. That's how the concept of PriceOps was born.\n\nTier is a comprehensive Pricing Engine, which drives your billing engine and application code from a single source of pricing model truth, so that everything in your company can work in concert, even as your business changes and grows.",
      "hasPolls": false,
      "totalPollVotes": 0,
      "upvotes": 0,
      "downvotes": 0,
      "tags": [
        "631c97ddf73f4734bc054644",
        "631c97ddf73f4734bc054645",
        "631ca902f73f4734bc054995"
      ],
      "untaggedFrom": [],
      "upvotedBy": [],
      "downvotedBy": [],
      "popularity": 6078.5917,
      "responses": [],
      "responseCount": 0,
      "replyCount": 0,
      "followers": [],
      "isActive": true,
      "isFeatured": false,
      "isEngaging": false,
      "answeredByTarget": false,
      "inviters": [],
      "isDelisted": false,
      "isNotified": false,
      "duplicatePosts": [],
      "numCollapsed": 0,
      "hasReward": false,
      "bookmarkedIn": [],
      "similarPostIds": [],
      "reactions": [],
      "totalReactions": 0,
      "reactionsByCurrentUser": [],
      "totalReactionsByCurrentUser": 0,
      "isPinnedToBlog": false,
      "disableComments": false,
      "commentsPaused": false,
      "hasLatex": false,
      "syncAlgolia": false,
      "enableToc": true,
      "toc": [
        [
          {
            "id": "c3a86715-6075-4361-a89b-b8ae0679d278",
            "level": 2,
            "previousLevel": null,
            "parentId": null,
            "slug": "the-problem",
            "title": "The Problem"
          }
        ],
        [
          {
            "id": "841f4f2b-22a2-4102-b867-d948b8534c4d",
            "level": 2,
            "previousLevel": 2,
            "parentId": null,
            "slug": "billing-engine-vs-pricing-engine",
            "title": "Billing Engine vs Pricing Engine"
          }
        ],
        [
          {
            "id": "698408d7-8e0d-4a3f-add1-4e91c94d810c",
            "level": 2,
            "previousLevel": 2,
            "parentId": null,
            "slug": "benefits",
            "title": "Benefits"
          }
        ],
        [
          {
            "id": "13a26cc7-dc61-45aa-bc3e-8776b28ac27e",
            "level": 2,
            "previousLevel": 2,
            "parentId": null,
            "slug": "why-we-made-tier",
            "title": "Why We Made Tier"
          }
        ]
      ],
      "numUniqueUsersWhoReacted": 0,
      "_id": "6449a4732936f79b6fd556d8",
      "createdAt": "2023-04-26T22:23:47.668Z",
      "updatedAt": "2023-04-26T22:23:47.668Z",
      "type": "story",
      "partOfPublication": true,
      "tweetOptions": { "enabled": false },
      "title": "Billing Engines Don’t Solve Pricing Problems",
      "cuid": "clgy9j8pe000u09mh4sju4n5x",
      "dateAdded": "2023-04-26T22:23:47.666Z",
      "hasCustomDate": null,
      "isCoverAttributionHidden": false,
      "coverImageAttribution": "",
      "coverImagePhotographer": "",
      "slug": "pricing-engine-vs-billing-engine",
      "author": "6350f41336b336a3b7f42bc5",
      "sB": true,
      "isRepublished": false,
      "originalArticleURL": "",
      "readTime": 4,
      "draft": "6449a1f5bef496000f612d3e",
      "publication": "62a38c37a2c282d2d8377855",
      "ogImage": "",
      "metaTitle": "",
      "metaDescription": "",
      "isNewsletterActivated": true,
      "viewsUpdatedOn": 1687343432909,
      "series": null,
      "__v": 1,
      "badges": [],
      "contributors": [],
      "dateUpdated": "2023-04-26T23:21:20.906Z",
      "pendingPublicationApproval": false,
      "pollOptions": [],
      "questionReplies": [],
      "stickCoverToBottom": false,
      "subtitle": "",
      "uniqueReactions": [],
      "reactionToCountMapUnique": { "any": 1 },
      "id": "6449a4732936f79b6fd556d8"
    },
    {
      "reward": { "type": "xlm" },
      "sourcedFromGithub": false,
      "githubAsSourceMeta": null,
      "isAnonymous": false,
      "views": 135,
      "slugOverridden": false,
      "coverImage": "",
      "autoGeneratedCover": "",
      "brief": "A new Tier release is ready, and Cloud has already been updated!v0.10.0 is here and it contains many features that have been requested by you.\nTier Cloud\nTier Cloud is available in Alpha and is now running v0.10.0. \nWe’ve seen many users migrating fr...",
      "content": "<p>A new Tier release is ready, and Cloud has already been updated!<br /><a target=\"_blank\" href=\"https://tier.run/releases\">v0.10.0 is here</a> and it contains many features that have been requested by you.</p>\n<h2 id=\"heading-tier-cloud\">Tier Cloud</h2>\n<p>Tier Cloud is available in Alpha and is now running v0.10.0. </p>\n<p>We’ve seen many users migrating from using <code>tier serve</code> to Tier Cloud. We encourage you to give it a try. It’s a seamless process. <strong>Just set TIER_API_KEY to your Stripe key</strong>, and the SDK will do the right thing. <a target=\"_blank\" href=\"http://email.tier.run/e/c/eyJlIjoxMzM0NDAsImVtYWlsX2lkIjoiZXhhbXBsZSIsImhyZWYiOiJodHRwczovL2dpc3QuZ2l0aHViLmNvbS9qZXZvbi9hMjlmNmIxMGQyOTRlYjdmZDA2ZWE1YTRiNjdiMzUxNyIsInQiOjE2ODA0NzY4MzB9/86b6ba1feb36261a636e7128b43f88fb60883eea2a7e055a1afc285cf230a784\">See an example here</a>.</p>\n<p>Join our support channel if you have any questions: <a target=\"_blank\" href=\"https://tier-community.slack.com/archives/C04V6K76G7K\">https://tier-community.slack.com/archives/C04V6K76G7K</a></p>\n<h2 id=\"heading-model-builder-preview\">Model Builder Preview</h2>\n<p>Pricing.json has been a powerful way to model pricing. It's flexible, versioned and easy to share. As more companies adopt a <a target=\"_blank\" href=\"http://email.tier.run/e/c/eyJlIjoxMzM0NDAsImVtYWlsX2lkIjoiZXhhbXBsZSIsImhyZWYiOiJodHRwczovL3ByaWNlb3BzLm9yZyIsInQiOjE2ODA0NzY4MzB9/a0d139dfcdb532c7f5ed806a2ed5f33da6f98736c3db2fb0fe28df2fc1197a33\">PriceOps approach</a> to pricing, it's important that non-technical members of your team have the ability to create pricing models.</p>\n<p>Model Builder is a WYSIWYG pricing model builder that natively supports plan creation, collaboration, push, pull, and Checkout links.</p>\n<p>We will have more to share soon, but if you are interested in testing Model Builder, <a target=\"_blank\" href=\"http://email.tier.run/e/c/eyJlIjoxMzM0NDAsImVtYWlsX2lkIjoiZXhhbXBsZSIsImhyZWYiOiJodHRwczovL3NoYXJlLmhzZm9ybXMuY29tLzFNVlV6bEI4RVJVbWNSV3A3R3phamJnZGp6NTIiLCJ0IjoxNjgwNDc2ODMwfQ/e77337ba2b444574bd536835edd7fa197e528a17caf2438cb6b24f6bdab16ec4\"><strong>please sign up here</strong></a><strong>.</strong></p>\n<h2 id=\"heading-api-changes\">API Changes</h2>\n<p><strong>Base prices support decimals</strong> </p>\n<p>The plans[\"plan:name@0\"].features[\"feature:name\"].base may now contain decimals with up to 12 decimal places, which is the limit Stripe imposes. </p>\n<p><strong>Test Clocks</strong></p>\n<p>The API is now aware of Stripe Test Clocks and will pass test clock IDs along with requests to Stripe that support them, for any tier request that provides them. The SDKs have also been updated to make using test clocks easy. </p>\n<p><strong>Support for Metered+Per Unit pricing</strong> </p>\n<p>Tier no longer uses tiered pricing for features with only a single tier that does not contain a base price. </p>\n<p>Features with a single tier that has a base price of 0 will now be converted to metered+per_unit in Stripe. This is useful for models such as per-seat pricing and the change will have no effect on any existing features with single tiers in Stripe. <a target=\"_blank\" href=\"http://email.tier.run/e/c/eyJlIjoxMzM0NDAsImVtYWlsX2lkIjoiZXhhbXBsZSIsImhyZWYiOiJodHRwczovL2dpc3QuZ2l0aHViLmNvbS9qZXZvbi8zOTNhZTEzNTgzNjE2MDE0MDBjMDBmY2ZjYWZhMjBiNiIsInQiOjE2ODA0NzY4MzB9/0acaa7fb04f32de813210f9608db55cb499ffb2a93851ef473efb6aff05db3e1\">See an example here</a>. </p>\n<p><strong>Pricing Transforms</strong> </p>\n<p>Tier models now support a Stripe’s division transform, which transforms the quantity <em>before</em> multiplying the base price to determine the amount to bill. Stripe restricts transforms to metered+per_unit (see above for how to create these features). </p>\n<p>The transform takes two fields: <strong>by</strong> and <strong>rounding</strong>. The by must be an integer to divide by, and rounding must be \"up\" or \"down\". </p>\n<p>To specify a division transform:</p>\n<p><img src=\"https://userimg-assets.customeriomail.com/images/client-env-133440/editor_images/Screenshot%202023-03-29%20at%206.37.27%20AM-01GWPBNJAKWW2AEARNB38EP4XX.png\" alt /></p>\n<h2 id=\"heading-updates-to-the-v1phase-endpoint\">Updates to the /v1/phase endpoint</h2>\n<p><strong>Trial field</strong> </p>\n<p>The /v1/phase endpoint now returns a trial boolean that is true if the current phase is a trial. </p>\n<p><strong>End field</strong></p>\n<p>The /v1/phase endpoint now returns an end field specifying the date and time the current phase ends (not the period end).</p>\n<h2 id=\"heading-sdks\">SDKs</h2>\n<p><strong>Cancel</strong></p>\n<p>Both the Go and Node SDKs now provide a cancel function on their respective clients, as sugar for canceling subscriptions, which has always been supported by scheduling a phase containing zero features. Once the phase's effective date passes, the org's limits will report 0 per feature’s limits. </p>\n<p><strong>Test Clocks</strong></p>\n<p>The Go and Node SDKs now support Stripe Test Clocks via the new Tier API addition. </p>\n<p><strong>Misc</strong></p>\n<p>The SDKs also include various bug fixes and additions for supporting new API changes.</p>\n<h2 id=\"heading-cli\">CLI</h2>\n<p><strong>Price link fixes</strong></p>\n<p>On tier push the resulting price links should no longer link to incorrect accounts or live mode, preventing confusion.</p>\n",
      "contentMarkdown": "A new Tier release is ready, and Cloud has already been updated!  \n[v0.10.0 is here](https://tier.run/releases) and it contains many features that have been requested by you.\n\n## Tier Cloud\n\nTier Cloud is available in Alpha and is now running v0.10.0. \n\nWe’ve seen many users migrating from using `tier serve` to Tier Cloud. We encourage you to give it a try. It’s a seamless process. **Just set TIER\\_API\\_KEY to your Stripe key**, and the SDK will do the right thing. [See an example here](http://email.tier.run/e/c/eyJlIjoxMzM0NDAsImVtYWlsX2lkIjoiZXhhbXBsZSIsImhyZWYiOiJodHRwczovL2dpc3QuZ2l0aHViLmNvbS9qZXZvbi9hMjlmNmIxMGQyOTRlYjdmZDA2ZWE1YTRiNjdiMzUxNyIsInQiOjE2ODA0NzY4MzB9/86b6ba1feb36261a636e7128b43f88fb60883eea2a7e055a1afc285cf230a784).\n\nJoin our support channel if you have any questions: [https://tier-community.slack.com/archives/C04V6K76G7K](https://tier-community.slack.com/archives/C04V6K76G7K)\n\n## Model Builder Preview\n\nPricing.json has been a powerful way to model pricing. It's flexible, versioned and easy to share. As more companies adopt a [PriceOps approach](http://email.tier.run/e/c/eyJlIjoxMzM0NDAsImVtYWlsX2lkIjoiZXhhbXBsZSIsImhyZWYiOiJodHRwczovL3ByaWNlb3BzLm9yZyIsInQiOjE2ODA0NzY4MzB9/a0d139dfcdb532c7f5ed806a2ed5f33da6f98736c3db2fb0fe28df2fc1197a33) to pricing, it's important that non-technical members of your team have the ability to create pricing models.\n\nModel Builder is a WYSIWYG pricing model builder that natively supports plan creation, collaboration, push, pull, and Checkout links.\n\nWe will have more to share soon, but if you are interested in testing Model Builder, [**please sign up here**](http://email.tier.run/e/c/eyJlIjoxMzM0NDAsImVtYWlsX2lkIjoiZXhhbXBsZSIsImhyZWYiOiJodHRwczovL3NoYXJlLmhzZm9ybXMuY29tLzFNVlV6bEI4RVJVbWNSV3A3R3phamJnZGp6NTIiLCJ0IjoxNjgwNDc2ODMwfQ/e77337ba2b444574bd536835edd7fa197e528a17caf2438cb6b24f6bdab16ec4)**.**\n\n## API Changes\n\n**Base prices support decimals** \n\nThe plans\\[\"plan:name@0\"\\].features\\[\"feature:name\"\\].base may now contain decimals with up to 12 decimal places, which is the limit Stripe imposes. \n\n**Test Clocks**\n\nThe API is now aware of Stripe Test Clocks and will pass test clock IDs along with requests to Stripe that support them, for any tier request that provides them. The SDKs have also been updated to make using test clocks easy. \n\n**Support for Metered+Per Unit pricing** \n\nTier no longer uses tiered pricing for features with only a single tier that does not contain a base price. \n\nFeatures with a single tier that has a base price of 0 will now be converted to metered+per\\_unit in Stripe. This is useful for models such as per-seat pricing and the change will have no effect on any existing features with single tiers in Stripe. [See an example here](http://email.tier.run/e/c/eyJlIjoxMzM0NDAsImVtYWlsX2lkIjoiZXhhbXBsZSIsImhyZWYiOiJodHRwczovL2dpc3QuZ2l0aHViLmNvbS9qZXZvbi8zOTNhZTEzNTgzNjE2MDE0MDBjMDBmY2ZjYWZhMjBiNiIsInQiOjE2ODA0NzY4MzB9/0acaa7fb04f32de813210f9608db55cb499ffb2a93851ef473efb6aff05db3e1). \n\n**Pricing Transforms** \n\nTier models now support a Stripe’s division transform, which transforms the quantity *before* multiplying the base price to determine the amount to bill. Stripe restricts transforms to metered+per\\_unit (see above for how to create these features). \n\nThe transform takes two fields: **by** and **rounding**. The by must be an integer to divide by, and rounding must be \"up\" or \"down\". \n\nTo specify a division transform:\n\n![](https://userimg-assets.customeriomail.com/images/client-env-133440/editor_images/Screenshot%202023-03-29%20at%206.37.27%20AM-01GWPBNJAKWW2AEARNB38EP4XX.png align=\"left\")\n\n## Updates to the /v1/phase endpoint\n\n**Trial field** \n\nThe /v1/phase endpoint now returns a trial boolean that is true if the current phase is a trial. \n\n**End field**\n\nThe /v1/phase endpoint now returns an end field specifying the date and time the current phase ends (not the period end).\n\n## SDKs\n\n**Cancel**\n\nBoth the Go and Node SDKs now provide a cancel function on their respective clients, as sugar for canceling subscriptions, which has always been supported by scheduling a phase containing zero features. Once the phase's effective date passes, the org's limits will report 0 per feature’s limits. \n\n**Test Clocks**\n\nThe Go and Node SDKs now support Stripe Test Clocks via the new Tier API addition. \n\n**Misc**\n\nThe SDKs also include various bug fixes and additions for supporting new API changes.\n\n## CLI\n\n**Price link fixes**\n\nOn tier push the resulting price links should no longer link to incorrect accounts or live mode, preventing confusion.",
      "hasPolls": false,
      "totalPollVotes": 0,
      "upvotes": 0,
      "downvotes": 0,
      "tags": [
        "56744723958ef13879b9554c",
        "637395bafe8087002d3e6475",
        "56744721958ef13879b94cad",
        "56744721958ef13879b94e1c",
        "56744721958ef13879b94bd0"
      ],
      "untaggedFrom": [],
      "upvotedBy": [],
      "downvotedBy": [],
      "popularity": 6032.5801,
      "responses": [],
      "responseCount": 0,
      "replyCount": 0,
      "followers": [],
      "isActive": true,
      "isFeatured": false,
      "isEngaging": false,
      "answeredByTarget": false,
      "inviters": [],
      "isDelisted": false,
      "isNotified": false,
      "duplicatePosts": [],
      "numCollapsed": 0,
      "hasReward": false,
      "bookmarkedIn": [],
      "similarPostIds": [],
      "reactions": [],
      "totalReactions": 1,
      "reactionsByCurrentUser": [],
      "totalReactionsByCurrentUser": 0,
      "isPinnedToBlog": false,
      "disableComments": false,
      "commentsPaused": false,
      "hasLatex": true,
      "syncAlgolia": false,
      "enableToc": false,
      "toc": [],
      "numUniqueUsersWhoReacted": 0,
      "_id": "642a0c79f81d70937891bca3",
      "createdAt": "2023-04-02T23:15:05.474Z",
      "updatedAt": "2023-04-02T23:15:05.474Z",
      "type": "story",
      "partOfPublication": true,
      "tweetOptions": { "enabled": false },
      "title": "Tier v0.10",
      "cuid": "clg00srjz000309lb8xu66ho8",
      "dateAdded": "2023-04-02T23:15:05.472Z",
      "hasCustomDate": null,
      "isCoverAttributionHidden": false,
      "coverImageAttribution": "",
      "coverImagePhotographer": "",
      "slug": "tier-v010",
      "author": "61eabf4c0b35507a93a04907",
      "sB": true,
      "isRepublished": false,
      "originalArticleURL": null,
      "readTime": 3,
      "draft": "642a0aca822dce00086579aa",
      "publication": "62a38c37a2c282d2d8377855",
      "ogImage": null,
      "metaTitle": null,
      "metaDescription": null,
      "isNewsletterActivated": true,
      "viewsUpdatedOn": 1687010427761,
      "pollOptions": [],
      "badges": [],
      "questionReplies": [],
      "contributors": [],
      "uniqueReactions": [],
      "reactionToCountMapUnique": { "any": 1 },
      "id": "642a0c79f81d70937891bca3"
    },
    {
      "reward": { "type": "xlm" },
      "sourcedFromGithub": false,
      "githubAsSourceMeta": null,
      "isAnonymous": false,
      "views": 103,
      "slugOverridden": false,
      "coverImage": "",
      "autoGeneratedCover": "",
      "brief": "We're excited to announce the release Tier 0.9.0, which brings several new features and improvements to our API.\nNew Features\nListing Payment Methods\nThe new, experimental, /v1/payment_methods?org=org:acme API returns all payment methods associated w...",
      "content": "<p>We're excited to announce the release Tier 0.9.0, which brings several new features and improvements to our API.</p>\n<h2 id=\"heading-new-features\">New Features</h2>\n<p><strong>Listing Payment Methods</strong></p>\n<p>The new, experimental, <code>/v1/payment_methods?org=org:acme</code> API returns all payment methods associated with an org. It can be used with the latest addition to the <code>/v1/subscribe</code> endpoint to associate a payment method with an orgs subscription managed by Tier.</p>\n<p><strong>Subscription Payment Methods</strong></p>\n<p>Clients may now specify a payment method other than a customer's default payment method for the Tier managed subscription using the <code>/v1/subscribe</code> endpoint.</p>\n<p>Use subscription-specific payment methods to avoid conflicts with other subscriptions that may have already or may later exist in your Stripe account that Tier does not manage.</p>\n<p><strong>Require Billing Address with Checkout</strong></p>\n<p>Users may now require a billing address when using Checkout. The Go SDK has been updated with a new <code>RequireBillingAddress</code> option on Checkout, and the CLI now accepts <code>--require_billing_address</code> as a flag to the subscribe sub command.</p>\n<p><img src=\"https://cdn.hashnode.com/res/hashnode/image/upload/v1677100717462/d3374daa-0640-4522-9107-0b535e42adb9.png\" alt class=\"image--center mx-auto\" /></p>\n<h3 id=\"heading-bug-fixes\">Bug Fixes</h3>\n<p>Tier 0.9.0 also includes some bug fixes, the most notable is a fix for canceling subscriptions without active schedules. Canceling a subscription no longer requires the subscription to have an active schedule.</p>\n<p>We hope that these changes improve your experience with our product. Please let us know if you have any questions or feedback.</p>\n<p>The v0.9.0 release is here: <a target=\"_blank\" href=\"https://tier.run/releases\">https://tier.run/releases</a>.</p>\n<p>As always, please let us know if anything doesn’t work as expected by filing issues at <a target=\"_blank\" href=\"https://tier.run/issues/new\">https://tier.run/issues/new</a>.</p>\n",
      "contentMarkdown": "We're excited to announce the release Tier 0.9.0, which brings several new features and improvements to our API.\n\n## New Features\n\n**Listing Payment Methods**\n\nThe new, experimental, `/v1/payment_methods?org=org:acme` API returns all payment methods associated with an org. It can be used with the latest addition to the `/v1/subscribe` endpoint to associate a payment method with an orgs subscription managed by Tier.\n\n**Subscription Payment Methods**\n\nClients may now specify a payment method other than a customer's default payment method for the Tier managed subscription using the `/v1/subscribe` endpoint.\n\nUse subscription-specific payment methods to avoid conflicts with other subscriptions that may have already or may later exist in your Stripe account that Tier does not manage.\n\n**Require Billing Address with Checkout**\n\nUsers may now require a billing address when using Checkout. The Go SDK has been updated with a new `RequireBillingAddress` option on Checkout, and the CLI now accepts `--require_billing_address` as a flag to the subscribe sub command.\n\n![](https://cdn.hashnode.com/res/hashnode/image/upload/v1677100717462/d3374daa-0640-4522-9107-0b535e42adb9.png align=\"center\")\n\n### Bug Fixes\n\nTier 0.9.0 also includes some bug fixes, the most notable is a fix for canceling subscriptions without active schedules. Canceling a subscription no longer requires the subscription to have an active schedule.\n\nWe hope that these changes improve your experience with our product. Please let us know if you have any questions or feedback.\n\nThe v0.9.0 release is here: [https://tier.run/releases](https://tier.run/releases).\n\nAs always, please let us know if anything doesn’t work as expected by filing issues at [https://tier.run/issues/new](https://tier.run/issues/new).",
      "hasPolls": false,
      "totalPollVotes": 0,
      "upvotes": 0,
      "downvotes": 0,
      "tags": ["56744721958ef13879b94c7e", "56744723958ef13879b9554c"],
      "untaggedFrom": [],
      "upvotedBy": [],
      "downvotedBy": [],
      "popularity": 5957.5492,
      "responses": [],
      "responseCount": 0,
      "replyCount": 0,
      "followers": [],
      "isActive": true,
      "isFeatured": false,
      "isEngaging": false,
      "answeredByTarget": false,
      "inviters": [],
      "isDelisted": false,
      "isNotified": false,
      "duplicatePosts": [],
      "numCollapsed": 0,
      "hasReward": false,
      "bookmarkedIn": [],
      "similarPostIds": [],
      "reactions": [],
      "totalReactions": 0,
      "reactionsByCurrentUser": [],
      "totalReactionsByCurrentUser": 0,
      "isPinnedToBlog": false,
      "disableComments": false,
      "commentsPaused": false,
      "hasLatex": false,
      "syncAlgolia": false,
      "enableToc": false,
      "toc": [],
      "numUniqueUsersWhoReacted": 0,
      "_id": "63f68773842920373db1ac8b",
      "createdAt": "2023-02-22T21:21:55.722Z",
      "updatedAt": "2023-02-22T21:21:55.722Z",
      "type": "story",
      "partOfPublication": true,
      "tweetOptions": { "enabled": false },
      "title": "Tier v0.9",
      "cuid": "cleg6l0jr000109mhdtzadzor",
      "dateAdded": "2023-02-22T21:21:55.720Z",
      "hasCustomDate": null,
      "isCoverAttributionHidden": false,
      "coverImageAttribution": "",
      "coverImagePhotographer": "",
      "slug": "tier-v09",
      "author": "61eabf4c0b35507a93a04907",
      "sB": true,
      "isRepublished": false,
      "originalArticleURL": "",
      "readTime": 2,
      "draft": "63f56db25d54a2000818907c",
      "publication": "62a38c37a2c282d2d8377855",
      "ogImage": "https://cdn.hashnode.com/res/hashnode/image/upload/v1677100895955/74f64cbf-671f-420e-a528-b1c3f40127e6.png",
      "metaTitle": "",
      "metaDescription": "",
      "isNewsletterActivated": true,
      "series": null,
      "__v": 1,
      "badges": [],
      "contributors": [],
      "dateUpdated": "2023-02-22T21:27:09.789Z",
      "pendingPublicationApproval": false,
      "pollOptions": [],
      "questionReplies": [],
      "stickCoverToBottom": false,
      "subtitle": "",
      "viewsUpdatedOn": 1686079832032,
      "uniqueReactions": [],
      "reactionToCountMapUnique": { "any": 1 },
      "id": "63f68773842920373db1ac8b"
    },
    {
      "reward": { "type": "xlm" },
      "sourcedFromGithub": false,
      "githubAsSourceMeta": null,
      "isAnonymous": false,
      "views": 104,
      "slugOverridden": false,
      "coverImage": "",
      "autoGeneratedCover": "",
      "brief": "We're happy to announce the latest version of Tier. v0.8.0 is now available, and it has several exciting updates!\nTier now supports Stripe Checkout using Tier plans, enabling both licensed and metered features in Stripe Checkout.\nHere is the full run...",
      "content": "<p>We're happy to announce the latest version of Tier. <a target=\"_blank\" href=\"https://github.com/tierrun/tier/releases/tag/v0.8.0\">v0.8.0 is now available</a>, and it has several exciting updates!</p>\n<p>Tier now supports <a target=\"_blank\" href=\"https://stripe.com/docs/payments/checkout\">Stripe Checkout</a> using Tier plans, enabling both licensed and metered features in Stripe Checkout.</p>\n<p>Here is the full rundown of the updates in Tier v0.8.0:</p>\n<h3 id=\"heading-checkout\">Checkout</h3>\n<p>Now in Alpha. We've added support for metered billing to Stripe Checkout! This means that the Node and Go SDKs as well as the CLI now support checkout.</p>\n<p>To try it out, simply set the <code>--checkout</code> flag when using tier subscribe in the CLI. For example:</p>\n<pre><code class=\"lang-bash\">tier subscribe --checkout=https://example.com/success org:acme plan:pro@2\n</code></pre>\n<p>This will return a Stripe Checkout link that you can send to your customer, and you can even test it out by visiting the link yourself. Don't forget that you can set the optional <code>--cancel_url</code> flag to redirect users if they cancel out of the checkout session.</p>\n<h3 id=\"heading-clobber-usage-with-tier-report\">Clobber usage with tier report</h3>\n<p>The CLI subcommand report now accepts a <code>--clobber</code> flag for setting usage versus incrementing. This will help you keep better track of your usage and avoid any surprises along the way.</p>\n<h3 id=\"heading-create-a-test-environment-on-push\">Create a test environment on push</h3>\n<p>You can now use the -c flag on tier push to create a new test environment, switch to it, and push the supplied pricing.json pricing model. This will return a link for the newly created environment.</p>\n<p>To give it a go, try running:</p>\n<pre><code class=\"lang-bash\">tier push -c pricing.json\n</code></pre>\n<p>We hope you enjoy using Tier v0.8.0 as much as we enjoyed creating it!</p>\n<hr />\n<p>Please head over to <a target=\"_blank\" href=\"https://tier.run/releases\"><strong>https://tier.run/releases</strong></a> to check out more changes and install options. As always, <code>brew upgrade tierrun/tap/tier</code> works too!</p>\n<blockquote>\n<p><strong><em>If you haven't used Tier yet, these resources are a good place to get started:</em></strong></p>\n</blockquote>\n<ul>\n<li><p><a target=\"_blank\" href=\"https://blog.tier.run/tier-hello-world-demo\"><strong>Hello World! example</strong></a> - Step by step guide to adding Tier to your new or existing codebase</p>\n</li>\n<li><p><a target=\"_blank\" href=\"https://tier.run/docs/quickstart\"><strong>Quick Start Guide</strong></a> - Step by step to getting up and running with Tier.</p>\n</li>\n<li><p><a target=\"_blank\" href=\"https://tier.run/docs/recipes\"><strong>Recipes</strong></a> - Example common pricing models and their corresponding Tier <code>pricing.json</code> representations.</p>\n</li>\n<li><p><a target=\"_blank\" href=\"https://tier.run/docs/cli\"><strong>CLI Reference</strong></a> - Documentation for the Tier command line tool.</p>\n</li>\n</ul>\n",
      "contentMarkdown": "We're happy to announce the latest version of Tier. [v0.8.0 is now available](https://github.com/tierrun/tier/releases/tag/v0.8.0), and it has several exciting updates!\n\nTier now supports [Stripe Checkout](https://stripe.com/docs/payments/checkout) using Tier plans, enabling both licensed and metered features in Stripe Checkout.\n\nHere is the full rundown of the updates in Tier v0.8.0:\n\n### Checkout\n\nNow in Alpha. We've added support for metered billing to Stripe Checkout! This means that the Node and Go SDKs as well as the CLI now support checkout.\n\nTo try it out, simply set the `--checkout` flag when using tier subscribe in the CLI. For example:\n\n```bash\ntier subscribe --checkout=https://example.com/success org:acme plan:pro@2\n```\n\nThis will return a Stripe Checkout link that you can send to your customer, and you can even test it out by visiting the link yourself. Don't forget that you can set the optional `--cancel_url` flag to redirect users if they cancel out of the checkout session.\n\n### Clobber usage with tier report\n\nThe CLI subcommand report now accepts a `--clobber` flag for setting usage versus incrementing. This will help you keep better track of your usage and avoid any surprises along the way.\n\n### Create a test environment on push\n\nYou can now use the -c flag on tier push to create a new test environment, switch to it, and push the supplied pricing.json pricing model. This will return a link for the newly created environment.\n\nTo give it a go, try running:\n\n```bash\ntier push -c pricing.json\n```\n\nWe hope you enjoy using Tier v0.8.0 as much as we enjoyed creating it!\n\n---\n\nPlease head over to [**https://tier.run/releases**](https://tier.run/releases) to check out more changes and install options. As always, `brew upgrade tierrun/tap/tier` works too!\n\n> ***If you haven't used Tier yet, these resources are a good place to get started:***\n\n* [**Hello World! example**](https://blog.tier.run/tier-hello-world-demo) - Step by step guide to adding Tier to your new or existing codebase\n    \n* [**Quick Start Guide**](https://tier.run/docs/quickstart) - Step by step to getting up and running with Tier.\n    \n* [**Recipes**](https://tier.run/docs/recipes) - Example common pricing models and their corresponding Tier `pricing.json` representations.\n    \n* [**CLI Reference**](https://tier.run/docs/cli) - Documentation for the Tier command line tool.",
      "hasPolls": false,
      "totalPollVotes": 0,
      "upvotes": 0,
      "downvotes": 0,
      "tags": [
        "56744723958ef13879b9554c",
        "5736a1db6a4640415dc89e28",
        "56744721958ef13879b94cad"
      ],
      "untaggedFrom": [],
      "upvotedBy": [],
      "downvotedBy": [],
      "popularity": 5944.2354,
      "responses": [],
      "responseCount": 0,
      "replyCount": 0,
      "followers": [],
      "isActive": true,
      "isFeatured": false,
      "isEngaging": false,
      "answeredByTarget": false,
      "inviters": [],
      "isDelisted": false,
      "isNotified": false,
      "duplicatePosts": [],
      "numCollapsed": 0,
      "hasReward": false,
      "bookmarkedIn": [],
      "similarPostIds": [],
      "reactions": [],
      "totalReactions": 0,
      "reactionsByCurrentUser": [],
      "totalReactionsByCurrentUser": 0,
      "isPinnedToBlog": false,
      "disableComments": false,
      "commentsPaused": false,
      "hasLatex": false,
      "syncAlgolia": false,
      "enableToc": false,
      "toc": [],
      "numUniqueUsersWhoReacted": 0,
      "_id": "63ed63233dbf78367afe14a4",
      "createdAt": "2023-02-15T22:56:35.169Z",
      "updatedAt": "2023-02-15T22:56:35.169Z",
      "type": "story",
      "partOfPublication": true,
      "tweetOptions": { "enabled": false },
      "title": "Tier v0.8",
      "cuid": "cle69vs6500000al6h7ot7135",
      "dateAdded": "2023-02-15T22:56:35.165Z",
      "hasCustomDate": null,
      "isCoverAttributionHidden": false,
      "coverImageAttribution": "",
      "coverImagePhotographer": "",
      "slug": "tier-v08",
      "author": "61eabf4c0b35507a93a04907",
      "sB": true,
      "isRepublished": false,
      "originalArticleURL": "",
      "readTime": 2,
      "draft": "63ed55b2f4531f0008ea983b",
      "publication": "62a38c37a2c282d2d8377855",
      "ogImage": "",
      "metaTitle": "",
      "metaDescription": "",
      "isNewsletterActivated": true,
      "viewsUpdatedOn": 1685701833928,
      "series": null,
      "__v": 1,
      "badges": [],
      "contributors": [],
      "dateUpdated": "2023-02-16T04:13:46.659Z",
      "pendingPublicationApproval": false,
      "pollOptions": [],
      "questionReplies": [],
      "stickCoverToBottom": false,
      "subtitle": "",
      "uniqueReactions": [],
      "reactionToCountMapUnique": { "any": 1 },
      "id": "63ed63233dbf78367afe14a4"
    },
    {
      "reward": { "type": "xlm" },
      "sourcedFromGithub": false,
      "githubAsSourceMeta": null,
      "isAnonymous": false,
      "views": 95,
      "slugOverridden": false,
      "coverImage": "",
      "autoGeneratedCover": "",
      "brief": "Tier v0.7 is now available. Updates include\n\nSupport for canceling subscriptions\n\nFree Trials support\n\nDetection and reporting of lingering Stripe idempotency keys\n\n\nWe are also releasing several bug fixes and enhancements which you can find in the r...",
      "content": "<p><a target=\"_blank\" href=\"https://github.com/tierrun/tier/releases/tag/v0.7.0\">Tier v0.7</a> is now available. Updates include</p>\n<ul>\n<li><p>Support for canceling subscriptions</p>\n</li>\n<li><p>Free Trials support</p>\n</li>\n<li><p>Detection and reporting of lingering Stripe idempotency keys</p>\n</li>\n</ul>\n<p>We are also releasing several bug fixes and enhancements which you can find in the release notes here: https://github.com/tierrun/tier/releases/tag/v0.7.0</p>\n<h4 id=\"heading-getting-started-with-tier\">Getting started with Tier</h4>\n<p>Please head over to <a target=\"_blank\" href=\"https://tier.run/releases\">https://tier.run/releases</a> to check out more changes and install options. As always, <code>brew upgrade tierrun/tap/tier</code> works too!</p>\n<p>If you haven't used Tier yet, these resources are a good place to get started:</p>\n<ul>\n<li><p><a target=\"_blank\" href=\"https://blog.tier.run/tier-hello-world-demo\">Hello World! example</a> - Step-by-step guide to adding Tier to your new or existing codebase</p>\n</li>\n<li><p><a target=\"_blank\" href=\"https://tier.run/docs/quickstart\">Quick Start Guide</a> - Step-by-step to getting up and running with Tier.</p>\n</li>\n<li><p><a target=\"_blank\" href=\"https://tier.run/docs/recipes\">Recipes</a> - Example common pricing models and their corresponding Tier <code>pricing.json</code> representations.</p>\n</li>\n<li><p><a target=\"_blank\" href=\"https://tier.run/docs/cli\">CLI Reference</a> - Documentation for the Tier command line tool.</p>\n</li>\n</ul>\n",
      "contentMarkdown": "[Tier v0.7](https://github.com/tierrun/tier/releases/tag/v0.7.0) is now available. Updates include\n\n* Support for canceling subscriptions\n    \n* Free Trials support\n    \n* Detection and reporting of lingering Stripe idempotency keys\n    \n\nWe are also releasing several bug fixes and enhancements which you can find in the release notes here: https://github.com/tierrun/tier/releases/tag/v0.7.0\n\n#### Getting started with Tier\n\nPlease head over to [https://tier.run/releases](https://tier.run/releases) to check out more changes and install options. As always, `brew upgrade tierrun/tap/tier` works too!\n\nIf you haven't used Tier yet, these resources are a good place to get started:\n\n* [Hello World! example](https://blog.tier.run/tier-hello-world-demo) - Step-by-step guide to adding Tier to your new or existing codebase\n    \n* [Quick Start Guide](https://tier.run/docs/quickstart) - Step-by-step to getting up and running with Tier.\n    \n* [Recipes](https://tier.run/docs/recipes) - Example common pricing models and their corresponding Tier `pricing.json` representations.\n    \n* [CLI Reference](https://tier.run/docs/cli) - Documentation for the Tier command line tool.",
      "hasPolls": false,
      "totalPollVotes": 0,
      "upvotes": 0,
      "downvotes": 0,
      "tags": [
        "56744722958ef13879b94f1b",
        "631ca902f73f4734bc054995",
        "56744723958ef13879b9554c"
      ],
      "untaggedFrom": [],
      "upvotedBy": [],
      "downvotedBy": [],
      "popularity": 5888.769,
      "responses": [],
      "responseCount": 0,
      "replyCount": 0,
      "followers": [],
      "isActive": true,
      "isFeatured": false,
      "isEngaging": false,
      "answeredByTarget": false,
      "inviters": [],
      "isDelisted": false,
      "isNotified": false,
      "duplicatePosts": [],
      "numCollapsed": 0,
      "hasReward": false,
      "bookmarkedIn": [],
      "similarPostIds": [],
      "reactions": [],
      "totalReactions": 0,
      "reactionsByCurrentUser": [],
      "totalReactionsByCurrentUser": 0,
      "isPinnedToBlog": false,
      "disableComments": false,
      "commentsPaused": false,
      "hasLatex": false,
      "syncAlgolia": false,
      "enableToc": false,
      "toc": [],
      "numUniqueUsersWhoReacted": 0,
      "_id": "63c74d2b80993284fec2eb24",
      "createdAt": "2023-01-18T01:36:43.578Z",
      "updatedAt": "2023-01-18T01:36:43.578Z",
      "type": "story",
      "partOfPublication": true,
      "title": "Tier v0.7",
      "cuid": "cld0zu0qf000308jt0nwd2hak",
      "dateAdded": "2023-01-18T01:36:43.576Z",
      "hasCustomDate": null,
      "isCoverAttributionHidden": false,
      "coverImageAttribution": "",
      "coverImagePhotographer": "",
      "slug": "tier-v07",
      "author": "61eabf4c0b35507a93a04907",
      "sB": true,
      "isRepublished": false,
      "originalArticleURL": "",
      "readTime": 1,
      "draft": "63c00aa700a33b0008023a07",
      "publication": "62a38c37a2c282d2d8377855",
      "ogImage": "https://cdn.hashnode.com/res/hashnode/image/upload/v1674005547590/095d20cf-489a-4740-96c5-e78a0a7a54be.png",
      "metaTitle": "",
      "metaDescription": "",
      "isNewsletterActivated": true,
      "series": null,
      "__v": 1,
      "badges": [],
      "contributors": [],
      "dateUpdated": "2023-01-18T16:41:12.039Z",
      "pendingPublicationApproval": false,
      "pollOptions": [],
      "questionReplies": [],
      "stickCoverToBottom": false,
      "subtitle": "",
      "viewsUpdatedOn": 1683426628001,
      "uniqueReactions": [],
      "reactionToCountMapUnique": { "any": 1 },
      "id": "63c74d2b80993284fec2eb24"
    },
    {
      "reward": { "type": "xlm" },
      "sourcedFromGithub": false,
      "githubAsSourceMeta": null,
      "isAnonymous": false,
      "views": 94,
      "slugOverridden": false,
      "coverImage": "",
      "autoGeneratedCover": "",
      "brief": "A community member has contributed a Fly.io template. (Thank you Samuel Gordalina!)\nThis template will provision Tier as a private service on Fly.io.\nSetup\nCreate an app out of this template.\nsh flyctl launch --no-deploy\n\nThen we set the stripe api k...",
      "content": "<p>A community member has contributed a Fly.io template. (Thank you <a target=\"_blank\" href=\"https://github.com/gordalina\">Samuel Gordalina</a>!)</p>\n<p>This template will provision Tier as a private service on <a target=\"_blank\" href=\"https://fly.io\">Fly.io</a>.</p>\n<h2 id=\"heading-setup\">Setup</h2>\n<p>Create an app out of <a target=\"_blank\" href=\"https://github.com/gordalina/fly-tier\">this template</a>.</p>\n<pre><code class=\"lang-bash\">sh flyctl launch --no-deploy\n</code></pre>\n<p>Then we set the stripe api key secret, and deploy it</p>\n<pre><code class=\"lang-bash\">sh flyctl secrets <span class=\"hljs-built_in\">set</span> STRIPE_API_KEY=sk_live_...\n</code></pre>\n<h2 id=\"heading-usage\">Usage</h2>\n<p>The app is now available internally at <code>http://&lt;app&gt;.internal/</code>.</p>\n<h2 id=\"heading-support\">Support</h2>\n<p>For further questions, please join our <a target=\"_blank\" href=\"https://join.slack.com/t/tier-community/shared_invite/zt-1blotqjb9-wvkYMo8QkhaEWziprdjnIA\">Community Slack</a>.</p>\n",
      "contentMarkdown": "A community member has contributed a Fly.io template. (Thank you [Samuel Gordalina](https://github.com/gordalina)!)\n\nThis template will provision Tier as a private service on [Fly.io](https://fly.io).\n\n## Setup\n\nCreate an app out of [this template](https://github.com/gordalina/fly-tier).\n\n```bash\nsh flyctl launch --no-deploy\n```\n\nThen we set the stripe api key secret, and deploy it\n\n```bash\nsh flyctl secrets set STRIPE_API_KEY=sk_live_...\n```\n\n## Usage\n\nThe app is now available internally at `http://<app>.internal/`.\n\n## Support\n\nFor further questions, please join our [Community Slack](https://join.slack.com/t/tier-community/shared_invite/zt-1blotqjb9-wvkYMo8QkhaEWziprdjnIA).",
      "hasPolls": false,
      "totalPollVotes": 0,
      "upvotes": 0,
      "downvotes": 0,
      "tags": [
        "63431c66ad721d4c51daaad1",
        "56744723958ef13879b9554c",
        "56744722958ef13879b950a5",
        "631ca902f73f4734bc054995"
      ],
      "untaggedFrom": [],
      "upvotedBy": [],
      "downvotedBy": [],
      "popularity": 5866.6741,
      "responses": [],
      "responseCount": 0,
      "replyCount": 0,
      "followers": [],
      "isActive": true,
      "isFeatured": false,
      "isEngaging": false,
      "answeredByTarget": false,
      "inviters": [],
      "isDelisted": false,
      "isNotified": false,
      "duplicatePosts": [],
      "numCollapsed": 0,
      "hasReward": false,
      "bookmarkedIn": [],
      "similarPostIds": [],
      "reactions": [],
      "totalReactions": 0,
      "reactionsByCurrentUser": [],
      "totalReactionsByCurrentUser": 0,
      "isPinnedToBlog": false,
      "disableComments": true,
      "commentsPaused": false,
      "hasLatex": false,
      "syncAlgolia": false,
      "enableToc": false,
      "toc": [],
      "numUniqueUsersWhoReacted": 0,
      "_id": "63b821509ffc3ef26140e8a4",
      "createdAt": "2023-01-06T13:25:36.616Z",
      "updatedAt": "2023-01-06T13:25:36.616Z",
      "type": "story",
      "partOfPublication": true,
      "title": "Tier Fly.io Template",
      "cuid": "clckjvffq000308mq5o9r2ohv",
      "dateAdded": "2023-01-06T13:25:36.614Z",
      "hasCustomDate": null,
      "isCoverAttributionHidden": false,
      "coverImageAttribution": "",
      "coverImagePhotographer": "",
      "slug": "tier-flyio-template",
      "author": "61eabf4c0b35507a93a04907",
      "sB": true,
      "isRepublished": false,
      "originalArticleURL": null,
      "readTime": 1,
      "draft": "63b81e28624134a0c9b328f2",
      "publication": "62a38c37a2c282d2d8377855",
      "ogImage": null,
      "metaTitle": null,
      "metaDescription": null,
      "isNewsletterActivated": true,
      "viewsUpdatedOn": 1687309228052,
      "pollOptions": [],
      "badges": [],
      "questionReplies": [],
      "contributors": [],
      "uniqueReactions": [],
      "reactionToCountMapUnique": { "any": 1 },
      "id": "63b821509ffc3ef26140e8a4"
    },
    {
      "reward": { "type": "xlm" },
      "sourcedFromGithub": false,
      "githubAsSourceMeta": null,
      "isAnonymous": false,
      "views": 42,
      "slugOverridden": false,
      "coverImage": "",
      "autoGeneratedCover": "",
      "brief": "We are now maintaining a Heroku Buildpack for Tier. You can get the latest version and documentation on GitHub.\nThis buildback installs and runs the Tier sidecar in Heroku dynos.\nInstall\nheroku buildpacks:add https://github.com/tierrun/tier-run-build...",
      "content": "<p>We are now maintaining a Heroku Buildpack for Tier. You can get the latest version and documentation on <a target=\"_blank\" href=\"https://github.com/tierrun/tier-run-buildpack\">GitHub</a>.</p>\n<p>This buildback installs and runs the Tier sidecar in Heroku dynos.</p>\n<h2 id=\"heading-install\">Install</h2>\n<pre><code class=\"lang-bash\">heroku buildpacks:add https://github.com/tierrun/tier-run-buildpack\n</code></pre>\n<h2 id=\"heading-environment\">Environment</h2>\n<p>The below environment variables can be set using <code>heroku config:set X=Y</code> or via the Heroku dashboard.</p>\n<ul>\n<li><p><code>STRIPE_API_KEY</code>: The required Stripe key (live or test) to use. If a live key is used, the <code>-live</code> flag will be automatically passed to <code>tier serve</code>.</p>\n</li>\n<li><p><code>TIER_VERSION</code>: The optional Tier sidecar version (default is <code>0.6.2</code>)</p>\n</li>\n<li><p><code>TIER_ADDR</code>: The optional address the sidecar will listen on (default is <code>127.0.0.1:8080</code>)</p>\n</li>\n<li><p><code>TIER_RUN_DYNOS</code>: An optional comma seperated list of process type names (e.g. \"web\") to run the sidecar in. If unset, all process types will run the sidecar.</p>\n</li>\n</ul>\n<h2 id=\"heading-support\">Support</h2>\n<p>For further questions, please join our <a target=\"_blank\" href=\"https://join.slack.com/t/tier-community/shared_invite/zt-1blotqjb9-wvkYMo8QkhaEWziprdjnIA\">Community Slack</a>.</p>\n",
      "contentMarkdown": "We are now maintaining a Heroku Buildpack for Tier. You can get the latest version and documentation on [GitHub](https://github.com/tierrun/tier-run-buildpack).\n\nThis buildback installs and runs the Tier sidecar in Heroku dynos.\n\n## Install\n\n```bash\nheroku buildpacks:add https://github.com/tierrun/tier-run-buildpack\n```\n\n## Environment\n\nThe below environment variables can be set using `heroku config:set X=Y` or via the Heroku dashboard.\n\n* `STRIPE_API_KEY`: The required Stripe key (live or test) to use. If a live key is used, the `-live` flag will be automatically passed to `tier serve`.\n    \n* `TIER_VERSION`: The optional Tier sidecar version (default is `0.6.2`)\n    \n* `TIER_ADDR`: The optional address the sidecar will listen on (default is `127.0.0.1:8080`)\n    \n* `TIER_RUN_DYNOS`: An optional comma seperated list of process type names (e.g. \"web\") to run the sidecar in. If unset, all process types will run the sidecar.\n    \n\n## Support\n\nFor further questions, please join our [Community Slack](https://join.slack.com/t/tier-community/shared_invite/zt-1blotqjb9-wvkYMo8QkhaEWziprdjnIA).",
      "hasPolls": false,
      "totalPollVotes": 0,
      "upvotes": 0,
      "downvotes": 0,
      "tags": [
        "568935c69a4538cecc3ae55f",
        "56744723958ef13879b9554c",
        "631ca902f73f4734bc054995",
        "56744722958ef13879b950a5"
      ],
      "untaggedFrom": [],
      "upvotedBy": [],
      "downvotedBy": [],
      "popularity": 5866.6558,
      "responses": [],
      "responseCount": 0,
      "replyCount": 0,
      "followers": [],
      "isActive": true,
      "isFeatured": false,
      "isEngaging": false,
      "answeredByTarget": false,
      "inviters": [],
      "isDelisted": false,
      "isNotified": false,
      "duplicatePosts": [],
      "numCollapsed": 0,
      "hasReward": false,
      "bookmarkedIn": [],
      "similarPostIds": [],
      "reactions": [],
      "totalReactions": 0,
      "reactionsByCurrentUser": [],
      "totalReactionsByCurrentUser": 0,
      "isPinnedToBlog": false,
      "disableComments": false,
      "commentsPaused": false,
      "hasLatex": false,
      "syncAlgolia": false,
      "enableToc": false,
      "toc": [],
      "numUniqueUsersWhoReacted": 0,
      "_id": "63b81e15bbf034ace4d56c06",
      "createdAt": "2023-01-06T13:11:49.265Z",
      "updatedAt": "2023-01-06T13:11:49.265Z",
      "type": "story",
      "partOfPublication": true,
      "title": "Tier Heroku Buildpack",
      "cuid": "clckjdp1r000d08l3hvzy1xrf",
      "dateAdded": "2023-01-06T13:11:49.263Z",
      "hasCustomDate": null,
      "isCoverAttributionHidden": false,
      "coverImageAttribution": "",
      "coverImagePhotographer": "",
      "slug": "tier-heroku-buildpack",
      "author": "61eabf4c0b35507a93a04907",
      "sB": true,
      "isRepublished": false,
      "originalArticleURL": "",
      "readTime": 1,
      "draft": "63b81c6995025da0eecc87e4",
      "publication": "62a38c37a2c282d2d8377855",
      "ogImage": "",
      "metaTitle": "",
      "metaDescription": "",
      "isNewsletterActivated": true,
      "series": null,
      "__v": 1,
      "badges": [],
      "contributors": [],
      "dateUpdated": "2023-01-06T18:16:54.430Z",
      "pendingPublicationApproval": false,
      "pollOptions": [],
      "questionReplies": [],
      "stickCoverToBottom": false,
      "subtitle": "",
      "viewsUpdatedOn": 1684717226847,
      "uniqueReactions": [],
      "reactionToCountMapUnique": { "any": 1 },
      "id": "63b81e15bbf034ace4d56c06"
    },
    {
      "reward": { "type": "xlm" },
      "sourcedFromGithub": false,
      "githubAsSourceMeta": null,
      "isAnonymous": false,
      "views": 90,
      "slugOverridden": false,
      "coverImage": "",
      "autoGeneratedCover": "",
      "brief": "We are now maintaining an official set of images on Docker hub.\nUpdated images will be available here:\n\nhttps://hub.docker.com/r/tierrun/tier/tags\n\nand you can get the latest at any time via\n$ docker pull tierrun/tier",
      "content": "<p>We are now maintaining an official set of images on Docker hub.</p>\n<p>Updated images will be available here:</p>\n<ul>\n<li><a target=\"_blank\" href=\"https://hub.docker.com/r/tierrun/tier/tags\">https://hub.docker.com/r/tierrun/tier/tags</a></li>\n</ul>\n<p>and you can get the latest at any time via</p>\n<pre><code class=\"lang-bash\">$ docker pull tierrun/tier\n</code></pre>\n",
      "contentMarkdown": "We are now maintaining an official set of images on Docker hub.\n\nUpdated images will be available here:\n\n*   [https://hub.docker.com/r/tierrun/tier/tags](https://hub.docker.com/r/tierrun/tier/tags)\n    \n\nand you can get the latest at any time via\n\n```bash\n$ docker pull tierrun/tier\n```",
      "hasPolls": false,
      "totalPollVotes": 0,
      "upvotes": 0,
      "downvotes": 0,
      "tags": ["56744723958ef13879b9550d", "56744723958ef13879b9554c"],
      "untaggedFrom": [],
      "upvotedBy": [],
      "downvotedBy": [],
      "popularity": 5813.0628,
      "responses": [],
      "responseCount": 0,
      "replyCount": 0,
      "followers": [],
      "isActive": true,
      "isFeatured": false,
      "isEngaging": false,
      "answeredByTarget": false,
      "inviters": [],
      "isDelisted": false,
      "isNotified": false,
      "duplicatePosts": [],
      "numCollapsed": 0,
      "hasReward": false,
      "bookmarkedIn": [],
      "similarPostIds": [],
      "reactions": [],
      "totalReactions": 0,
      "reactionsByCurrentUser": [],
      "totalReactionsByCurrentUser": 0,
      "isPinnedToBlog": false,
      "disableComments": false,
      "commentsPaused": false,
      "hasLatex": false,
      "syncAlgolia": false,
      "enableToc": false,
      "toc": [],
      "numUniqueUsersWhoReacted": 0,
      "_id": "6393517431cd916bbc0ea3fb",
      "createdAt": "2022-12-09T15:17:08.450Z",
      "updatedAt": "2022-12-09T15:17:08.450Z",
      "type": "story",
      "partOfPublication": true,
      "title": "Official Tier Docker Images",
      "cuid": "clbgnj07r000108lae2euafud",
      "dateAdded": "2022-12-09T15:17:08.439Z",
      "hasCustomDate": null,
      "isCoverAttributionHidden": false,
      "coverImageAttribution": "",
      "coverImagePhotographer": "",
      "slug": "official-tier-docker-images",
      "author": "61eabf4c0b35507a93a04907",
      "sB": false,
      "isRepublished": false,
      "originalArticleURL": null,
      "readTime": 1,
      "draft": "63934e68344783061f8c55df",
      "publication": "62a38c37a2c282d2d8377855",
      "ogImage": "https://cdn.hashnode.com/res/hashnode/image/upload/v1670598969587/5sRhn7-mr.png",
      "metaTitle": null,
      "metaDescription": null,
      "viewsUpdatedOn": 1686171629310,
      "pollOptions": [],
      "badges": [],
      "questionReplies": [],
      "contributors": [],
      "uniqueReactions": [],
      "reactionToCountMapUnique": { "any": 1 },
      "id": "6393517431cd916bbc0ea3fb"
    },
    {
      "reward": { "type": "xlm" },
      "sourcedFromGithub": false,
      "githubAsSourceMeta": null,
      "isAnonymous": false,
      "views": 54,
      "slugOverridden": false,
      "coverImage": "https://cdn.hashnode.com/res/hashnode/image/upload/v1670460261441/rIAXvVBkP.jpeg",
      "autoGeneratedCover": "",
      "brief": "You can find Tier v0.6.2 here.\nThis update introduces the ability to enter prices in decimal form as well as the ability to switch between test accounts using the canonical URL for the test account.\nFractional Prices\nThe smallest whole unit for a pri...",
      "content": "<p>You can <a target=\"_blank\" href=\"https://github.com/tierrun/tier/releases\">find Tier v0.6.2 here</a>.</p>\n<p>This update introduces the ability to enter prices in decimal form as well as the ability to switch between test accounts using the canonical URL for the test account.</p>\n<h3 id=\"heading-fractional-prices\">Fractional Prices</h3>\n<p>The smallest whole unit for a price is 1 cent. Prices can now be represented in fractions of cents.</p>\n<p>For example, the following feature in <code>pricing.json</code></p>\n<pre><code class=\"lang-json\">\n        <span class=\"hljs-string\">\"feature:message\"</span>: {\n          <span class=\"hljs-attr\">\"tiers\"</span>: [{ <span class=\"hljs-attr\">\"upto\"</span>: <span class=\"hljs-number\">10</span>, <span class=\"hljs-attr\">\"price\"</span>: <span class=\"hljs-number\">0.1</span> }]\n        }\n</code></pre>\n<p>Will be represented in Stripe as:</p>\n<p><img src=\"https://cdn.hashnode.com/res/hashnode/image/upload/v1670448085412/xYAomICYv.png\" alt class=\"image--center mx-auto\" /></p>\n<h3 id=\"heading-test-account-switching-by-url\">Test Account Switching by URL</h3>\n<p>A few weeks ago we introduced <a target=\"_blank\" href=\"https://blog.tier.run/tier-switch-git-branch-stripe\">tier switch</a> which brings the first sandboxes to Stripe. This is useful for everything from testing new ideas in dev to enabling Stripe Preview Deploys.</p>\n<p>With Tier v0.6.2 you can now switch to a test account by including its URL as a parameter in <code>tier switch</code>.</p>\n<p>For example:</p>\n<p><code>tier switch https://dashboard.stripe.com/acct_1MCUwJIR5o5wb1n4/test</code></p>\n<hr />\n<p>Please head over to <a target=\"_blank\" href=\"https://tier.run/releases\">https://tier.run/releases</a> to check out more changes and install options. As always, <code>brew upgrade tierrun/tap/tier</code> works too!</p>\n<blockquote>\n<p>If you haven't used Tier yet, these resources are a good place to get started:</p>\n</blockquote>\n<ul>\n<li><p><a target=\"_blank\" href=\"https://blog.tier.run/tier-hello-world-demo\">Hello World! example</a> - Step by step guide to adding Tier to your new or existing codebase</p>\n</li>\n<li><p><a target=\"_blank\" href=\"https://tier.run/docs/quickstart\">Quick Start Guide</a> - Step by step to getting up and running with Tier.</p>\n</li>\n<li><p><a target=\"_blank\" href=\"https://tier.run/docs/recipes\">Recipes</a> - Example common pricing models and their corresponding Tier <code>pricing.json</code> representations.</p>\n</li>\n<li><p><a target=\"_blank\" href=\"https://tier.run/docs/cli\">CLI Reference</a> - Documentation for the Tier command line tool.</p>\n</li>\n</ul>\n",
      "contentMarkdown": "You can [find Tier v0.6.2 here](https://github.com/tierrun/tier/releases).\n\nThis update introduces the ability to enter prices in decimal form as well as the ability to switch between test accounts using the canonical URL for the test account.\n\n### Fractional Prices\n\nThe smallest whole unit for a price is 1 cent. Prices can now be represented in fractions of cents.\n\nFor example, the following feature in `pricing.json`\n\n```json\n\n        \"feature:message\": {\n          \"tiers\": [{ \"upto\": 10, \"price\": 0.1 }]\n        }\n```\n\nWill be represented in Stripe as:\n\n![](https://cdn.hashnode.com/res/hashnode/image/upload/v1670448085412/xYAomICYv.png align=\"center\")\n\n### Test Account Switching by URL\n\nA few weeks ago we introduced [tier switch](https://blog.tier.run/tier-switch-git-branch-stripe) which brings the first sandboxes to Stripe. This is useful for everything from testing new ideas in dev to enabling Stripe Preview Deploys.\n\nWith Tier v0.6.2 you can now switch to a test account by including its URL as a parameter in `tier switch`.\n\nFor example:\n\n`tier switch https://dashboard.stripe.com/acct_1MCUwJIR5o5wb1n4/test`\n\n* * *\n\nPlease head over to [https://tier.run/releases](https://tier.run/releases) to check out more changes and install options. As always, `brew upgrade tierrun/tap/tier` works too!\n\n> If you haven't used Tier yet, these resources are a good place to get started:\n\n*   [Hello World! example](https://blog.tier.run/tier-hello-world-demo) - Step by step guide to adding Tier to your new or existing codebase\n    \n*   [Quick Start Guide](https://tier.run/docs/quickstart) - Step by step to getting up and running with Tier.\n    \n*   [Recipes](https://tier.run/docs/recipes) - Example common pricing models and their corresponding Tier `pricing.json` representations.\n    \n*   [CLI Reference](https://tier.run/docs/cli) - Documentation for the Tier command line tool.",
      "hasPolls": false,
      "totalPollVotes": 0,
      "upvotes": 0,
      "downvotes": 0,
      "tags": [
        "6361477ffe8087002da9197b",
        "56744723958ef13879b9554c",
        "56744721958ef13879b94cad"
      ],
      "untaggedFrom": [],
      "upvotedBy": [],
      "downvotedBy": [],
      "popularity": 5809.9803,
      "responses": [],
      "responseCount": 0,
      "replyCount": 0,
      "followers": [],
      "isActive": true,
      "isFeatured": false,
      "isEngaging": false,
      "answeredByTarget": false,
      "inviters": [],
      "isDelisted": false,
      "isNotified": false,
      "duplicatePosts": [],
      "numCollapsed": 0,
      "hasReward": false,
      "bookmarkedIn": [],
      "similarPostIds": [],
      "reactions": [],
      "totalReactions": 0,
      "reactionsByCurrentUser": [],
      "totalReactionsByCurrentUser": 0,
      "isPinnedToBlog": false,
      "disableComments": true,
      "commentsPaused": false,
      "hasLatex": false,
      "syncAlgolia": false,
      "enableToc": false,
      "toc": [],
      "numUniqueUsersWhoReacted": 0,
      "_id": "6391339869b9b75270d62fd3",
      "createdAt": "2022-12-08T00:45:12.003Z",
      "updatedAt": "2022-12-08T00:45:12.003Z",
      "type": "story",
      "partOfPublication": true,
      "title": "Tier v0.6.2",
      "cuid": "clbecxtxc000008l7clxbff7v",
      "dateAdded": "2022-12-08T00:45:12.000Z",
      "hasCustomDate": null,
      "isCoverAttributionHidden": false,
      "coverImageAttribution": "https://unsplash.com/@jdent",
      "coverImagePhotographer": "Jason Dent",
      "slug": "tier-v062",
      "author": "636007d8b09e815e60a5742a",
      "sB": true,
      "isRepublished": false,
      "originalArticleURL": "",
      "readTime": 2,
      "draft": "6390fbbf120246e215ffa3b3",
      "publication": "62a38c37a2c282d2d8377855",
      "ogImage": "",
      "metaTitle": "",
      "metaDescription": "",
      "series": null,
      "__v": 1,
      "badges": [],
      "contributors": [],
      "dateUpdated": "2022-12-08T00:50:38.399Z",
      "pollOptions": [],
      "questionReplies": [],
      "stickCoverToBottom": true,
      "subtitle": "",
      "viewsUpdatedOn": 1682906429741,
      "uniqueReactions": [],
      "reactionToCountMapUnique": { "any": 1 },
      "id": "6391339869b9b75270d62fd3"
    },
    {
      "reward": { "type": "xlm" },
      "sourcedFromGithub": false,
      "githubAsSourceMeta": null,
      "isAnonymous": false,
      "views": 281,
      "slugOverridden": false,
      "coverImage": "",
      "autoGeneratedCover": "",
      "brief": "Stripe Glossary available at github.com/tierrun/tier/wiki/Stripe-Glossary\nGetting to know Stripe can take some time. Not only are there a lot of new concepts to learn, Stripe sometimes likes to use esoteric definitions for some things, such as \"Good-...",
      "content": "<p><img src=\"https://cdn.hashnode.com/res/hashnode/image/upload/v1670352907078/S2Clt2R1w.png\" alt class=\"image--center mx-auto\" /></p>\n<p>Stripe Glossary available at <a target=\"_blank\" href=\"https://github.com/tierrun/tier/wiki/Stripe-Glossary\"><mark>github.com/tierrun/tier/wiki/Stripe-Glossary</mark></a></p>\n<p>Getting to know Stripe can take some time. Not only are there a lot of new concepts to learn, <a target=\"_blank\" href=\"https://stripe.com\">Stripe</a> sometimes likes to use esoteric definitions for some things, such as \"<a target=\"_blank\" href=\"https://github.com/tierrun/tier/wiki/Stripe-Glossary#good-better-best\">Good-better-best</a>\".</p>\n<p>We have developed a <a target=\"_blank\" href=\"https://github.com/tierrun/tier/wiki/Stripe-Glossary\">Stripe Glossary</a> that can be used as a reference. This is useful as you navigate Stripe's documentation and should help demystify the meaning of all these new terms you will encounter.</p>\n<p>We will continue to update and evolve the glossary and hope it can be a useful resource for anyone who is in the process of developing their understanding of <a target=\"_blank\" href=\"https://www.stripe.com\">Stripe</a> and its capabilities.</p>\n<p>You can find the working glossary here: <a target=\"_blank\" href=\"https://github.com/tierrun/tier/wiki/Stripe-Glossary\"><strong>https://github.com/tierrun/tier/wiki/Stripe-Glossary</strong></a><strong>.</strong> We welcome any suggested updates that you might have.</p>\n<p>Here is the current list of terms, with direct links to their definitions.</p>\n<ul>\n<li><p><a target=\"_blank\" href=\"https://github.com/tierrun/tier/wiki/Stripe-Glossary#3d-secure\">3D Secure</a></p>\n</li>\n<li><p><a target=\"_blank\" href=\"https://github.com/tierrun/tier/wiki/Stripe-Glossary#aggregate-metered-usage\">Aggregate Metered Usage</a></p>\n</li>\n<li><p><a target=\"_blank\" href=\"https://github.com/tierrun/tier/wiki/Stripe-Glossary#aggregation-mode\">Aggregation Mode</a></p>\n</li>\n<li><p><a target=\"_blank\" href=\"https://github.com/tierrun/tier/wiki/Stripe-Glossary#australian-business-numbers\">Australian Business Numbers</a></p>\n</li>\n<li><p><a target=\"_blank\" href=\"https://github.com/tierrun/tier/wiki/Stripe-Glossary#billing-cycle-anchor\">Billing Cycle Anchor</a></p>\n</li>\n<li><p><a target=\"_blank\" href=\"https://github.com/tierrun/tier/wiki/Stripe-Glossary#billing-threshold\">Billing Threshold</a></p>\n</li>\n<li><p><a target=\"_blank\" href=\"https://github.com/tierrun/tier/wiki/Stripe-Glossary#client-platform\">Client Platform</a></p>\n</li>\n<li><p><a target=\"_blank\" href=\"https://github.com/tierrun/tier/wiki/Stripe-Glossary#create-a-session\">Create a Session</a></p>\n</li>\n<li><p><a target=\"_blank\" href=\"https://github.com/tierrun/tier/wiki/Stripe-Glossary#custom-accounts\">Custom Accounts</a></p>\n</li>\n<li><p><a target=\"_blank\" href=\"https://github.com/tierrun/tier/wiki/Stripe-Glossary#customer-portal-session\">Customer Portal (session)</a></p>\n</li>\n<li><p><a target=\"_blank\" href=\"https://github.com/tierrun/tier/wiki/Stripe-Glossary#dashboard\">Dashboard</a></p>\n</li>\n<li><p><a target=\"_blank\" href=\"https://github.com/tierrun/tier/wiki/Stripe-Glossary#destination-charge\">Destination Charge</a></p>\n</li>\n<li><p><a target=\"_blank\" href=\"https://github.com/tierrun/tier/wiki/Stripe-Glossary#direct-charge\">Direct Charge</a></p>\n</li>\n<li><p><a target=\"_blank\" href=\"https://github.com/tierrun/tier/wiki/Stripe-Glossary#dunning-email\">Dunning Email</a></p>\n</li>\n<li><p><a target=\"_blank\" href=\"https://github.com/tierrun/tier/wiki/Stripe-Glossary#european-vat-numbers\">European VAT Numbers</a></p>\n</li>\n<li><p><a target=\"_blank\" href=\"https://github.com/tierrun/tier/wiki/Stripe-Glossary#exclusive-tax-behavior\">Exclusive (Tax behavior)</a></p>\n</li>\n<li><p><a target=\"_blank\" href=\"https://github.com/tierrun/tier/wiki/Stripe-Glossary#express-account\">Express Account</a></p>\n</li>\n<li><p><a target=\"_blank\" href=\"https://github.com/tierrun/tier/wiki/Stripe-Glossary#freemium\">Freemium</a></p>\n</li>\n<li><p><a target=\"_blank\" href=\"https://github.com/tierrun/tier/wiki/Stripe-Glossary#good-better-best\">Good-better-best</a></p>\n</li>\n<li><p><a target=\"_blank\" href=\"https://github.com/tierrun/tier/wiki/Stripe-Glossary#graduated-pricing\">Graduated Pricing</a></p>\n</li>\n<li><p><a target=\"_blank\" href=\"https://github.com/tierrun/tier/wiki/Stripe-Glossary#inclusive-tax-behavior\">Inclusive (Tax Behavior)</a></p>\n</li>\n<li><p><a target=\"_blank\" href=\"https://github.com/tierrun/tier/wiki/Stripe-Glossary#inline-pricing\">Inline Pricing</a></p>\n</li>\n<li><p><a target=\"_blank\" href=\"https://github.com/tierrun/tier/wiki/Stripe-Glossary#landing-page\">Landing Page</a></p>\n</li>\n<li><p><a target=\"_blank\" href=\"https://github.com/tierrun/tier/wiki/Stripe-Glossary#licensed-usage\">Licensed Usage</a></p>\n</li>\n<li><p><a target=\"_blank\" href=\"https://github.com/tierrun/tier/wiki/Stripe-Glossary#metered-billing\">Metered Billing</a></p>\n</li>\n<li><p><a target=\"_blank\" href=\"https://github.com/tierrun/tier/wiki/Stripe-Glossary#metered-usage\">Metered Usage</a></p>\n</li>\n<li><p><a target=\"_blank\" href=\"https://github.com/tierrun/tier/wiki/Stripe-Glossary#multi-currency-prices\">Multi-currency Prices</a></p>\n</li>\n<li><p><a target=\"_blank\" href=\"https://github.com/tierrun/tier/wiki/Stripe-Glossary#package-pricing\">Package Pricing</a></p>\n</li>\n<li><p><a target=\"_blank\" href=\"https://github.com/tierrun/tier/wiki/Stripe-Glossary#pay-what-you-want-pricing\">Pay-what-you-want Pricing</a></p>\n</li>\n<li><p><a target=\"_blank\" href=\"https://github.com/tierrun/tier/wiki/Stripe-Glossary#pause-payment-collection\">Pause (Payment Collection)</a></p>\n</li>\n<li><p><a target=\"_blank\" href=\"https://github.com/tierrun/tier/wiki/Stripe-Glossary#paymentintent\">PaymentIntent</a></p>\n</li>\n<li><p><a target=\"_blank\" href=\"https://github.com/tierrun/tier/wiki/Stripe-Glossary#payment-form\">Payment Form</a></p>\n</li>\n<li><p><a target=\"_blank\" href=\"https://github.com/tierrun/tier/wiki/Stripe-Glossary#payment-status\">Payment Status</a></p>\n</li>\n<li><p><a target=\"_blank\" href=\"https://github.com/tierrun/tier/wiki/Stripe-Glossary#payment-window\">Payment Window.</a></p>\n</li>\n<li><p><a target=\"_blank\" href=\"https://github.com/tierrun/tier/wiki/Stripe-Glossary#per-seat\">Per-seat</a></p>\n</li>\n<li><p><a target=\"_blank\" href=\"https://github.com/tierrun/tier/wiki/Stripe-Glossary#pricing-page\">Pricing Page</a></p>\n</li>\n<li><p><a target=\"_blank\" href=\"https://github.com/tierrun/tier/wiki/Stripe-Glossary#priceops\">PriceOps</a></p>\n</li>\n<li><p><a target=\"_blank\" href=\"https://github.com/tierrun/tier/wiki/Stripe-Glossary#product-catalog\">Product Catalog</a></p>\n</li>\n<li><p><a target=\"_blank\" href=\"https://github.com/tierrun/tier/wiki/Stripe-Glossary#provision\">Provision</a></p>\n</li>\n<li><p><a target=\"_blank\" href=\"https://github.com/tierrun/tier/wiki/Stripe-Glossary#quotes\">Quotes</a></p>\n</li>\n<li><p><a target=\"_blank\" href=\"https://github.com/tierrun/tier/wiki/Stripe-Glossary#revenue-recognition\">Revenue Recognition</a></p>\n</li>\n<li><p><a target=\"_blank\" href=\"https://github.com/tierrun/tier/wiki/Stripe-Glossary#reverse-charge\">Reverse Charge</a></p>\n</li>\n<li><p><a target=\"_blank\" href=\"https://github.com/tierrun/tier/wiki/Stripe-Glossary#roll-ups\">Roll Ups</a></p>\n</li>\n<li><p><a target=\"_blank\" href=\"https://github.com/tierrun/tier/wiki/Stripe-Glossary#setupintents\">SetupIntents</a></p>\n</li>\n<li><p><a target=\"_blank\" href=\"https://github.com/tierrun/tier/wiki/Stripe-Glossary#sigma-queries\">Sigma (queries)</a></p>\n</li>\n<li><p><a target=\"_blank\" href=\"https://github.com/tierrun/tier/wiki/Stripe-Glossary#smart-retries\">Smart Retries</a></p>\n</li>\n<li><p><a target=\"_blank\" href=\"https://github.com/tierrun/tier/wiki/Stripe-Glossary#standard-account\">Standard Account</a></p>\n</li>\n<li><p><a target=\"_blank\" href=\"https://github.com/tierrun/tier/wiki/Stripe-Glossary#standard-pricing\">Standard Pricing</a></p>\n</li>\n<li><p><a target=\"_blank\" href=\"https://github.com/tierrun/tier/wiki/Stripe-Glossary#stripe\">Stripe</a></p>\n</li>\n<li><p><a target=\"_blank\" href=\"https://github.com/tierrun/tier/wiki/Stripe-Glossary#stripe-cli\">Stripe CLI</a></p>\n</li>\n<li><p><a target=\"_blank\" href=\"https://github.com/tierrun/tier/wiki/Stripe-Glossary#stripe-hosted-ui\">Stripe-hosted UI</a></p>\n</li>\n<li><p><a target=\"_blank\" href=\"https://github.com/tierrun/tier/wiki/Stripe-Glossary#stripe-ruby-library\">Stripe Ruby Library</a></p>\n</li>\n<li><p><a target=\"_blank\" href=\"https://github.com/tierrun/tier/wiki/Stripe-Glossary#stripe-tax\">Stripe Tax</a></p>\n</li>\n<li><p><a target=\"_blank\" href=\"https://github.com/tierrun/tier/wiki/Stripe-Glossary#subscription\">Subscription</a></p>\n</li>\n<li><p><a target=\"_blank\" href=\"https://github.com/tierrun/tier/wiki/Stripe-Glossary#subscription-events\">Subscription Events</a></p>\n</li>\n<li><p><a target=\"_blank\" href=\"https://github.com/tierrun/tier/wiki/Stripe-Glossary#subscription-lifecycle\">Subscription Lifecycle.</a></p>\n</li>\n<li><p><a target=\"_blank\" href=\"https://github.com/tierrun/tier/wiki/Stripe-Glossary#subscription-phases\">Subscription Phases</a></p>\n</li>\n<li><p><a target=\"_blank\" href=\"https://github.com/tierrun/tier/wiki/Stripe-Glossary#subscription-schedules\">Subscription Schedules</a></p>\n</li>\n<li><p><a target=\"_blank\" href=\"https://github.com/tierrun/tier/wiki/Stripe-Glossary#tax-exempt\">Tax Exempt</a></p>\n</li>\n<li><p><a target=\"_blank\" href=\"https://github.com/tierrun/tier/wiki/Stripe-Glossary#tax-rates\">Tax Rates</a></p>\n</li>\n<li><p><a target=\"_blank\" href=\"https://github.com/tierrun/tier/wiki/Stripe-Glossary#tiered-pricing\">Tiered Pricing</a></p>\n</li>\n<li><p><a target=\"_blank\" href=\"https://github.com/tierrun/tier/wiki/Stripe-Glossary#trials\">Trials</a></p>\n</li>\n<li><p><a target=\"_blank\" href=\"https://github.com/tierrun/tier/wiki/Stripe-Glossary#usage-based-pricing\">Usage-based Pricing</a></p>\n</li>\n<li><p><a target=\"_blank\" href=\"https://github.com/tierrun/tier/wiki/Stripe-Glossary#variable-pricing\">Variable Pricing</a></p>\n</li>\n<li><p><a target=\"_blank\" href=\"https://github.com/tierrun/tier/wiki/Stripe-Glossary#volume-based-billing\">Volume Based Billing</a></p>\n</li>\n<li><p><a target=\"_blank\" href=\"https://github.com/tierrun/tier/wiki/Stripe-Glossary#upsell\">Upsell</a></p>\n</li>\n<li><p><a target=\"_blank\" href=\"https://github.com/tierrun/tier/wiki/Stripe-Glossary#webhook\">Webhook</a></p>\n</li>\n<li><p><a target=\"_blank\" href=\"https://github.com/tierrun/tier/wiki/Stripe-Glossary#webhook-endpoint\">Webhook Endpoint</a></p>\n</li>\n<li><p><a target=\"_blank\" href=\"https://github.com/tierrun/tier/wiki/Stripe-Glossary#webhook-events\">Webhook Events</a></p>\n</li>\n</ul>\n",
      "contentMarkdown": "![](https://cdn.hashnode.com/res/hashnode/image/upload/v1670352907078/S2Clt2R1w.png align=\"center\")\n\nStripe Glossary available at [<mark>github.com/tierrun/tier/wiki/Stripe-Glossary</mark>](https://github.com/tierrun/tier/wiki/Stripe-Glossary)\n\nGetting to know Stripe can take some time. Not only are there a lot of new concepts to learn, [Stripe](https://stripe.com) sometimes likes to use esoteric definitions for some things, such as \"[Good-better-best](https://github.com/tierrun/tier/wiki/Stripe-Glossary#good-better-best)\".\n\nWe have developed a [Stripe Glossary](https://github.com/tierrun/tier/wiki/Stripe-Glossary) that can be used as a reference. This is useful as you navigate Stripe's documentation and should help demystify the meaning of all these new terms you will encounter.\n\nWe will continue to update and evolve the glossary and hope it can be a useful resource for anyone who is in the process of developing their understanding of [Stripe](https://www.stripe.com) and its capabilities.\n\nYou can find the working glossary here: [**https://github.com/tierrun/tier/wiki/Stripe-Glossary**](https://github.com/tierrun/tier/wiki/Stripe-Glossary)**.** We welcome any suggested updates that you might have.\n\nHere is the current list of terms, with direct links to their definitions.\n\n*   [3D Secure](https://github.com/tierrun/tier/wiki/Stripe-Glossary#3d-secure)\n    \n*   [Aggregate Metered Usage](https://github.com/tierrun/tier/wiki/Stripe-Glossary#aggregate-metered-usage)\n    \n*   [Aggregation Mode](https://github.com/tierrun/tier/wiki/Stripe-Glossary#aggregation-mode)\n    \n*   [Australian Business Numbers](https://github.com/tierrun/tier/wiki/Stripe-Glossary#australian-business-numbers)\n    \n*   [Billing Cycle Anchor](https://github.com/tierrun/tier/wiki/Stripe-Glossary#billing-cycle-anchor)\n    \n*   [Billing Threshold](https://github.com/tierrun/tier/wiki/Stripe-Glossary#billing-threshold)\n    \n*   [Client Platform](https://github.com/tierrun/tier/wiki/Stripe-Glossary#client-platform)\n    \n*   [Create a Session](https://github.com/tierrun/tier/wiki/Stripe-Glossary#create-a-session)\n    \n*   [Custom Accounts](https://github.com/tierrun/tier/wiki/Stripe-Glossary#custom-accounts)\n    \n*   [Customer Portal (session)](https://github.com/tierrun/tier/wiki/Stripe-Glossary#customer-portal-session)\n    \n*   [Dashboard](https://github.com/tierrun/tier/wiki/Stripe-Glossary#dashboard)\n    \n*   [Destination Charge](https://github.com/tierrun/tier/wiki/Stripe-Glossary#destination-charge)\n    \n*   [Direct Charge](https://github.com/tierrun/tier/wiki/Stripe-Glossary#direct-charge)\n    \n*   [Dunning Email](https://github.com/tierrun/tier/wiki/Stripe-Glossary#dunning-email)\n    \n*   [European VAT Numbers](https://github.com/tierrun/tier/wiki/Stripe-Glossary#european-vat-numbers)\n    \n*   [Exclusive (Tax behavior)](https://github.com/tierrun/tier/wiki/Stripe-Glossary#exclusive-tax-behavior)\n    \n*   [Express Account](https://github.com/tierrun/tier/wiki/Stripe-Glossary#express-account)\n    \n*   [Freemium](https://github.com/tierrun/tier/wiki/Stripe-Glossary#freemium)\n    \n*   [Good-better-best](https://github.com/tierrun/tier/wiki/Stripe-Glossary#good-better-best)\n    \n*   [Graduated Pricing](https://github.com/tierrun/tier/wiki/Stripe-Glossary#graduated-pricing)\n    \n*   [Inclusive (Tax Behavior)](https://github.com/tierrun/tier/wiki/Stripe-Glossary#inclusive-tax-behavior)\n    \n*   [Inline Pricing](https://github.com/tierrun/tier/wiki/Stripe-Glossary#inline-pricing)\n    \n*   [Landing Page](https://github.com/tierrun/tier/wiki/Stripe-Glossary#landing-page)\n    \n*   [Licensed Usage](https://github.com/tierrun/tier/wiki/Stripe-Glossary#licensed-usage)\n    \n*   [Metered Billing](https://github.com/tierrun/tier/wiki/Stripe-Glossary#metered-billing)\n    \n*   [Metered Usage](https://github.com/tierrun/tier/wiki/Stripe-Glossary#metered-usage)\n    \n*   [Multi-currency Prices](https://github.com/tierrun/tier/wiki/Stripe-Glossary#multi-currency-prices)\n    \n*   [Package Pricing](https://github.com/tierrun/tier/wiki/Stripe-Glossary#package-pricing)\n    \n*   [Pay-what-you-want Pricing](https://github.com/tierrun/tier/wiki/Stripe-Glossary#pay-what-you-want-pricing)\n    \n*   [Pause (Payment Collection)](https://github.com/tierrun/tier/wiki/Stripe-Glossary#pause-payment-collection)\n    \n*   [PaymentIntent](https://github.com/tierrun/tier/wiki/Stripe-Glossary#paymentintent)\n    \n*   [Payment Form](https://github.com/tierrun/tier/wiki/Stripe-Glossary#payment-form)\n    \n*   [Payment Status](https://github.com/tierrun/tier/wiki/Stripe-Glossary#payment-status)\n    \n*   [Payment Window.](https://github.com/tierrun/tier/wiki/Stripe-Glossary#payment-window)\n    \n*   [Per-seat](https://github.com/tierrun/tier/wiki/Stripe-Glossary#per-seat)\n    \n*   [Pricing Page](https://github.com/tierrun/tier/wiki/Stripe-Glossary#pricing-page)\n    \n*   [PriceOps](https://github.com/tierrun/tier/wiki/Stripe-Glossary#priceops)\n    \n*   [Product Catalog](https://github.com/tierrun/tier/wiki/Stripe-Glossary#product-catalog)\n    \n*   [Provision](https://github.com/tierrun/tier/wiki/Stripe-Glossary#provision)\n    \n*   [Quotes](https://github.com/tierrun/tier/wiki/Stripe-Glossary#quotes)\n    \n*   [Revenue Recognition](https://github.com/tierrun/tier/wiki/Stripe-Glossary#revenue-recognition)\n    \n*   [Reverse Charge](https://github.com/tierrun/tier/wiki/Stripe-Glossary#reverse-charge)\n    \n*   [Roll Ups](https://github.com/tierrun/tier/wiki/Stripe-Glossary#roll-ups)\n    \n*   [SetupIntents](https://github.com/tierrun/tier/wiki/Stripe-Glossary#setupintents)\n    \n*   [Sigma (queries)](https://github.com/tierrun/tier/wiki/Stripe-Glossary#sigma-queries)\n    \n*   [Smart Retries](https://github.com/tierrun/tier/wiki/Stripe-Glossary#smart-retries)\n    \n*   [Standard Account](https://github.com/tierrun/tier/wiki/Stripe-Glossary#standard-account)\n    \n*   [Standard Pricing](https://github.com/tierrun/tier/wiki/Stripe-Glossary#standard-pricing)\n    \n*   [Stripe](https://github.com/tierrun/tier/wiki/Stripe-Glossary#stripe)\n    \n*   [Stripe CLI](https://github.com/tierrun/tier/wiki/Stripe-Glossary#stripe-cli)\n    \n*   [Stripe-hosted UI](https://github.com/tierrun/tier/wiki/Stripe-Glossary#stripe-hosted-ui)\n    \n*   [Stripe Ruby Library](https://github.com/tierrun/tier/wiki/Stripe-Glossary#stripe-ruby-library)\n    \n*   [Stripe Tax](https://github.com/tierrun/tier/wiki/Stripe-Glossary#stripe-tax)\n    \n*   [Subscription](https://github.com/tierrun/tier/wiki/Stripe-Glossary#subscription)\n    \n*   [Subscription Events](https://github.com/tierrun/tier/wiki/Stripe-Glossary#subscription-events)\n    \n*   [Subscription Lifecycle.](https://github.com/tierrun/tier/wiki/Stripe-Glossary#subscription-lifecycle)\n    \n*   [Subscription Phases](https://github.com/tierrun/tier/wiki/Stripe-Glossary#subscription-phases)\n    \n*   [Subscription Schedules](https://github.com/tierrun/tier/wiki/Stripe-Glossary#subscription-schedules)\n    \n*   [Tax Exempt](https://github.com/tierrun/tier/wiki/Stripe-Glossary#tax-exempt)\n    \n*   [Tax Rates](https://github.com/tierrun/tier/wiki/Stripe-Glossary#tax-rates)\n    \n*   [Tiered Pricing](https://github.com/tierrun/tier/wiki/Stripe-Glossary#tiered-pricing)\n    \n*   [Trials](https://github.com/tierrun/tier/wiki/Stripe-Glossary#trials)\n    \n*   [Usage-based Pricing](https://github.com/tierrun/tier/wiki/Stripe-Glossary#usage-based-pricing)\n    \n*   [Variable Pricing](https://github.com/tierrun/tier/wiki/Stripe-Glossary#variable-pricing)\n    \n*   [Volume Based Billing](https://github.com/tierrun/tier/wiki/Stripe-Glossary#volume-based-billing)\n    \n*   [Upsell](https://github.com/tierrun/tier/wiki/Stripe-Glossary#upsell)\n    \n*   [Webhook](https://github.com/tierrun/tier/wiki/Stripe-Glossary#webhook)\n    \n*   [Webhook Endpoint](https://github.com/tierrun/tier/wiki/Stripe-Glossary#webhook-endpoint)\n    \n*   [Webhook Events](https://github.com/tierrun/tier/wiki/Stripe-Glossary#webhook-events)",
      "hasPolls": false,
      "totalPollVotes": 0,
      "upvotes": 0,
      "downvotes": 0,
      "tags": ["56744723958ef13879b9554c", "56744721958ef13879b94cad"],
      "untaggedFrom": [],
      "upvotedBy": [],
      "downvotedBy": [],
      "popularity": 5807.5517,
      "responses": [],
      "responseCount": 0,
      "replyCount": 0,
      "followers": [],
      "isActive": true,
      "isFeatured": false,
      "isEngaging": false,
      "answeredByTarget": false,
      "inviters": [],
      "isDelisted": false,
      "isNotified": false,
      "duplicatePosts": [],
      "numCollapsed": 0,
      "hasReward": false,
      "bookmarkedIn": [],
      "similarPostIds": [],
      "reactions": [],
      "totalReactions": 0,
      "reactionsByCurrentUser": [],
      "totalReactionsByCurrentUser": 0,
      "isPinnedToBlog": false,
      "disableComments": false,
      "commentsPaused": false,
      "hasLatex": false,
      "syncAlgolia": false,
      "enableToc": false,
      "toc": [],
      "numUniqueUsersWhoReacted": 0,
      "_id": "638f88b2e954e5a488f2ec21",
      "createdAt": "2022-12-06T18:23:46.982Z",
      "updatedAt": "2022-12-06T18:23:46.982Z",
      "type": "story",
      "partOfPublication": true,
      "title": "Stripe Glossary",
      "subtitle": "A quick reference for esoteric Stripe terms",
      "cuid": "clbcjvh2d001d08mqgjtkdu1d",
      "dateAdded": "2022-12-06T18:23:46.981Z",
      "hasCustomDate": null,
      "isCoverAttributionHidden": false,
      "coverImageAttribution": "",
      "coverImagePhotographer": "",
      "slug": "stripe-glossary",
      "author": "61eabf4c0b35507a93a04907",
      "sB": false,
      "isRepublished": false,
      "originalArticleURL": "",
      "readTime": 2,
      "draft": "638ebb00895a9daa034fcdb3",
      "publication": "62a38c37a2c282d2d8377855",
      "ogImage": "https://cdn.hashnode.com/res/hashnode/image/upload/v1670353002753/aA1qX_EG1.png",
      "metaTitle": "Stripe Glossary of terms",
      "metaDescription": "Everything you need to know about Stripe. Learn definitions of terms used in Stripe documentation.",
      "series": null,
      "__v": 1,
      "badges": [],
      "contributors": [],
      "dateUpdated": "2022-12-06T19:10:29.467Z",
      "pendingPublicationApproval": false,
      "pollOptions": [],
      "questionReplies": [],
      "stickCoverToBottom": true,
      "viewsUpdatedOn": 1687302027182,
      "uniqueReactions": [],
      "reactionToCountMapUnique": { "any": 1 },
      "id": "638f88b2e954e5a488f2ec21"
    },
    {
      "reward": { "type": "xlm" },
      "sourcedFromGithub": false,
      "githubAsSourceMeta": null,
      "isAnonymous": false,
      "views": 71,
      "slugOverridden": false,
      "coverImage": "",
      "autoGeneratedCover": "",
      "brief": "You can find the Tier CLI v0.6 here. \nThe v0.6 release introduces a way to manage customer data stored in stripe for any Tier managed org.\nTo set the email, description, name, phone, or user-defined metadata, for an org, set the new info field for /v...",
      "content": "<p>You can <a target=\"_blank\" href=\"http://github.com/tierrun/tier/releases/tag/v0.6.0\">find the Tier CLI v0.6 here</a>. </p>\n<p>The v0.6 release introduces a way to manage customer data stored in stripe for any Tier managed org.</p>\n<p>To set the <em>email</em>, <em>description</em>, <em>name</em>, <em>phone</em>, or <em>user-defined metadata</em>, for an org, set the new <code>info</code> field for <code>/v1/subscribe</code> request. In addition to this change, a minimum of one phase for a <code>/v1/subscribe</code> request is no longer required.</p>\n<p>The new fields are:</p>\n<ul>\n<li>description</li>\n<li>name</li>\n<li>phone</li>\n<li>email</li>\n<li>metadata</li>\n</ul>\n<p>Additionally, the <code>/v1/whois</code> endpoint will now report up-to-date attributes if the query parameter <code>include=info</code> is present.</p>\n<p>Both <a target=\"_blank\" href=\"https://www.tier.run/docs/sdk/\">the Go and Node SDKs have been updated</a>. </p>\n<p>Please head over to <a target=\"_blank\" href=\"https://tier.run/releases\">https://tier.run/releases</a> to check out more changes and install options. As always, <code>brew upgrade tierrun/tap/tier</code> works too!</p>\n<blockquote>\n<p>If you haven't used Tier yet, these resources are a good place to get started:</p>\n<ul>\n<li><a target=\"_blank\" href=\"https://blog.tier.run/tier-hello-world-demo\">Hello World! example</a> - Step by step guide to adding Tier to your new or existing codebase</li>\n<li><a target=\"_blank\" href=\"https://tier.run/docs/quickstart\">Quick Start Guide</a> - Step by step to\ngetting up and running with Tier.</li>\n<li><a target=\"_blank\" href=\"https://tier.run/docs/recipes\">Recipes</a> - Example common pricing models and\ntheir corresponding Tier <code>pricing.json</code> representations.</li>\n<li><a target=\"_blank\" href=\"https://tier.run/docs/cli\">CLI Reference</a> - Documentation for the Tier\ncommand line tool.</li>\n</ul>\n</blockquote>\n",
      "contentMarkdown": "You can [find the Tier CLI v0.6 here](http://github.com/tierrun/tier/releases/tag/v0.6.0). \n\nThe v0.6 release introduces a way to manage customer data stored in stripe for any Tier managed org.\n\nTo set the *email*, *description*, *name*, *phone*, or *user-defined metadata*, for an org, set the new `info` field for `/v1/subscribe` request. In addition to this change, a minimum of one phase for a `/v1/subscribe` request is no longer required.\n\nThe new fields are:\n- description\n- name\n- phone\n- email\n- metadata\n\nAdditionally, the `/v1/whois` endpoint will now report up-to-date attributes if the query parameter `include=info` is present.\n\nBoth [the Go and Node SDKs have been updated](https://www.tier.run/docs/sdk/). \n\nPlease head over to [https://tier.run/releases](https://tier.run/releases) to check out more changes and install options. As always, `brew upgrade tierrun/tap/tier` works too!\n\n>If you haven't used Tier yet, these resources are a good place to get started:\n* [Hello World! example](https://blog.tier.run/tier-hello-world-demo) - Step by step guide to adding Tier to your new or existing codebase\n* [Quick Start Guide](https://tier.run/docs/quickstart) - Step by step to\n  getting up and running with Tier.\n* [Recipes](https://tier.run/docs/recipes) - Example common pricing models and\n  their corresponding Tier `pricing.json` representations.\n* [CLI Reference](https://tier.run/docs/cli) - Documentation for the Tier\n  command line tool.",
      "hasPolls": false,
      "totalPollVotes": 0,
      "upvotes": 0,
      "downvotes": 0,
      "tags": [
        "56744723958ef13879b9554c",
        "56744722958ef13879b950a5",
        "56744722958ef13879b94ffb",
        "631ca902f73f4734bc054995"
      ],
      "untaggedFrom": [],
      "upvotedBy": [],
      "downvotedBy": [],
      "popularity": 5794.6801,
      "responses": [],
      "responseCount": 0,
      "replyCount": 0,
      "followers": [],
      "isActive": true,
      "isFeatured": false,
      "isEngaging": false,
      "answeredByTarget": false,
      "inviters": [],
      "isDelisted": false,
      "isNotified": false,
      "duplicatePosts": [],
      "numCollapsed": 0,
      "hasReward": false,
      "bookmarkedIn": [],
      "similarPostIds": [],
      "reactions": [],
      "totalReactions": 0,
      "reactionsByCurrentUser": [],
      "totalReactionsByCurrentUser": 0,
      "isPinnedToBlog": false,
      "disableComments": false,
      "commentsPaused": false,
      "hasLatex": false,
      "syncAlgolia": false,
      "enableToc": false,
      "toc": [],
      "numUniqueUsersWhoReacted": 0,
      "_id": "6386b21c5beda34842c550f9",
      "createdAt": "2022-11-30T01:30:04.265Z",
      "updatedAt": "2022-11-30T01:30:04.265Z",
      "type": "story",
      "partOfPublication": true,
      "title": "Tier CLI v0.6",
      "cuid": "clb2z0pyf000308la6s5d137x",
      "dateAdded": "2022-11-30T01:30:04.263Z",
      "hasCustomDate": null,
      "isCoverAttributionHidden": false,
      "coverImageAttribution": "",
      "coverImagePhotographer": "",
      "slug": "tier-cli-v06",
      "author": "636007d8b09e815e60a5742a",
      "sB": false,
      "isRepublished": false,
      "originalArticleURL": null,
      "readTime": 1,
      "draft": "63866601ce34d53afa545877",
      "publication": "62a38c37a2c282d2d8377855",
      "ogImage": null,
      "metaTitle": null,
      "metaDescription": null,
      "viewsUpdatedOn": 1685165427267,
      "pollOptions": [],
      "badges": [],
      "questionReplies": [],
      "contributors": [],
      "uniqueReactions": [],
      "reactionToCountMapUnique": { "any": 1 },
      "id": "6386b21c5beda34842c550f9"
    },
    {
      "reward": { "type": "xlm" },
      "sourcedFromGithub": false,
      "githubAsSourceMeta": null,
      "isAnonymous": false,
      "views": 195,
      "slugOverridden": false,
      "coverImage": "https://cdn.hashnode.com/res/hashnode/image/unsplash/2Q3Ivd-HsaM/upload/v1669738069821/Fgac7fp5Z.jpeg",
      "autoGeneratedCover": "",
      "brief": "Interviews... interviews... If you've ever switched jobs then you know there can be good interviews, and there can be really bad ones. Sometimes a bad interview means it's a bad company. Sometimes it means you aren't the right hire for them. \nIntervi...",
      "content": "<p>Interviews... interviews... If you've ever switched jobs then you know there can be good interviews, and there can be really bad ones. Sometimes a bad interview means it's a bad company. Sometimes it means you aren't the right hire for them. </p>\n<p>Interviews are typically structured as a 1-way conversation. Sometimes there is a cursory \"do you have any questions for me?\" as the interviewer glances at their watch with a few minutes left before your time is up. </p>\n<p>The truth is that it's very hard to stand out in an interview when you are responding to questions. The best you can hope for is to check a few boxes in an otherwise obscure and fuzzy process. </p>\n<p>How can you turn any interview from boring to engaging? From mundane to exciting? <strong>Asking great questions!</strong> </p>\n<p>Interviewees who ask great questions stand out from the pack and they look and sounds like leaders. Asking good questions is a skill for you to develop. For the person on the receiving end, a good question demonstrates that you have a depth of understanding, an earnest interest, and that you have leadership skills and the ability to influence. </p>\n<p>The right questions to ask are going to be different in every situation, but there are a few that can be helpful in any situation when you are interviewing with a hiring manager. </p>\n<p><strong>1. What is the team culture like? Why is it like that?</strong></p>\n<p>You'll never get a consistent answer on this one, and sometimes it might be hard to get a truthful answer. What you are told may speak volumes about not only the company, but more importantly how the person you are asking perceives the company itself. Asking \"why is it this way?\" may open up a discussion about values and leadership, or you may find some subtle finger pointing going on. Keep an eye out for 🚩🚩🚩 red flags.</p>\n<p>Other questions you could ask:</p>\n<ul>\n<li>How do decisions get made?</li>\n<li>What happens if there isn't consensus? </li>\n<li>How often does the entire company meet? Who leads that meeting?</li>\n</ul>\n<p><strong>2. What do you think sets this company apart from its competitors?</strong></p>\n<p>This is a broad question. Product and goto-market differentiation are subsets of this. The interviewer may focus on one or the other, or ideally they will be able to speak more broadly about what makes a company special. It might be a visionary CEO (Marc Benioff, Salesforce), it could be a particular cultural environment (Spotify), or it may be a special and defensible technology (Google). Whatever it is, listen for the signs that the company really is special and that it's a place where you truly want to invest your time and career. </p>\n<p>Other questions you could ask:</p>\n<ul>\n<li>Do you have product-market fit? When did you find it? What has changed since then?</li>\n<li>Do customer's help shape the roadmap? What kinds of requests do they make?</li>\n<li>Who does support? How do they share feedback/requests/requirements with the rest of the company?</li>\n</ul>\n<p><strong>3. What is the company's mission and vision? </strong></p>\n<p>Boring right? Wrong! This is the right question to ask if you are speaking with multiple people. Their ability to give you an answer that is consistent with their peers is a useful indicator of the level of cohesion within the company. A great leader spends a significant amount of time making sure everyone is playing from the same sheet of music. It can also be a good topic for you, your skills and how your role will contribute to things the company has prioritized.</p>\n<p>Other questions you could ask:</p>\n<ul>\n<li>Does this mission statement/vision/values change often? </li>\n<li>How could they change over time?</li>\n<li>Does everyone in the company have a hand in crafting the vision, or is it shared by leadership? </li>\n</ul>\n<p><strong>4. What challenges has the company faced and how did it overcome them?</strong></p>\n<p>Startups often face significant challenges in their early stages, such as funding, market fit, and product development. Asking about the specific challenges the company has faced and how it has managed to overcome them can give you a better understanding of the company and its ability to succeed.</p>\n<ul>\n<li>How much runway does the company have?</li>\n<li>Do you plan to raise more money? Do you have a rough idea of when? </li>\n<li>Is the company profitable, or does it plan to be profitable? How are you balance growth with stability/runway.</li>\n</ul>\n<p><strong>5. What is the company's growth strategy?</strong></p>\n<p>In order to be successful, startups need to have a go-to market strategy. Asking about this will help you to understand the company's plans for the future and how you can contribute to its success. It will also help you to determine whether the company is a good fit for your skills and experience. Are they focused and specific in their answers? Or you do you get a \"you're in engineering, you don't <em>rreeallllyyy</em> need to now this stuff, right?\" kind of vibe.</p>\n<ul>\n<li>What metrics are you focused on? </li>\n<li>How do you decide which work to prioritize to support growth? </li>\n<li>How important is account expansion vs new business?</li>\n<li>How did you come up with the current pricing? Is it working as-is or do you have plans to change it? </li>\n</ul>\n<p>There are many ways to handle an interview. Sometimes you'll simply want to find an opportunity to demonstrate your skills, other times you'll find yourself being evaluated for \"cultural fit\". Whatever situation you find yourself in: remember to ask good questions. Be specific, expect precision. It's your your change to be certain you are going somewhere exciting, and it may uncover the red flags that would otherwise get glossed over. </p>\n",
      "contentMarkdown": "Interviews... interviews... If you've ever switched jobs then you know there can be good interviews, and there can be really bad ones. Sometimes a bad interview means it's a bad company. Sometimes it means you aren't the right hire for them. \n\nInterviews are typically structured as a 1-way conversation. Sometimes there is a cursory \"do you have any questions for me?\" as the interviewer glances at their watch with a few minutes left before your time is up. \n\nThe truth is that it's very hard to stand out in an interview when you are responding to questions. The best you can hope for is to check a few boxes in an otherwise obscure and fuzzy process. \n\nHow can you turn any interview from boring to engaging? From mundane to exciting? **Asking great questions!** \n\nInterviewees who ask great questions stand out from the pack and they look and sounds like leaders. Asking good questions is a skill for you to develop. For the person on the receiving end, a good question demonstrates that you have a depth of understanding, an earnest interest, and that you have leadership skills and the ability to influence. \n\nThe right questions to ask are going to be different in every situation, but there are a few that can be helpful in any situation when you are interviewing with a hiring manager. \n\n**1. What is the team culture like? Why is it like that?**\n\nYou'll never get a consistent answer on this one, and sometimes it might be hard to get a truthful answer. What you are told may speak volumes about not only the company, but more importantly how the person you are asking perceives the company itself. Asking \"why is it this way?\" may open up a discussion about values and leadership, or you may find some subtle finger pointing going on. Keep an eye out for 🚩🚩🚩 red flags.\n\nOther questions you could ask:\n* How do decisions get made?\n* What happens if there isn't consensus? \n* How often does the entire company meet? Who leads that meeting?\n\n\n**2. What do you think sets this company apart from its competitors?**\n\nThis is a broad question. Product and goto-market differentiation are subsets of this. The interviewer may focus on one or the other, or ideally they will be able to speak more broadly about what makes a company special. It might be a visionary CEO (Marc Benioff, Salesforce), it could be a particular cultural environment (Spotify), or it may be a special and defensible technology (Google). Whatever it is, listen for the signs that the company really is special and that it's a place where you truly want to invest your time and career. \n\nOther questions you could ask:\n* Do you have product-market fit? When did you find it? What has changed since then?\n* Do customer's help shape the roadmap? What kinds of requests do they make?\n* Who does support? How do they share feedback/requests/requirements with the rest of the company?\n\n\n**3. What is the company's mission and vision? **\n\nBoring right? Wrong! This is the right question to ask if you are speaking with multiple people. Their ability to give you an answer that is consistent with their peers is a useful indicator of the level of cohesion within the company. A great leader spends a significant amount of time making sure everyone is playing from the same sheet of music. It can also be a good topic for you, your skills and how your role will contribute to things the company has prioritized.\n\nOther questions you could ask:\n* Does this mission statement/vision/values change often? \n* How could they change over time?\n* Does everyone in the company have a hand in crafting the vision, or is it shared by leadership? \n\n**4. What challenges has the company faced and how did it overcome them?**\n\nStartups often face significant challenges in their early stages, such as funding, market fit, and product development. Asking about the specific challenges the company has faced and how it has managed to overcome them can give you a better understanding of the company and its ability to succeed.\n\n* How much runway does the company have?\n* Do you plan to raise more money? Do you have a rough idea of when? \n* Is the company profitable, or does it plan to be profitable? How are you balance growth with stability/runway.\n\n**5. What is the company's growth strategy?**\n\nIn order to be successful, startups need to have a go-to market strategy. Asking about this will help you to understand the company's plans for the future and how you can contribute to its success. It will also help you to determine whether the company is a good fit for your skills and experience. Are they focused and specific in their answers? Or you do you get a \"you're in engineering, you don't *rreeallllyyy* need to now this stuff, right?\" kind of vibe.\n\n* What metrics are you focused on? \n* How do you decide which work to prioritize to support growth? \n* How important is account expansion vs new business?\n* How did you come up with the current pricing? Is it working as-is or do you have plans to change it? \n\nThere are many ways to handle an interview. Sometimes you'll simply want to find an opportunity to demonstrate your skills, other times you'll find yourself being evaluated for \"cultural fit\". Whatever situation you find yourself in: remember to ask good questions. Be specific, expect precision. It's your your change to be certain you are going somewhere exciting, and it may uncover the red flags that would otherwise get glossed over. \n\n",
      "hasPolls": false,
      "totalPollVotes": 0,
      "upvotes": 0,
      "downvotes": 0,
      "tags": [
        "56744720958ef13879b947e1",
        "56a77939281161e11972fdd7",
        "56744721958ef13879b94df7",
        "56744721958ef13879b94b5b"
      ],
      "untaggedFrom": [],
      "upvotedBy": [],
      "downvotedBy": [],
      "popularity": 5793.9317,
      "responses": [
        {
          "popularity": 5794.0483,
          "isActive": true,
          "upvotedBy": [],
          "downvotedBy": [],
          "upvotes": 0,
          "downvotes": 0,
          "isCollapsed": false,
          "totalBadgesAwarded": 0,
          "isRewardWinner": false,
          "bookmarkedIn": [],
          "score": 0,
          "reactions": [],
          "totalReactions": 0,
          "reactionsByCurrentUser": [],
          "_id": "6386430cee88c238d96fc1fd",
          "content": "<p>Great stuff Jevon. Thanks for the tip about Tier too. Shouldn&#39;t we all just back to blogging? Salad days. Maybe queso days? :-) Miss you. </p>\n<p>On interviewing, as you know, I haven&#39;t done a lot of that, but I do like to ask the &quot;Founder origin&quot; story. It lights people up (at every level) when they tell it. Every company has a story and they generally take pride in their humble origins.</p>\n",
          "contentMarkdown": "Great stuff Jevon. Thanks for the tip about Tier too. Shouldn't we all just back to blogging? Salad days. Maybe queso days? :-) Miss you. \n\nOn interviewing, as you know, I haven't done a lot of that, but I do like to ask the \"Founder origin\" story. It lights people up (at every level) when they tell it. Every company has a story and they generally take pride in their humble origins.",
          "author": "63864131ee88c238d96fc1b2",
          "stamp": "clb2i3bv100tdklnvgcx224bc",
          "post": "63862e8f109b4e53f41fde94",
          "replies": [],
          "dateAdded": "2022-11-29T17:36:12.494Z",
          "badgesAwarded": [],
          "__v": 0
        }
      ],
      "responseCount": 1,
      "replyCount": 0,
      "followers": [],
      "isActive": true,
      "isFeatured": false,
      "isEngaging": false,
      "answeredByTarget": false,
      "inviters": [],
      "isDelisted": false,
      "isNotified": false,
      "duplicatePosts": [],
      "numCollapsed": 0,
      "hasReward": false,
      "bookmarkedIn": [],
      "similarPostIds": [],
      "reactions": ["5c090d96c2a9c2a674d35484"],
      "totalReactions": 1,
      "reactionsByCurrentUser": [],
      "totalReactionsByCurrentUser": 0,
      "isPinnedToBlog": false,
      "disableComments": false,
      "commentsPaused": false,
      "hasLatex": false,
      "syncAlgolia": true,
      "enableToc": false,
      "toc": [],
      "numUniqueUsersWhoReacted": 0,
      "_id": "63862e8f109b4e53f41fde94",
      "createdAt": "2022-11-29T16:08:47.230Z",
      "updatedAt": "2022-11-29T16:08:47.230Z",
      "type": "story",
      "partOfPublication": true,
      "title": "Questions you should ask when interviewing at a startup",
      "cuid": "clb2eywkr000608l6ddzs5xdd",
      "dateAdded": "2022-11-29T16:08:47.211Z",
      "hasCustomDate": null,
      "isCoverAttributionHidden": true,
      "coverImageAttribution": "https://unsplash.com/@jeswinthomas",
      "coverImagePhotographer": "Jeswin Thomas",
      "slug": "questions-you-should-ask-when-interviewing-at-a-startup",
      "author": "61eabf4c0b35507a93a04907",
      "sB": false,
      "isRepublished": false,
      "originalArticleURL": "",
      "readTime": 5,
      "draft": "6386245e6b38c338fdc159f7",
      "publication": "62a38c37a2c282d2d8377855",
      "ogImage": "",
      "metaTitle": "",
      "metaDescription": "",
      "series": null,
      "__v": 2,
      "badges": [],
      "contributors": [
        {
          "_id": "6386430cee88c238d96fc1fe",
          "user": "63864131ee88c238d96fc1b2",
          "stamp": "clb2i3bv100tdklnvgcx224bc"
        }
      ],
      "dateUpdated": "2022-11-29T17:50:35.850Z",
      "pendingPublicationApproval": false,
      "pollOptions": [],
      "questionReplies": [],
      "stickCoverToBottom": true,
      "subtitle": "",
      "viewsUpdatedOn": 1687287630179,
      "lastActivity": "2022-11-29T17:36:12.503Z",
      "reactionToCountMap": { "reaction_5c090d96c2a9c2a674d35484": 1 },
      "uniqueReactions": ["5c090d96c2a9c2a674d35484"],
      "reactionToCountMapUnique": { "reaction_5c090d96c2a9c2a674d35484": 1 },
      "id": "63862e8f109b4e53f41fde94"
    },
    {
      "reward": { "type": "xlm" },
      "sourcedFromGithub": false,
      "githubAsSourceMeta": null,
      "isAnonymous": false,
      "views": 194,
      "slugOverridden": false,
      "coverImage": "",
      "autoGeneratedCover": "",
      "brief": "We just released v0.5.2, with some exciting new enhancements and features.\n\nSwitch preallocations: The tier switch -c command now preallocates switch accounts which means after the first switch account is created, subsequent uses of tier switch -c sh...",
      "content": "<p>We just <a target=\"_blank\" href=\"https://github.com/tierrun/tier\">released v0.5.2</a>, with some exciting new enhancements and features.</p>\n<ul>\n<li><strong>Switch preallocations</strong>: The <code>tier switch -c</code> command now preallocates switch accounts which means after the first switch account is created, subsequent uses of <code>tier switch -c</code> should be noticeably faster, like, complete in 10us fast! This is because it can now avoid waiting on slow API calls to Stripe.</li>\n</ul>\n<p><img src=\"https://cdn.hashnode.com/res/hashnode/image/upload/v1669166841281/-hh3FSdDl.png\" alt=\"Screenshot 2022-11-22 at 9.22.50 PM.png\" class=\"image--center mx-auto\" /></p>\n<ul>\n<li><p><strong>Plan immutability</strong>: Plans are now 100% immutable, as was originally planned. To upgrade all existing Tier plans to be 100% immutable, please run <code>tier pull | tier push</code> - 2 times; The second should produce output saying <code>[plan already exists]</code>, which is your confirmation the migration was successful.</p>\n</li>\n<li><p><strong>Deep links</strong>: Push now outputs deep links to the corresponding prices in Stripe.</p>\n</li>\n<li><p><strong>Clean command</strong>:  We added the <code>tier clean -switchaccounts</code> command. As you might guess, it cleans up accounts in Test Mode that were created by the switch command. The full command takes a duration of time for specifying the maximum age to use when considering an account for removal. Please see <code>tier clean -h</code> for more information.</p>\n</li>\n</ul>\n<p>Please head over to <a target=\"_blank\" href=\"https://tier.run/releases\">https://tier.run/releases</a> to check out more changes and install options. As always, <code>brew upgrade tierrun/tap/tier</code> works too! </p>\n",
      "contentMarkdown": "We just [released v0.5.2](https://github.com/tierrun/tier), with some exciting new enhancements and features.\n\n- **Switch preallocations**: The `tier switch -c` command now preallocates switch accounts which means after the first switch account is created, subsequent uses of `tier switch -c` should be noticeably faster, like, complete in 10us fast! This is because it can now avoid waiting on slow API calls to Stripe.\n\n![Screenshot 2022-11-22 at 9.22.50 PM.png](https://cdn.hashnode.com/res/hashnode/image/upload/v1669166841281/-hh3FSdDl.png align=\"center\")\n\n- **Plan immutability**: Plans are now 100% immutable, as was originally planned. To upgrade all existing Tier plans to be 100% immutable, please run `tier pull | tier push` - 2 times; The second should produce output saying `[plan already exists]`, which is your confirmation the migration was successful.\n\n- **Deep links**: Push now outputs deep links to the corresponding prices in Stripe.\n\n- **Clean command**:  We added the `tier clean -switchaccounts` command. As you might guess, it cleans up accounts in Test Mode that were created by the switch command. The full command takes a duration of time for specifying the maximum age to use when considering an account for removal. Please see `tier clean -h` for more information.\n\nPlease head over to [https://tier.run/releases](https://tier.run/releases) to check out more changes and install options. As always, `brew upgrade tierrun/tap/tier` works too! \n\n\n\n",
      "hasPolls": false,
      "totalPollVotes": 0,
      "upvotes": 0,
      "downvotes": 0,
      "tags": [
        "56744723958ef13879b9554c",
        "631ca902f73f4734bc054995",
        "56744722958ef13879b950a5",
        "56744721958ef13879b94c7e",
        "56744722958ef13879b94ffb"
      ],
      "untaggedFrom": [],
      "upvotedBy": [],
      "downvotedBy": [],
      "popularity": 5782.2267,
      "responses": [],
      "responseCount": 0,
      "replyCount": 0,
      "followers": [],
      "isActive": true,
      "isFeatured": false,
      "isEngaging": false,
      "answeredByTarget": false,
      "inviters": [],
      "isDelisted": false,
      "isNotified": false,
      "duplicatePosts": [],
      "numCollapsed": 0,
      "hasReward": false,
      "bookmarkedIn": [],
      "similarPostIds": [],
      "reactions": [
        "5c090d96c2a9c2a674d35486",
        "5c090d96c2a9c2a674d35485",
        "5c090d96c2a9c2a674d35484",
        "567453d0b73d6a82ac8c5abc",
        "567453d0b73d6a82ac8c5ab9",
        "5c090d96c2a9c2a674d35488",
        "5c090d96c2a9c2a674d3548a",
        "567453d0b73d6a82ac8c5abd",
        "5d9dd859f31791c942dc5b52",
        "5c090d96c2a9c2a674d3548b"
      ],
      "totalReactions": 10,
      "reactionsByCurrentUser": [],
      "totalReactionsByCurrentUser": 0,
      "isPinnedToBlog": false,
      "disableComments": false,
      "commentsPaused": false,
      "hasLatex": false,
      "syncAlgolia": true,
      "enableToc": false,
      "toc": [],
      "numUniqueUsersWhoReacted": 0,
      "_id": "637d75423da83ab10409ca61",
      "createdAt": "2022-11-23T01:20:02.119Z",
      "updatedAt": "2022-11-23T01:20:02.119Z",
      "type": "story",
      "partOfPublication": true,
      "title": "Tier CLI v0.5.2",
      "cuid": "clasykuo4000208mjhix06qcb",
      "dateAdded": "2022-11-23T01:20:02.117Z",
      "hasCustomDate": null,
      "isCoverAttributionHidden": false,
      "coverImageAttribution": "",
      "coverImagePhotographer": "",
      "slug": "tier-cli-v052",
      "author": "636007d8b09e815e60a5742a",
      "sB": true,
      "isRepublished": false,
      "originalArticleURL": "",
      "readTime": 1,
      "draft": "637d7412a4b809c7ba7527ad",
      "publication": "62a38c37a2c282d2d8377855",
      "ogImage": "https://cdn.hashnode.com/res/hashnode/image/upload/v1669166375125/GfWecTryc.png",
      "metaTitle": "Tier CLI 0.5.2 - Power tools for Stripe",
      "metaDescription": "",
      "series": null,
      "__v": 1,
      "badges": [],
      "contributors": [],
      "dateUpdated": "2022-11-23T01:27:31.825Z",
      "pollOptions": [],
      "questionReplies": [],
      "stickCoverToBottom": false,
      "subtitle": "",
      "viewsUpdatedOn": 1686778228496,
      "reactionToCountMap": {
        "reaction_5c090d96c2a9c2a674d35486": 1,
        "reaction_5c090d96c2a9c2a674d35485": 1,
        "reaction_5c090d96c2a9c2a674d35484": 1,
        "reaction_567453d0b73d6a82ac8c5abc": 1,
        "reaction_567453d0b73d6a82ac8c5ab9": 1,
        "reaction_5c090d96c2a9c2a674d35488": 1,
        "reaction_5c090d96c2a9c2a674d3548a": 1,
        "reaction_567453d0b73d6a82ac8c5abd": 1,
        "reaction_5d9dd859f31791c942dc5b52": 1,
        "reaction_5c090d96c2a9c2a674d3548b": 1
      },
      "uniqueReactions": [
        "5c090d96c2a9c2a674d35486",
        "5c090d96c2a9c2a674d35485",
        "5c090d96c2a9c2a674d35484",
        "567453d0b73d6a82ac8c5abc",
        "567453d0b73d6a82ac8c5ab9",
        "5c090d96c2a9c2a674d35488",
        "5c090d96c2a9c2a674d3548a",
        "567453d0b73d6a82ac8c5abd",
        "5d9dd859f31791c942dc5b52",
        "5c090d96c2a9c2a674d3548b"
      ],
      "reactionToCountMapUnique": {
        "reaction_5c090d96c2a9c2a674d35486": 1,
        "reaction_5c090d96c2a9c2a674d35485": 1,
        "reaction_5c090d96c2a9c2a674d35484": 1,
        "reaction_567453d0b73d6a82ac8c5abc": 1,
        "reaction_567453d0b73d6a82ac8c5ab9": 1,
        "reaction_5c090d96c2a9c2a674d35488": 1,
        "reaction_5c090d96c2a9c2a674d3548a": 1,
        "reaction_567453d0b73d6a82ac8c5abd": 1,
        "reaction_5d9dd859f31791c942dc5b52": 1,
        "reaction_5c090d96c2a9c2a674d3548b": 1
      },
      "id": "637d75423da83ab10409ca61"
    },
    {
      "reward": { "type": "xlm" },
      "sourcedFromGithub": false,
      "githubAsSourceMeta": null,
      "isAnonymous": false,
      "views": 373,
      "slugOverridden": true,
      "coverImage": "",
      "autoGeneratedCover": "",
      "brief": "Stripe has two modes, Live Mode and Test Mode. Both of these represent isolated environments, and Test Mode will provide simulated responses for some requests. It's a really useful sandbox to build against as you implement your Stripe integrations. I...",
      "content": "<p>Stripe has two modes, Live Mode and Test Mode. Both of these represent isolated environments, and Test Mode will provide simulated responses for some requests. It's a really useful sandbox to build against as you implement your Stripe integrations. It also comes with a few gotchas. </p>\n<p>As we encountered these issues while building <a target=\"_blank\" href=\"https://github.com/tierrun/tier\">Tier</a>, we decided to create <a target=\"_blank\" href=\"https://github.com/tierrun/tier#readme\"><code>tier switch</code></a> to make it easy to spin up test and preview environments. </p>\n<blockquote>\n<p>To learn more about the <code>switch</code> command and how to use it to avoid these issues, <a target=\"_blank\" href=\"https://blog.tier.run/tier-switch-git-branch-for-stripe\">please read this post and give it a try today</a>. </p>\n</blockquote>\n<h3 id=\"heading-inconsistent-ui\">Inconsistent UI</h3>\n<p>One quirk of test mode is how it shows up in the stripe Dashboard. It’s easy to miss as you move between modes.</p>\n<p>Test Clocks will usually isolate some objects from each other in the API, however, they do not show up that way when using the UI in Test Mode.</p>\n<p>For example, if you list all customers in the API without specifying a test clock, you will only see customers without test clocks, but in the UI, you will see all customers with and without test clocks.</p>\n<p>To distinguish between objects with test clocks, and those without, objects associated with a test clock get orange banners and/or an icon indicating they are part of a test clock. This is helpful, but it does not show any indication of which objects are grouped together by a test clock. To see this, you’ll need a new skill to operate and see in a new dimension, as we’ll quickly see:</p>\n<p><img src=\"https://cdn.hashnode.com/res/hashnode/image/upload/v1668575631328/qPJaHUNW-.png\" alt=\"Screenshot 2022-11-16 at 1.13.17 AM.png\" /></p>\n<p>In the above screenshot, there are two test clocks. Which customers are on the same clock? You can probably deduce which are associated by looking at the CREATED field, but what if I advance both clocks to the same time, or what if I ran two simulations each with nearly identical timelines? It all becomes blurry in the “normal” UI mode.</p>\n<p>The only way to find out who is associated with what clock is to drill down to the test clock’s screen.</p>\n<p><img src=\"https://cdn.hashnode.com/res/hashnode/image/upload/v1668575713452/y1F4Zen8l.png\" alt=\"Screenshot 2022-11-16 at 1.14.54 AM.png\" /></p>\n<p>Having to keep this in mind as you navigate around the UI requires a new mental shift. One you must enter into and switch out of rapidly to gain a sense of what you're looking at depending on the screen, and how the things you're seeing all relate to each other in this new, additional dimension.</p>\n<h3 id=\"heading-product-and-price-debris\">Product and Price Debris</h3>\n<p>Products and Prices remain unisolated from subscriptions associated with a test clock, as well as with subscriptions not associated with a test clock. This means products and prices will not be cleaned up when a test clock cleans up (if you ever clean up test clocks right away or just wait for them to GC on their own).</p>\n<p>This may not seem like a big deal, but when you’re in a trial-and-error mode, working out the kinks of your pricing model, or running an integration test, this quickly becomes a major source of friction and frustration. That is because you cannot start a new simulation in a totally clean room, so you must manually delete each product and price you modified, otherwise it may interfere with the next simulation. </p>\n<h3 id=\"heading-key-and-id-collisions\">Key and ID Collisions</h3>\n<p>It's important to note that deleting products and prices can not happen if they have been burned into the audit log. In this situation, you can only archive them, but their IDs and lookup keys remain. This will often cause collisions across simulations and tests.</p>\n<p>One of my favorite things about the product and price APIs in Stripe is that you can bring your own IDs and lookup keys. This allows you to assign a unique ID or lookup key that may only be used by a single product or price, respectively, at a time.</p>\n<p>But if you can’t delete the price or product because a subscription has burned the price into the audit log, then the next test run might get an error if attempting to create a new price with the same lookup key or product with the same ID.</p>\n<p>We can side-step this by namespacing our keys across tests, but this means our code must be very smart and careful to not let this behavior leak into production, and know how to plumb the namespace from the request received by the user all the way to stripe, or risk clobbering or duplicating objects on write and potentially reading back the wrong one. This isn’t ideal either.</p>\n<h3 id=\"heading-the-manual-process-of-deleting-test-data\">The Manual process of Deleting Test Data</h3>\n<p>With the above gotchas in mind, we probably want to think about wiping the slate clean.</p>\n<p>Unfortunately, there is no Stripe API to start with a fresh Test Mode. To do so programmatically requires cascading delete calls to the API per object, which is a slow and error-prone process. </p>\n<p>Even if “done right”, you’re likely to run into the problem where you can’t delete prices already burned into the audit trail (which in production is a good thing, but the reality is different for your test environments as they become impossible to clean completely).</p>\n<h3 id=\"heading-keep-the-babies-ignore-the-bath-water\">Keep the babies. Ignore the bath water.</h3>\n<p>When you hit that “Delete Test Data” button, you’re potentially erasing the artifacts of valuable lessons learned. Lessons that could be used to refer back to as you experiment with new approaches to your pricing and billing.</p>\n<p>To keep these for reference, a common approach is to simply sign up for a new Stripe account. Maybe we call it “test2”, but this comes with new problems:</p>\n<ul>\n<li>Extra API keys to manage</li>\n<li>Extra login credentials to manage</li>\n</ul>\n<p>This also does not fix the problem of throwing out our history, because this new account could end up with data as valuable as the previous, so away we go again to sign up for a new Stripe account, and then again, and so on.</p>\n<p>We can delay decluttering our account drop-down by triaging all of those accounts until another day.</p>\n<h2 id=\"heading-continuous-integration\">Continuous Integration</h2>\n<p>It isn’t hard to imagine getting into a situation where changing a price or a product in the “Holy” CI Stripe account wreaks havoc on CI. This usually happens because the once “pristine” account is now out of whack according to the code expecting Stripe to look another way.</p>\n<p>If engineering was already sheepish about making changes to the pricing model, this just further adds ammo to their argument against it, because no one wants to breathe on that code, for fear of breaking it.</p>\n<h1 id=\"heading-make-the-switch\">Make the <code>switch</code></h1>\n<p><strong>Tier is your new set of power tools for Stripe</strong>. By using the <code>switch</code> command, you can avoid the 5 gotchas of test mode and gain the power of a PriceOps-compatible approach to monetization while building powerful new workflows on top of Stripe. This gives you the best of both worlds: The power of Tier and the reliability and reach of Stripe.</p>\n<p>With Tier, you get powerful features such as <code>switch</code> along with our SDKs, metering, and feature flagging style entitlement checking. </p>\n<p>If you aren't already a Tier user, you can get started quickly and easily. </p>\n<ul>\n<li><a target=\"_blank\" href=\"https://www.tier.run/docs/\">Read Tier Docs</a></li>\n<li><a target=\"_blank\" href=\"https://blog.tier.run/tier-hello-world-demo\">Hello World! getting started example</a></li>\n</ul>\n",
      "contentMarkdown": "Stripe has two modes, Live Mode and Test Mode. Both of these represent isolated environments, and Test Mode will provide simulated responses for some requests. It's a really useful sandbox to build against as you implement your Stripe integrations. It also comes with a few gotchas. \n\nAs we encountered these issues while building [Tier](https://github.com/tierrun/tier), we decided to create [`tier switch`](https://github.com/tierrun/tier#readme) to make it easy to spin up test and preview environments. \n\n> To learn more about the `switch` command and how to use it to avoid these issues, [please read this post and give it a try today](https://blog.tier.run/tier-switch-git-branch-for-stripe). \n\n### Inconsistent UI\nOne quirk of test mode is how it shows up in the stripe Dashboard. It’s easy to miss as you move between modes.\n\nTest Clocks will usually isolate some objects from each other in the API, however, they do not show up that way when using the UI in Test Mode.\n\nFor example, if you list all customers in the API without specifying a test clock, you will only see customers without test clocks, but in the UI, you will see all customers with and without test clocks.\n\nTo distinguish between objects with test clocks, and those without, objects associated with a test clock get orange banners and/or an icon indicating they are part of a test clock. This is helpful, but it does not show any indication of which objects are grouped together by a test clock. To see this, you’ll need a new skill to operate and see in a new dimension, as we’ll quickly see:\n\n![Screenshot 2022-11-16 at 1.13.17 AM.png](https://cdn.hashnode.com/res/hashnode/image/upload/v1668575631328/qPJaHUNW-.png align=\"left\")\n\nIn the above screenshot, there are two test clocks. Which customers are on the same clock? You can probably deduce which are associated by looking at the CREATED field, but what if I advance both clocks to the same time, or what if I ran two simulations each with nearly identical timelines? It all becomes blurry in the “normal” UI mode.\n\nThe only way to find out who is associated with what clock is to drill down to the test clock’s screen.\n\n![Screenshot 2022-11-16 at 1.14.54 AM.png](https://cdn.hashnode.com/res/hashnode/image/upload/v1668575713452/y1F4Zen8l.png align=\"left\")\n\nHaving to keep this in mind as you navigate around the UI requires a new mental shift. One you must enter into and switch out of rapidly to gain a sense of what you're looking at depending on the screen, and how the things you're seeing all relate to each other in this new, additional dimension.\n\n### Product and Price Debris\nProducts and Prices remain unisolated from subscriptions associated with a test clock, as well as with subscriptions not associated with a test clock. This means products and prices will not be cleaned up when a test clock cleans up (if you ever clean up test clocks right away or just wait for them to GC on their own).\n\nThis may not seem like a big deal, but when you’re in a trial-and-error mode, working out the kinks of your pricing model, or running an integration test, this quickly becomes a major source of friction and frustration. That is because you cannot start a new simulation in a totally clean room, so you must manually delete each product and price you modified, otherwise it may interfere with the next simulation. \n\n### Key and ID Collisions\nIt's important to note that deleting products and prices can not happen if they have been burned into the audit log. In this situation, you can only archive them, but their IDs and lookup keys remain. This will often cause collisions across simulations and tests.\n\nOne of my favorite things about the product and price APIs in Stripe is that you can bring your own IDs and lookup keys. This allows you to assign a unique ID or lookup key that may only be used by a single product or price, respectively, at a time.\n\nBut if you can’t delete the price or product because a subscription has burned the price into the audit log, then the next test run might get an error if attempting to create a new price with the same lookup key or product with the same ID.\n\nWe can side-step this by namespacing our keys across tests, but this means our code must be very smart and careful to not let this behavior leak into production, and know how to plumb the namespace from the request received by the user all the way to stripe, or risk clobbering or duplicating objects on write and potentially reading back the wrong one. This isn’t ideal either.\n\n### The Manual process of Deleting Test Data\nWith the above gotchas in mind, we probably want to think about wiping the slate clean.\n\nUnfortunately, there is no Stripe API to start with a fresh Test Mode. To do so programmatically requires cascading delete calls to the API per object, which is a slow and error-prone process. \n\nEven if “done right”, you’re likely to run into the problem where you can’t delete prices already burned into the audit trail (which in production is a good thing, but the reality is different for your test environments as they become impossible to clean completely).\n\n### Keep the babies. Ignore the bath water.\nWhen you hit that “Delete Test Data” button, you’re potentially erasing the artifacts of valuable lessons learned. Lessons that could be used to refer back to as you experiment with new approaches to your pricing and billing.\n\nTo keep these for reference, a common approach is to simply sign up for a new Stripe account. Maybe we call it “test2”, but this comes with new problems:\n- Extra API keys to manage\n- Extra login credentials to manage\n\nThis also does not fix the problem of throwing out our history, because this new account could end up with data as valuable as the previous, so away we go again to sign up for a new Stripe account, and then again, and so on.\n\nWe can delay decluttering our account drop-down by triaging all of those accounts until another day.\n\n## Continuous Integration\nIt isn’t hard to imagine getting into a situation where changing a price or a product in the “Holy” CI Stripe account wreaks havoc on CI. This usually happens because the once “pristine” account is now out of whack according to the code expecting Stripe to look another way.\n\nIf engineering was already sheepish about making changes to the pricing model, this just further adds ammo to their argument against it, because no one wants to breathe on that code, for fear of breaking it.\n\n# Make the `switch`\n**Tier is your new set of power tools for Stripe**. By using the `switch` command, you can avoid the 5 gotchas of test mode and gain the power of a PriceOps-compatible approach to monetization while building powerful new workflows on top of Stripe. This gives you the best of both worlds: The power of Tier and the reliability and reach of Stripe.\n\nWith Tier, you get powerful features such as `switch` along with our SDKs, metering, and feature flagging style entitlement checking. \n\nIf you aren't already a Tier user, you can get started quickly and easily. \n\n- [Read Tier Docs](https://www.tier.run/docs/)\n- [Hello World! getting started example](https://blog.tier.run/tier-hello-world-demo)\n\n",
      "hasPolls": false,
      "totalPollVotes": 0,
      "upvotes": 0,
      "downvotes": 0,
      "tags": [
        "56744722958ef13879b950a5",
        "56744721958ef13879b94ad1",
        "56744723958ef13879b9554c"
      ],
      "untaggedFrom": [],
      "upvotedBy": [],
      "downvotedBy": [],
      "popularity": 5770.6624,
      "responses": [],
      "responseCount": 0,
      "replyCount": 0,
      "followers": [],
      "isActive": true,
      "isFeatured": false,
      "isEngaging": false,
      "answeredByTarget": false,
      "inviters": [],
      "isDelisted": false,
      "isNotified": false,
      "duplicatePosts": [],
      "numCollapsed": 0,
      "hasReward": false,
      "bookmarkedIn": [],
      "similarPostIds": [],
      "reactions": [
        "5c090d96c2a9c2a674d35484",
        "5c090d96c2a9c2a674d35485",
        "5c090d96c2a9c2a674d35486",
        "567453d0b73d6a82ac8c5abd",
        "567453d0b73d6a82ac8c5abc",
        "567453d0b73d6a82ac8c5ab9",
        "5c090d96c2a9c2a674d3548a",
        "5c090d96c2a9c2a674d3548b",
        "5d9dd859f31791c942dc5b52",
        "5c090d96c2a9c2a674d35488"
      ],
      "totalReactions": 20,
      "reactionsByCurrentUser": [],
      "totalReactionsByCurrentUser": 0,
      "isPinnedToBlog": false,
      "disableComments": true,
      "commentsPaused": false,
      "hasLatex": false,
      "syncAlgolia": true,
      "enableToc": false,
      "toc": [],
      "numUniqueUsersWhoReacted": 0,
      "_id": "63754f8dbf7e0c178a752a32",
      "createdAt": "2022-11-16T21:01:01.190Z",
      "updatedAt": "2022-11-16T21:01:01.190Z",
      "type": "story",
      "partOfPublication": true,
      "title": "5 things you need to know about Stripe's Test Mode",
      "cuid": "clak4on76000208jx37r5a30v",
      "dateAdded": "2022-11-16T21:01:01.170Z",
      "hasCustomDate": null,
      "isCoverAttributionHidden": false,
      "coverImageAttribution": "",
      "coverImagePhotographer": "",
      "slug": "the-5-gotchas-of-stripe-test-mode",
      "author": "636007d8b09e815e60a5742a",
      "sB": false,
      "isRepublished": false,
      "originalArticleURL": "",
      "readTime": 6,
      "draft": "637467b600b5df558006e1de",
      "publication": "62a38c37a2c282d2d8377855",
      "ogImage": "",
      "metaTitle": "",
      "metaDescription": "",
      "series": "6374ed39e1d53a5fd290e3fb",
      "__v": 1,
      "badges": [],
      "contributors": [],
      "dateUpdated": "2022-11-17T18:36:02.102Z",
      "pollOptions": [],
      "questionReplies": [],
      "stickCoverToBottom": false,
      "subtitle": "",
      "viewsUpdatedOn": 1687213828362,
      "pendingPublicationApproval": false,
      "reactionToCountMap": {
        "reaction_5c090d96c2a9c2a674d35484": 2,
        "reaction_5c090d96c2a9c2a674d35485": 2,
        "reaction_5c090d96c2a9c2a674d35486": 2,
        "reaction_567453d0b73d6a82ac8c5abd": 2,
        "reaction_567453d0b73d6a82ac8c5abc": 2,
        "reaction_567453d0b73d6a82ac8c5ab9": 2,
        "reaction_5c090d96c2a9c2a674d3548a": 2,
        "reaction_5c090d96c2a9c2a674d3548b": 2,
        "reaction_5d9dd859f31791c942dc5b52": 2,
        "reaction_5c090d96c2a9c2a674d35488": 2
      },
      "uniqueReactions": [
        "5c090d96c2a9c2a674d35484",
        "5c090d96c2a9c2a674d35485",
        "5c090d96c2a9c2a674d35486",
        "567453d0b73d6a82ac8c5abd",
        "567453d0b73d6a82ac8c5abc",
        "567453d0b73d6a82ac8c5ab9",
        "5c090d96c2a9c2a674d3548a",
        "5c090d96c2a9c2a674d3548b",
        "5d9dd859f31791c942dc5b52",
        "5c090d96c2a9c2a674d35488"
      ],
      "reactionToCountMapUnique": {
        "reaction_5c090d96c2a9c2a674d35484": 2,
        "reaction_5c090d96c2a9c2a674d35485": 2,
        "reaction_5c090d96c2a9c2a674d35486": 2,
        "reaction_567453d0b73d6a82ac8c5abd": 2,
        "reaction_567453d0b73d6a82ac8c5abc": 2,
        "reaction_567453d0b73d6a82ac8c5ab9": 2,
        "reaction_5c090d96c2a9c2a674d3548a": 2,
        "reaction_5c090d96c2a9c2a674d3548b": 2,
        "reaction_5d9dd859f31791c942dc5b52": 2,
        "reaction_5c090d96c2a9c2a674d35488": 2
      },
      "id": "63754f8dbf7e0c178a752a32"
    },
    {
      "reward": { "type": "xlm" },
      "sourcedFromGithub": false,
      "githubAsSourceMeta": null,
      "isAnonymous": false,
      "views": 405,
      "slugOverridden": true,
      "coverImage": "",
      "autoGeneratedCover": "",
      "brief": "tier switch creates instant isolated test environments in Stripe, under a single Stripe login\ntier switch brings modern dev and test workflows to the Stripe ecosystem\nBy using this feature, teams can more safely and reliably collaborate on Stripe Bil...",
      "content": "<ul>\n<li><code>tier switch</code> creates instant isolated test environments in Stripe, under a single Stripe login</li>\n<li><code>tier switch</code> brings modern dev and test workflows to the Stripe ecosystem</li>\n<li>By using this feature, teams can more safely and reliably collaborate on Stripe Billing implementations, deploy test environments, and speed up overall development time</li>\n</ul>\n<p><code>tier switch</code> is a command that creates on-demand, lightweight and isolated environments in Stripe. These are great for things like experiments and running integration tests. They are also perfect for sharing any results and collaborating with your team. </p>\n<p><a target=\"_blank\" href=\"https://cdn.hashnode.com/res/hashnode/image/upload/v1668629890650/q4upUPifF.gif\"><img src=\"https://cdn.hashnode.com/res/hashnode/image/upload/v1668629890650/q4upUPifF.gif\" alt=\"Click to view in full screen\" class=\"image--center mx-auto\" /></a></p>\n<p>We were heavily inspired by many of our favorite tools. Like our first time opening a PR on GitHub, viewing changes in a live preview environment on <a target=\"_blank\" href=\"https://vercel.com\">Vercel</a>, or rehearsing a schema change <a target=\"_blank\" href=\"https://planetscale.com/docs/concepts/nonblocking-schema-changes\">in a branch on Planetscale</a>, these little features can make you, and your team, wildly productive. They do this by giving you the confidence you need to iterate quickly and in isolation, but with the ability to share and collaborate. </p>\n<blockquote>\n<p>Visit https://tier.run/docs/cli/switch, and get started with Tier Switch now!</p>\n</blockquote>\n<p>Before <code>tier switch</code>, our Stripe workflow looked much like everyone else</p>\n<blockquote>\n<ol>\n<li>Manually switch to one of the special \"test\" mode accounts 🕺</li>\n<li>Find and click on \"Delete all test data\" . . . then wait. 🗑️</li>\n<li>Reset the idempotency key prefix 🔑</li>\n<li>Run test or experiment 🔜</li>\n<li>Take screenshot of result to share with team 📸 </li>\n</ol>\n</blockquote>\n<p>This isn’t just tedious, it’s messy and it’s brittle. Few of these steps can be reliably reproduced. </p>\n<h1 id=\"heading-the-missing-test-env-for-stripe\">The missing Test Env for Stripe</h1>\n<p><code>tier switch</code> builds on Stripe’s existing test mode but is designed to be more compatible with modern workflows. Each time you invoke <code>tier switch</code>, a new clean-slate and ephemeral test account is created. This environment is immediately accessible without the need to re-authenticate and can be seeded and ready for use in seconds.</p>\n<p><code>tier switch</code> will:</p>\n<ul>\n<li>Retain test results without impacting past or future experiments and tests</li>\n<li>Give each test and experiment its own dashboard, like it would have in production.</li>\n<li>Make this possible with a single Stripe account or org.</li>\n</ul>\n<p>Why is this important? In our work developing Tier, we've been heavy users of Stripe's test mode. While it is as well designed and useful tool for an initial integration, it quickly became harder to use than we expected. </p>\n<h1 id=\"heading-make-the-switch\">Make the <code>switch</code></h1>\n<p><strong>Tier is your new set of power tools for Stripe</strong>. By using the <code>switch</code> command, you can avoid <a target=\"_blank\" href=\"https://blog.tier.run/the-5-gotchas-of-stripes-test-mode\">the 5 gotchas of test mode</a> and gain the power of a PriceOps compatible approach to monetization while building powerful new workflows on top of Stripe. This gives you the best of both worlds: The power of Tier and the reliability and reach of Stripe.</p>\n<p>With Tier you get powerful features such as <code>switch</code> along with our SDKs, metering and feature flagging style entitlement checking. </p>\n<p>If you aren't already a Tier user, you can get started quickly and easily. </p>\n<ul>\n<li><a target=\"_blank\" href=\"https://www.tier.run/docs/\">Read Tier Docs</a></li>\n<li><a target=\"_blank\" href=\"https://blog.tier.run/tier-hello-world-demo\">Hello World! getting started example</a></li>\n</ul>\n",
      "contentMarkdown": "- `tier switch` creates instant isolated test environments in Stripe, under a single Stripe login\n- `tier switch` brings modern dev and test workflows to the Stripe ecosystem\n- By using this feature, teams can more safely and reliably collaborate on Stripe Billing implementations, deploy test environments, and speed up overall development time\n\n`tier switch` is a command that creates on-demand, lightweight and isolated environments in Stripe. These are great for things like experiments and running integration tests. They are also perfect for sharing any results and collaborating with your team. \n\n[![Click to view in full screen](https://cdn.hashnode.com/res/hashnode/image/upload/v1668629890650/q4upUPifF.gif align=\"center\")](https://cdn.hashnode.com/res/hashnode/image/upload/v1668629890650/q4upUPifF.gif)\n\nWe were heavily inspired by many of our favorite tools. Like our first time opening a PR on GitHub, viewing changes in a live preview environment on [Vercel](https://vercel.com), or rehearsing a schema change [in a branch on Planetscale](https://planetscale.com/docs/concepts/nonblocking-schema-changes), these little features can make you, and your team, wildly productive. They do this by giving you the confidence you need to iterate quickly and in isolation, but with the ability to share and collaborate. \n\n> Visit https://tier.run/docs/cli/switch, and get started with Tier Switch now!\n\nBefore `tier switch`, our Stripe workflow looked much like everyone else\n\n> 1. Manually switch to one of the special \"test\" mode accounts 🕺\n> 2. Find and click on \"Delete all test data\" . . . then wait. 🗑️\n> 3. Reset the idempotency key prefix 🔑\n> 4. Run test or experiment 🔜\n> 5. Take screenshot of result to share with team 📸 \n\nThis isn’t just tedious, it’s messy and it’s brittle. Few of these steps can be reliably reproduced. \n\n# The missing Test Env for Stripe\n`tier switch` builds on Stripe’s existing test mode but is designed to be more compatible with modern workflows. Each time you invoke `tier switch`, a new clean-slate and ephemeral test account is created. This environment is immediately accessible without the need to re-authenticate and can be seeded and ready for use in seconds.\n\n`tier switch` will:\n- Retain test results without impacting past or future experiments and tests\n- Give each test and experiment its own dashboard, like it would have in production.\n- Make this possible with a single Stripe account or org.\n\nWhy is this important? In our work developing Tier, we've been heavy users of Stripe's test mode. While it is as well designed and useful tool for an initial integration, it quickly became harder to use than we expected. \n\n# Make the `switch`\n**Tier is your new set of power tools for Stripe**. By using the `switch` command, you can avoid [the 5 gotchas of test mode](https://blog.tier.run/the-5-gotchas-of-stripes-test-mode) and gain the power of a PriceOps compatible approach to monetization while building powerful new workflows on top of Stripe. This gives you the best of both worlds: The power of Tier and the reliability and reach of Stripe.\n\nWith Tier you get powerful features such as `switch` along with our SDKs, metering and feature flagging style entitlement checking. \n\nIf you aren't already a Tier user, you can get started quickly and easily. \n\n- [Read Tier Docs](https://www.tier.run/docs/)\n- [Hello World! getting started example](https://blog.tier.run/tier-hello-world-demo)",
      "hasPolls": false,
      "totalPollVotes": 0,
      "upvotes": 0,
      "downvotes": 0,
      "tags": [
        "56744723958ef13879b9554c",
        "6361477ffe8087002da9197b",
        "56744722958ef13879b950a5",
        "56744721958ef13879b94ad1"
      ],
      "untaggedFrom": [],
      "upvotedBy": [],
      "downvotedBy": [],
      "popularity": 5769.3421,
      "responses": [],
      "responseCount": 0,
      "replyCount": 0,
      "followers": [],
      "isActive": true,
      "isFeatured": false,
      "isEngaging": false,
      "answeredByTarget": false,
      "inviters": [],
      "isDelisted": false,
      "isNotified": false,
      "duplicatePosts": [],
      "numCollapsed": 0,
      "hasReward": false,
      "bookmarkedIn": [],
      "similarPostIds": [],
      "reactions": ["5c090d96c2a9c2a674d35485"],
      "totalReactions": 1,
      "reactionsByCurrentUser": [],
      "totalReactionsByCurrentUser": 0,
      "isPinnedToBlog": false,
      "disableComments": true,
      "commentsPaused": false,
      "hasLatex": false,
      "syncAlgolia": true,
      "enableToc": false,
      "toc": [],
      "numUniqueUsersWhoReacted": 0,
      "_id": "63754c2bbf7e0c178a752a30",
      "createdAt": "2022-11-16T20:46:35.767Z",
      "updatedAt": "2022-11-16T20:46:35.767Z",
      "type": "story",
      "partOfPublication": true,
      "title": "tier switch - git branch, for Stripe",
      "cuid": "clak463g4000008jx7kdhfik4",
      "dateAdded": "2022-11-16T20:46:35.764Z",
      "hasCustomDate": null,
      "isCoverAttributionHidden": false,
      "coverImageAttribution": "",
      "coverImagePhotographer": "",
      "slug": "tier-switch-git-branch-stripe",
      "author": "636007d8b09e815e60a5742a",
      "sB": false,
      "isRepublished": false,
      "originalArticleURL": "",
      "readTime": 3,
      "draft": "637526ef44a41864b3aa7157",
      "publication": "62a38c37a2c282d2d8377855",
      "ogImage": "",
      "metaTitle": "",
      "metaDescription": "",
      "reactionToCountMap": { "reaction_5c090d96c2a9c2a674d35485": 1 },
      "viewsUpdatedOn": 1686970824974,
      "series": "6374ed39e1d53a5fd290e3fb",
      "__v": 1,
      "badges": [],
      "contributors": [],
      "dateUpdated": "2022-11-17T15:53:13.884Z",
      "pollOptions": [],
      "questionReplies": [],
      "stickCoverToBottom": false,
      "subtitle": "",
      "pendingPublicationApproval": false,
      "uniqueReactions": ["5c090d96c2a9c2a674d35485"],
      "reactionToCountMapUnique": {
        "reaction_5c090d96c2a9c2a674d35485": 1,
        "reaction_5c090d96c2a9c2a674d35484": 0
      },
      "id": "63754c2bbf7e0c178a752a30"
    },
    {
      "reward": { "type": "xlm" },
      "sourcedFromGithub": false,
      "githubAsSourceMeta": null,
      "isAnonymous": false,
      "views": 117,
      "slugOverridden": true,
      "coverImage": "",
      "autoGeneratedCover": "",
      "brief": "This is a quick guide for adding the schema for\npricing.json files to\nvim and VSCode.\nTL;DR\nThe schema for pricing.json files is available at\nhttps://www.tier.run/docs/pricing.schema.json.  Plug that URL into\nwhatever tool you use to validate JSON, a...",
      "content": "<p>This is a quick guide for adding the schema for\n<a target=\"_blank\" href=\"https://www.tier.run/docs/pricing.json\"><code>pricing.json</code></a> files to\nvim and VSCode.</p>\n<h2 id=\"heading-tldr\">TL;DR</h2>\n<p>The schema for <code>pricing.json</code> files is available at\n<a target=\"_blank\" href=\"https://www.tier.run/docs/pricing.schema.json\">https://www.tier.run/docs/pricing.schema.json</a>.  Plug that URL into\nwhatever tool you use to validate JSON, and associate it with\n<code>pricing.json</code> files.</p>\n<h2 id=\"heading-vs-code\">VS Code</h2>\n<p>More info on editing JSON is available <a target=\"_blank\" href=\"https://code.visualstudio.com/docs/languages/json\">in the VSCode\ndocs</a>.</p>\n<ol>\n<li>Open the <a target=\"_blank\" href=\"https://code.visualstudio.com/docs/getstarted/settings\">User and Workspace\nSettings</a>\nmenu.</li>\n<li>Click <code>Extensions</code> and then <code>JSON</code> in the left sidebar.</li>\n<li>Look for the option \"JSON &gt; Schema Download: Enable\" and ensure\nthat the box is checked.</li>\n<li>Underneath that, look for the option \"JSON: Schemas\" and click\n\"Edit in settings.json\"</li>\n</ol>\n<p><img src=\"https://cdn.hashnode.com/res/hashnode/image/upload/v1667930888007/PmTGrW3Wq.png\" alt=\"screenshot of VSCode settings page\" /></p>\n<ol>\n<li><p>Add the following section:</p>\n<pre><code class=\"lang-json\"> <span class=\"hljs-string\">\"json.schemas\"</span>: [\n   {\n     <span class=\"hljs-attr\">\"fileMatch\"</span>: [<span class=\"hljs-string\">\"pricing.json\"</span>],\n     <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://www.tier.run/docs/pricing.schema.json\"</span>\n   }\n ],\n</code></pre>\n</li>\n</ol>\n<p>Here's the result:</p>\n<p><img src=\"https://cdn.hashnode.com/res/hashnode/image/upload/v1667930926144/o_cZ9b4SN.png\" alt=\"screenshot of VSCode showing a warning about invalid pricing.json\" /></p>\n<h2 id=\"heading-vimneovim-and-coc\">vim/neovim and COC</h2>\n<p>If you use vim with <a target=\"_blank\" href=\"https://github.com/neoclide/coc.nvim\">COC</a>,\nyou can add support for validating pricing.json files like so:</p>\n<ol>\n<li><p>Ensure that <code>coc-json</code> is enabled.  You can do this by\nrunning <code>:CocInstall coc-json</code> or by having something like the\nfollowing in your <code>~/.vimrc</code>:</p>\n<pre><code> <span class=\"hljs-keyword\">let</span> g:coc_global_extensions = [<span class=\"hljs-string\">'coc-json'</span>]\n</code></pre></li>\n<li><p>Run <code>:CocConfig</code> to option the configuration file for coc.\n(By default this is <code>~/.config/nvim/coc-settings.json</code>.)</p>\n</li>\n<li><p>Add the following field to the object there (if it already\nexists) or add it as a new top level object:</p>\n<pre><code class=\"lang-json\"> {\n   <span class=\"hljs-attr\">\"json.schemas\"</span>: [\n     {\n       <span class=\"hljs-attr\">\"fileMatch\"</span>: [<span class=\"hljs-string\">\"pricing.json\"</span>],\n       <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://www.tier.run/docs/pricing.schema.json\"</span>\n     }\n   ]\n }\n</code></pre>\n</li>\n</ol>\n<p>Here's what it looks like in action:</p>\n<p><img src=\"https://cdn.hashnode.com/res/hashnode/image/upload/v1667930950185/Q_yVFfvdj.png\" alt=\"screenshot of vim showing a warning about invalid pricing.json\" /></p>\n<p>That's it!</p>\n",
      "contentMarkdown": "This is a quick guide for adding the schema for\n[`pricing.json`](https://www.tier.run/docs/pricing.json) files to\nvim and VSCode.\n\n## TL;DR\n\nThe schema for `pricing.json` files is available at\n<https://www.tier.run/docs/pricing.schema.json>.  Plug that URL into\nwhatever tool you use to validate JSON, and associate it with\n`pricing.json` files.\n\n## VS Code\n\nMore info on editing JSON is available [in the VSCode\ndocs](https://code.visualstudio.com/docs/languages/json).\n\n1. Open the [User and Workspace\n   Settings](https://code.visualstudio.com/docs/getstarted/settings)\n   menu.\n2. Click `Extensions` and then `JSON` in the left sidebar.\n3. Look for the option \"JSON > Schema Download: Enable\" and ensure\n   that the box is checked.\n4. Underneath that, look for the option \"JSON: Schemas\" and click\n   \"Edit in settings.json\"\n\n![screenshot of VSCode settings page](https://cdn.hashnode.com/res/hashnode/image/upload/v1667930888007/PmTGrW3Wq.png align=\"left\")\n\n5. Add the following section:\n\n    ```json\n    \"json.schemas\": [\n      {\n        \"fileMatch\": [\"pricing.json\"],\n        \"url\": \"https://www.tier.run/docs/pricing.schema.json\"\n      }\n    ],\n    ```\n\nHere's the result:\n\n![screenshot of VSCode showing a warning about invalid pricing.json](https://cdn.hashnode.com/res/hashnode/image/upload/v1667930926144/o_cZ9b4SN.png align=\"left\")\n\n## vim/neovim and COC\n\nIf you use vim with [COC](https://github.com/neoclide/coc.nvim),\nyou can add support for validating pricing.json files like so:\n\n1. Ensure that `coc-json` is enabled.  You can do this by\n   running `:CocInstall coc-json` or by having something like the\n   following in your `~/.vimrc`:\n\n    ```\n    let g:coc_global_extensions = ['coc-json']\n    ```\n\n2. Run `:CocConfig` to option the configuration file for coc.\n   (By default this is `~/.config/nvim/coc-settings.json`.)\n\n3. Add the following field to the object there (if it already\n   exists) or add it as a new top level object:\n\n    ```json\n    {\n      \"json.schemas\": [\n        {\n          \"fileMatch\": [\"pricing.json\"],\n          \"url\": \"https://www.tier.run/docs/pricing.schema.json\"\n        }\n      ]\n    }\n    ```\n\nHere's what it looks like in action:\n\n![screenshot of vim showing a warning about invalid pricing.json](https://cdn.hashnode.com/res/hashnode/image/upload/v1667930950185/Q_yVFfvdj.png align=\"left\")\n\nThat's it!\n",
      "hasPolls": false,
      "totalPollVotes": 0,
      "upvotes": 0,
      "downvotes": 0,
      "tags": [
        "636a9bc8fe8087002d6e0ee9",
        "6361477ffe8087002da9197b",
        "56744723958ef13879b95262",
        "56744722958ef13879b95126",
        "62ae8cbe0924134a80488b90"
      ],
      "untaggedFrom": [],
      "upvotedBy": [],
      "downvotedBy": [],
      "popularity": 5753.7751,
      "responses": [],
      "responseCount": 0,
      "replyCount": 0,
      "followers": [],
      "isActive": true,
      "isFeatured": false,
      "isEngaging": false,
      "answeredByTarget": false,
      "inviters": [],
      "isDelisted": false,
      "isNotified": false,
      "duplicatePosts": [],
      "numCollapsed": 0,
      "hasReward": false,
      "bookmarkedIn": [],
      "similarPostIds": [],
      "reactions": [],
      "totalReactions": 0,
      "reactionsByCurrentUser": [],
      "totalReactionsByCurrentUser": 0,
      "isPinnedToBlog": false,
      "disableComments": false,
      "commentsPaused": false,
      "hasLatex": false,
      "syncAlgolia": false,
      "enableToc": false,
      "toc": [],
      "numUniqueUsersWhoReacted": 0,
      "_id": "636a9bc9d026415d72d4979e",
      "createdAt": "2022-11-08T18:11:21.234Z",
      "updatedAt": "2022-11-08T18:11:21.234Z",
      "type": "story",
      "partOfPublication": true,
      "title": "Validating `pricing.json` in Your Editor",
      "cuid": "cla8j3mz4000w08mjey6sgh7h",
      "dateAdded": "2022-11-08T18:11:21.233Z",
      "hasCustomDate": null,
      "isCoverAttributionHidden": false,
      "coverImageAttribution": "",
      "coverImagePhotographer": "",
      "slug": "validating-pricingjson-in-your-editor",
      "author": "6350f41336b336a3b7f42bc5",
      "sB": false,
      "isRepublished": false,
      "originalArticleURL": "",
      "readTime": 2,
      "draft": "636a9ab6ced82ae5f3fa854d",
      "publication": "62a38c37a2c282d2d8377855",
      "ogImage": "",
      "metaTitle": "",
      "metaDescription": "",
      "series": null,
      "__v": 1,
      "badges": [],
      "contributors": [],
      "dateUpdated": "2022-11-08T18:13:54.280Z",
      "pendingPublicationApproval": false,
      "pollOptions": [],
      "questionReplies": [],
      "stickCoverToBottom": false,
      "subtitle": "",
      "viewsUpdatedOn": 1686261627410,
      "uniqueReactions": [],
      "reactionToCountMapUnique": { "any": 1 },
      "id": "636a9bc9d026415d72d4979e"
    },
    {
      "reward": { "type": "xlm" },
      "sourcedFromGithub": false,
      "githubAsSourceMeta": null,
      "isAnonymous": false,
      "views": 228,
      "slugOverridden": false,
      "coverImage": "https://cdn.hashnode.com/res/hashnode/image/upload/v1666973814530/qC_sM_xDz.png",
      "autoGeneratedCover": "",
      "brief": "We are proud to share Tier CLI, a tool that lets you define and manage your SaaS application's pricing model following best PriceOps practices. \nPricing is the most effective lever to unlock SaaS performance. However, attempts to iterate on pricing a...",
      "content": "<p>We are proud to share <a target=\"_blank\" href=\"https://github.com/tierrun/tier/\">Tier CLI</a>, a tool that lets you define and manage your SaaS application's pricing model following best <a target=\"_blank\" href=\"https://priceops.org\">PriceOps</a> practices. </p>\n<p>Pricing is the most effective lever to unlock SaaS performance. However, attempts to iterate on pricing are too often hamstrung by complicated workflows, ad hoc conventions, and hidden cross-organization dependencies.</p>\n<p><a target=\"_blank\" href=\"https://www.tier.run\">Tier</a> helps you to define a single source of pricing truth that can be safely and easily updated, with a simple json definition optimized for SaaS use cases. This keeps everything aligned as you find the best product-market fit.</p>\n<h3 id=\"heading-why-we-are-building-tier\">Why we are building Tier</h3>\n<blockquote>\n<p>We are building Tier to bring sanity to the process of implementing and modifying software pricing. </p>\n</blockquote>\n<p>It's a common pattern to build an app, API or service without any built-in logic to manage pricing, plans or customer access. At some point, it's time to charge money for your product. Eventually, you have to make a change to that pricing, either by modifying the features it grants access to or changing the price or both. Without a single source of truth, a change anywhere means making changes everywhere.</p>\n<h3 id=\"heading-building-something-maintainable\">Building something maintainable</h3>\n<p>Typically there is no single point of truth for pricing in software. Do you know where to look to see which of your users are paying, what they are entitled to access, and how they will be impacted by future changes? Most of us don't. </p>\n<p>If you are at this stage, you may be familiar with the different products out there:</p>\n<ul>\n<li>Subscription Management tools</li>\n<li>Configure Price Quote </li>\n<li>Payment gateways</li>\n<li>Metering services\n<img src=\"https://cdn.hashnode.com/res/hashnode/image/upload/v1666971402064/BAgNBeZlU.png\" alt=\"grid1.png\" class=\"image--center mx-auto\" /></li>\n</ul>\n<p>Your app or service also likely has some type of user authentication and authorization service. You may be using a feature flagging service to manage feature enablement for end users. </p>\n<p>Most of the time you will end up writing custom connectors between these tools. Keeping track of which tool holds the authoritative data for any given request is unwieldy. </p>\n<h3 id=\"heading-configuration-is-the-foundation-for-a-safe-system\">Configuration is the foundation for a safe system</h3>\n<p>As part of this release, we are also sharing more about <a target=\"_blank\" href=\"https://www.tier.run/docs/pricing.json\">pricing.json</a> and our overall configuration-driven approach to Price Operations. </p>\n<p>Our goal is to make software price operations safe, easy and reliable.</p>\n<blockquote>\n<h4 id=\"heading-safe\">Safe</h4>\n<p>All pricing configurations are <strong>immutable and versioned</strong> within Tier. Once pushed, a plan version and its associated data cannot be changed. This protects against one system being updated, while another gets out of sync. </p>\n<h4 id=\"heading-easy\">Easy</h4>\n<p>Streamlined interfaces are available for pricing configuration, processing and publishing. </p>\n<h4 id=\"heading-reliable\">Reliable</h4>\n<p>A pricing change or packaging reconfiguration will not be applied unless it can be done successfully.</p>\n</blockquote>\n<h3 id=\"heading-introducing-tier-clihttpsgithubcomtierruntier\">Introducing <a target=\"_blank\" href=\"https://github.com/tierrun/tier\">Tier CLI</a></h3>\n<p><img src=\"https://cdn.hashnode.com/res/hashnode/image/upload/v1666929976844/DhIoBM7qh.gif\" alt=\"render1666929857020.gif\" /></p>\n<p>Today's release is the Tier CLI. A powerful tool to manage your Stripe account using <a target=\"_blank\" href=\"https://www.priceops.org\">PriceOps</a> patterns. </p>\n<p>The Tier CLI will interface directly with your Stripe account in order to reliably manage your product, pricing, subscription and metering data. </p>\n<p>You can then use a <a target=\"_blank\" href=\"https://www.tier.run/docs/sdk/\">Tier SDK</a> to implement usage limits and metering in your app or service. \n<img src=\"https://cdn.hashnode.com/res/hashnode/image/upload/v1666974779403/aDZbi0o8O.png\" alt=\"stripey.png\" /></p>\n<p>Our design goal is to make using the Tier CLI <strong>easier than using Stripe itself</strong>. With the SDK implemented, you will be able to make pricing changes without having to make code changes.</p>\n<blockquote>\n<p>\"With the SDK implemented, you will be able to make pricing changes without having to make code changes.\"</p>\n</blockquote>\n<p>By using <a target=\"_blank\" href=\"https://www.tier.run/docs/pricing.json/\">pricing.json</a>, the <a target=\"_blank\" href=\"https://www.tier.run/docs/cli/\">Tier CLI</a> and our <a target=\"_blank\" href=\"https://www.tier.run/docs/sdk/\">SDKs</a>, you can begin safely and reliably applying pricing changes to your products and services. You can also request current limits for metered features, and report usage to stripe. The CLI will act as a sidecar in order to gracefully manage communication with Stripe.</p>\n<h3 id=\"heading-thank-you\">Thank You!</h3>\n<p>We've spent a lot of time with many eager customers in the last 8 months. These testers have given us an endless amount of insight and have helped us continually improve our design and implementation of <a target=\"_blank\" href=\"https://www.tier.run\">Tier</a>, the <a target=\"_blank\" href=\"https://github.com/tierrun/tier\">Tier CLI</a> and our <a target=\"_blank\" href=\"https://www.tier.run/docs/sdk/\">SDK</a>s. </p>\n<p>There is much more coming that we are eager to share with you! </p>\n<ul>\n<li><a target=\"_blank\" href=\"https://blog.tier.run/tier-hello-world-demo\">Hello World example</a></li>\n<li><a target=\"_blank\" href=\"https://tier.run/docs\">Read our docs</a></li>\n<li><a target=\"_blank\" href=\"https://join.slack.com/t/tier-community/shared_invite/zt-1blotqjb9-wvkYMo8QkhaEWziprdjnIA\">Join our Slack</a></li>\n<li><a target=\"_blank\" href=\"https://cal.com/tier/tier-demo\">Get a demo of the full set of Tier services</a></li>\n</ul>\n<p>Jevon, Blake and Isaac.</p>\n",
      "contentMarkdown": "We are proud to share [Tier CLI](https://github.com/tierrun/tier/), a tool that lets you define and manage your SaaS application's pricing model following best [PriceOps](https://priceops.org) practices. \n\nPricing is the most effective lever to unlock SaaS performance. However, attempts to iterate on pricing are too often hamstrung by complicated workflows, ad hoc conventions, and hidden cross-organization dependencies.\n\n[Tier](https://www.tier.run) helps you to define a single source of pricing truth that can be safely and easily updated, with a simple json definition optimized for SaaS use cases. This keeps everything aligned as you find the best product-market fit.\n\n### Why we are building Tier\n>We are building Tier to bring sanity to the process of implementing and modifying software pricing. \n\nIt's a common pattern to build an app, API or service without any built-in logic to manage pricing, plans or customer access. At some point, it's time to charge money for your product. Eventually, you have to make a change to that pricing, either by modifying the features it grants access to or changing the price or both. Without a single source of truth, a change anywhere means making changes everywhere.\n\n### Building something maintainable\nTypically there is no single point of truth for pricing in software. Do you know where to look to see which of your users are paying, what they are entitled to access, and how they will be impacted by future changes? Most of us don't. \n\nIf you are at this stage, you may be familiar with the different products out there:\n* Subscription Management tools\n* Configure Price Quote \n* Payment gateways\n* Metering services\n![grid1.png](https://cdn.hashnode.com/res/hashnode/image/upload/v1666971402064/BAgNBeZlU.png align=\"center\")\n\nYour app or service also likely has some type of user authentication and authorization service. You may be using a feature flagging service to manage feature enablement for end users. \n\nMost of the time you will end up writing custom connectors between these tools. Keeping track of which tool holds the authoritative data for any given request is unwieldy. \n\n### Configuration is the foundation for a safe system\nAs part of this release, we are also sharing more about [pricing.json](https://www.tier.run/docs/pricing.json) and our overall configuration-driven approach to Price Operations. \n\nOur goal is to make software price operations safe, easy and reliable.\n\n> #### Safe\n> All pricing configurations are **immutable and versioned** within Tier. Once pushed, a plan version and its associated data cannot be changed. This protects against one system being updated, while another gets out of sync. \n> \n> #### Easy \n> Streamlined interfaces are available for pricing configuration, processing and publishing. \n> \n> #### Reliable\n> A pricing change or packaging reconfiguration will not be applied unless it can be done successfully.\n\n### Introducing [Tier CLI](https://github.com/tierrun/tier)\n![render1666929857020.gif](https://cdn.hashnode.com/res/hashnode/image/upload/v1666929976844/DhIoBM7qh.gif align=\"left\")\n\nToday's release is the Tier CLI. A powerful tool to manage your Stripe account using [PriceOps](https://www.priceops.org) patterns. \n\nThe Tier CLI will interface directly with your Stripe account in order to reliably manage your product, pricing, subscription and metering data. \n\nYou can then use a [Tier SDK](https://www.tier.run/docs/sdk/) to implement usage limits and metering in your app or service. \n![stripey.png](https://cdn.hashnode.com/res/hashnode/image/upload/v1666974779403/aDZbi0o8O.png align=\"left\")\n\nOur design goal is to make using the Tier CLI **easier than using Stripe itself**. With the SDK implemented, you will be able to make pricing changes without having to make code changes.\n>\"With the SDK implemented, you will be able to make pricing changes without having to make code changes.\"\n\nBy using [pricing.json](https://www.tier.run/docs/pricing.json/), the [Tier CLI](https://www.tier.run/docs/cli/) and our [SDKs](https://www.tier.run/docs/sdk/), you can begin safely and reliably applying pricing changes to your products and services. You can also request current limits for metered features, and report usage to stripe. The CLI will act as a sidecar in order to gracefully manage communication with Stripe.\n\n### Thank You!\nWe've spent a lot of time with many eager customers in the last 8 months. These testers have given us an endless amount of insight and have helped us continually improve our design and implementation of [Tier](https://www.tier.run), the [Tier CLI](https://github.com/tierrun/tier) and our [SDK](https://www.tier.run/docs/sdk/)s. \n\nThere is much more coming that we are eager to share with you! \n\n- [Hello World example](https://blog.tier.run/tier-hello-world-demo)\n- [Read our docs](https://tier.run/docs)\n- [Join our Slack](https://join.slack.com/t/tier-community/shared_invite/zt-1blotqjb9-wvkYMo8QkhaEWziprdjnIA)\n- [Get a demo of the full set of Tier services](https://cal.com/tier/tier-demo)\n\nJevon, Blake and Isaac.\n\n\n",
      "hasPolls": false,
      "totalPollVotes": 0,
      "upvotes": 0,
      "downvotes": 0,
      "tags": [
        "56744723958ef13879b9554c",
        "56744722958ef13879b950a5",
        "631ca902f73f4734bc054995"
      ],
      "untaggedFrom": [],
      "upvotedBy": [],
      "downvotedBy": [],
      "popularity": 5742.7581,
      "responses": [],
      "responseCount": 0,
      "replyCount": 0,
      "followers": [],
      "isActive": true,
      "isFeatured": false,
      "isEngaging": false,
      "answeredByTarget": false,
      "inviters": [],
      "isDelisted": false,
      "isNotified": false,
      "duplicatePosts": [],
      "numCollapsed": 0,
      "hasReward": false,
      "bookmarkedIn": [],
      "similarPostIds": [],
      "reactions": [
        "567453d0b73d6a82ac8c5abd",
        "5c090d96c2a9c2a674d3548a",
        "5c090d96c2a9c2a674d35488",
        "5c090d96c2a9c2a674d35486",
        "567453d0b73d6a82ac8c5ab9",
        "5c090d96c2a9c2a674d35484",
        "567453d0b73d6a82ac8c5abc",
        "5c090d96c2a9c2a674d35485",
        "5c090d96c2a9c2a674d3548b"
      ],
      "totalReactions": 10,
      "reactionsByCurrentUser": [],
      "totalReactionsByCurrentUser": 0,
      "isPinnedToBlog": false,
      "disableComments": false,
      "commentsPaused": false,
      "hasLatex": false,
      "syncAlgolia": true,
      "enableToc": false,
      "toc": [],
      "numUniqueUsersWhoReacted": 0,
      "_id": "63625b6a2bea9894c1b12a05",
      "createdAt": "2022-11-02T11:58:34.349Z",
      "updatedAt": "2022-11-02T11:58:34.349Z",
      "type": "story",
      "partOfPublication": true,
      "title": "Tier Free with a Tier CLI and SDKs",
      "cuid": "cl9zl54ks000l09megmr8d3cc",
      "dateAdded": "2022-11-02T11:58:34.349Z",
      "hasCustomDate": null,
      "isCoverAttributionHidden": false,
      "coverImageAttribution": "",
      "coverImagePhotographer": "",
      "slug": "tier-free-with-a-tier-cli-and-sdks",
      "author": "61eabf4c0b35507a93a04907",
      "sB": false,
      "isRepublished": false,
      "originalArticleURL": null,
      "readTime": 4,
      "draft": "635b264a682db62723aa85b0",
      "publication": "62a38c37a2c282d2d8377855",
      "ogImage": null,
      "metaTitle": null,
      "metaDescription": null,
      "viewsUpdatedOn": 1685809829947,
      "reactionToCountMap": {
        "reaction_567453d0b73d6a82ac8c5abd": 1,
        "reaction_5c090d96c2a9c2a674d3548a": 1,
        "reaction_5c090d96c2a9c2a674d35488": 1,
        "reaction_5c090d96c2a9c2a674d35486": 1,
        "reaction_567453d0b73d6a82ac8c5ab9": 1,
        "reaction_5c090d96c2a9c2a674d35484": 2,
        "reaction_567453d0b73d6a82ac8c5abc": 1,
        "reaction_5c090d96c2a9c2a674d35485": 1,
        "reaction_5c090d96c2a9c2a674d3548b": 1
      },
      "pollOptions": [],
      "badges": [],
      "questionReplies": [],
      "contributors": [],
      "uniqueReactions": [
        "567453d0b73d6a82ac8c5abd",
        "5c090d96c2a9c2a674d3548a",
        "5c090d96c2a9c2a674d35488",
        "5c090d96c2a9c2a674d35486",
        "567453d0b73d6a82ac8c5ab9",
        "5c090d96c2a9c2a674d35484",
        "567453d0b73d6a82ac8c5abc",
        "5c090d96c2a9c2a674d35485",
        "5c090d96c2a9c2a674d3548b"
      ],
      "reactionToCountMapUnique": {
        "reaction_567453d0b73d6a82ac8c5abd": 1,
        "reaction_5c090d96c2a9c2a674d3548a": 1,
        "reaction_5c090d96c2a9c2a674d35488": 1,
        "reaction_5c090d96c2a9c2a674d35486": 1,
        "reaction_567453d0b73d6a82ac8c5ab9": 1,
        "reaction_5c090d96c2a9c2a674d35484": 2,
        "reaction_567453d0b73d6a82ac8c5abc": 1,
        "reaction_5c090d96c2a9c2a674d35485": 1,
        "reaction_5c090d96c2a9c2a674d3548b": 1
      },
      "id": "63625b6a2bea9894c1b12a05"
    },
    {
      "reward": { "type": "xlm" },
      "sourcedFromGithub": false,
      "githubAsSourceMeta": null,
      "isAnonymous": false,
      "views": 1784,
      "slugOverridden": false,
      "coverImage": "",
      "autoGeneratedCover": "",
      "brief": "This is an example application that shows using Tier to integrate\npricing, in a way that makes it possible to implement best\nPriceOps practices with a trivial amount\nof effort.\nThe example app is exceedingly simple, but the principles are\nflexible en...",
      "content": "<p>This is an example application that shows using Tier to integrate\npricing, in a way that makes it possible to implement best\n<a target=\"_blank\" href=\"https://priceops.org\">PriceOps</a> practices with a trivial amount\nof effort.</p>\n<p>The example app is exceedingly simple, but the principles are\nflexible enough to easily be put into practice in much more\ncomplicated applications.</p>\n<p>All of the code for this demo is available on GitHub, at\n<a target=\"_blank\" href=\"https://github.com/tierrun/tier-node-demo\">tierrun/tier-node-demo</a>.</p>\n<h2 id=\"heading-the-app\">The App</h2>\n<p>The application we'll be monetizing is a simple temperature\nconversion app.  If you give it a Fahrenheit temperature, it'll\nconvert it to Celsius, and vice versa.  This is provided via a\nsimple site built on <a target=\"_blank\" href=\"https://expressjs.com\">express</a>.</p>\n<p>To see the app as it exists <em>before</em> adding any Tier integration,\ncheck out the <a target=\"_blank\" href=\"https://github.com/tierrun/tier-node-demo/tree/pre-tier\"><code>pre-tier</code>\nbranch</a>.</p>\n<h2 id=\"heading-nothing-up-our-sleeves\">Nothing Up Our Sleeves</h2>\n<p>Nothing described here relies on any services running on\nhttps://tier.run, or anything at all other than Stripe.</p>\n<p>You can think of Tier as a very fancy Stripe client that manages\nmetadata and connections.  It sets up your system so that the\npath of least resistance is also the path of optimum\n<a target=\"_blank\" href=\"https://priceops.org\">PriceOps</a>.</p>\n<h2 id=\"heading-setting-up-tier\">Setting Up Tier</h2>\n<p>First, we'll have to <a target=\"_blank\" href=\"https://tier.run/docs/install\">install the Tier\nbinary</a>.  On macOS machines, you\ncan do this with Homebrew:</p>\n<pre><code>brew install tierrun/tap/tier\n</code></pre><p>Binaries for major architectures can be found <a target=\"_blank\" href=\"https://github.com/tierrun/tier/releases\">on\nGitHub</a>.</p>\n<p>You can also install it using <code>go</code> version 1.19 or later:</p>\n<pre><code>go install tier.run/cmd/tier@latest\n</code></pre><p>Once it's installed, use the <a target=\"_blank\" href=\"https://tier.run/docs/cli/connect\"><code>tier\nconnect</code></a> command to give Tier\naccess to your Stripe account.  By default, Tier will only work\non test mode Stripe data, using a restricted key with permissions\nthat you can easily lock down.</p>\n<p>Alternatively, you can set the <code>STRIPE_API_KEY</code> in the\nenvironment, if you have a key that you'd like Tier to use.</p>\n<h2 id=\"heading-installing-tier-sdk\">Installing Tier SDK</h2>\n<p>In the app, we install the Tier SDK by running:</p>\n<pre><code>npm install tier\n</code></pre><p><a target=\"_blank\" href=\"https://github.com/tierrun/tier-node-demo/commit/f32b5b4\">f32b5b4</a></p>\n<h2 id=\"heading-create-pricing-model\">Create Pricing Model</h2>\n<p>We create a pricing model by writing a <a target=\"_blank\" href=\"https://www.tier.run/docs/pricing.json\"><code>pricing.json</code>\nfile</a>.</p>\n<p>The pricing model is a simple free/pro scheme.  Free accounts get\n10 free temperature conversions per month, then they have to upgrade.</p>\n<p>Pro accounts cost $10 per month, and get 100 conversions per\nmonth included with that base price.  Beyond that, they will be\ncharged $0.01 per conversion.</p>\n<p>To do this, we define two plans in our pricing.json file with the\nappropriate tiers.  We're calling the feature <code>feature:convert</code>.</p>\n<pre><code class=\"lang-json\">{\n  <span class=\"hljs-attr\">\"plans\"</span>: {\n    <span class=\"hljs-attr\">\"plan:free@1\"</span>: {\n      <span class=\"hljs-attr\">\"title\"</span>: <span class=\"hljs-string\">\"Convert (free)\"</span>,\n      <span class=\"hljs-attr\">\"features\"</span>: {\n        <span class=\"hljs-attr\">\"feature:convert\"</span>: {\n          <span class=\"hljs-attr\">\"title\"</span>: <span class=\"hljs-string\">\"Temperature Conversions\"</span>,\n          <span class=\"hljs-attr\">\"tiers\"</span>: [\n            {\n              <span class=\"hljs-attr\">\"upto\"</span>: <span class=\"hljs-number\">10</span>,\n              <span class=\"hljs-attr\">\"price\"</span>: <span class=\"hljs-number\">0</span>\n            }\n          ]\n        }\n      }\n    },\n    <span class=\"hljs-attr\">\"plan:pro@1\"</span>: {\n      <span class=\"hljs-attr\">\"title\"</span>: <span class=\"hljs-string\">\"Convert (Pro)\"</span>,\n      <span class=\"hljs-attr\">\"features\"</span>: {\n        <span class=\"hljs-attr\">\"feature:convert\"</span>: {\n          <span class=\"hljs-attr\">\"title\"</span>: <span class=\"hljs-string\">\"Temperature Conversions\"</span>,\n          <span class=\"hljs-attr\">\"tiers\"</span>: [\n            {\n              <span class=\"hljs-attr\">\"base\"</span>: <span class=\"hljs-number\">1000</span>,\n              <span class=\"hljs-attr\">\"price\"</span>: <span class=\"hljs-number\">0</span>,\n              <span class=\"hljs-attr\">\"upto\"</span>: <span class=\"hljs-number\">100</span>\n            },\n            {\n              <span class=\"hljs-attr\">\"price\"</span>: <span class=\"hljs-number\">1</span>\n            }\n          ]\n        }\n      }\n    }\n  }\n}\n</code></pre>\n<p>The most important part is that plans are named like\n<code>plan:&lt;name&gt;@&lt;version&gt;</code>, and features start with <code>feature:</code>.  But\nif you try to do something against the rules, Tier will give you\nan error telling you what's wrong.</p>\n<p>When we want to change this scheme, we can add a new\nplan (or a new version of the <code>free</code> or <code>pro</code> plan).  Any\ncustomers still on the old version will be unaffected.</p>\n<p>To push the pricing model live, run:</p>\n<pre><code>tier push pricing.json\n</code></pre><p><a target=\"_blank\" href=\"https://github.com/tierrun/tier-node-demo/commit/3f6e7cf\">3f6e7cf</a></p>\n<h2 id=\"heading-the-pricing-page\">The <code>/pricing</code> Page</h2>\n<p>In order to create a nice little two-column page showing the plan\noptions, we can pull the highest version of each plan with the\n<code>tier.pullLatest()</code> method, and hand that object off to our\n<a target=\"_blank\" href=\"https://github.com/tierrun/tier-node-demo/blob/main/lib/templates/pricing.ejs\">template</a>\nto turn into HTML.  I'm using EJS in this example, because it's\nso dead simple to throw together an example like this, but you\ncan of course do the same thing with React, nunjucks, or any\nother templating system.</p>\n<p>Note: beware that this is definitely some demo magic.  We're just sorting the plan versions lexically, but in practice, you'll probably want a config or some other system to say what the \"public\" version of any given plan is, so you don't end up with something like <code>plan:free@zzzZZZ:final2.final.latest.final</code>.  The <code>tier.pullLatest()</code> method is marked as \"experimental\" in the Node SDK for this reason, we expect to add more utility in this area soon.</p>\n<p>The important part is that we're <em>not</em> reading the file from\ndisk, or hard-coding the plan details into our app.  Instead, we\npull from the single source of truth, and let that drive the rest\nof the system.</p>\n<p><a target=\"_blank\" href=\"https://github.com/tierrun/tier-node-demo/commit/c0a7859\">c0a7859</a></p>\n<h2 id=\"heading-subscribing-users-to-plans\">Subscribing Users To Plans</h2>\n<p>Stripe doesn't really have a concept of a \"plan\".  There are\n<em>Products</em> which have <em>Prices</em>, and multiple Price objects can be\nattached to a customer's subscription.</p>\n<p>Each of those Price objects has a unique identifier.  So, if you\nwant to treat multiple \"Prices\" as a \"plan\", you\nhave to keep track of them to use the right ones when creating a\nsubscription.  As you add more tracked features, and test more\ndifferent iterations of packaging them up into plans for\ncustomers, the complexity increases geometrically.</p>\n<p>Thankfully, using Tier, we can just do:</p>\n<pre><code class=\"lang-js\"><span class=\"hljs-keyword\">await</span> tier.subscribe(org, plan)\n</code></pre>\n<p>All of the Price objects associated with the plan\nwill be attached automatically.</p>\n<p>The <code>org</code> is an opaque string that identifies the customer.  It\nmust start with <code>org:</code>, and it must be unique, but you can use\nwhatever identifier you use for customers in your system already.\nThese are all perfectly acceptable: <code>org:user@email.com</code>,\n<code>org:beefcafebad1d3a</code>, <code>org:213415-221321-4321</code>.  There's\n(almost) never any reason to deal with the Stripe Customer ID.</p>\n<p>The <code>plan</code> is the <code>plan:&lt;name&gt;@&lt;version&gt;</code> from your\n<code>pricing.json</code> model.  You should not hard code this!  In the\ndemo, you'll note that we get it from a <code>POST</code> request when the\nuser clicks the \"Subscribe\" button on the programmatically\ngenerated pricing page.</p>\n<p>No matter how many versions of your plans you have, the plan identifier is\nall you need to create the correct subscription for your customer.</p>\n<blockquote>\n<p>Note: you <em>can</em> still create subscriptions using Tier that mix\nand match any prices and entitlements you like.  We'll cover\nthat in a future \"advanced usage\" blog post, as it's out of\nscope for a \"Hello, World\" app such as this.</p>\n</blockquote>\n<p><a target=\"_blank\" href=\"https://github.com/tierrun/tier-node-demo/commit/ecb1cf1\">ecb1cf1</a></p>\n<h2 id=\"heading-reporting-usage\">Reporting Usage</h2>\n<p>Just like with subscriptions, rather than having to track Price objects\nto know how to report feature usage to Stripe, using Tier, we just need\nthe <code>org:...</code> identifier and the feature name from your pricing model.</p>\n<pre><code class=\"lang-js\"><span class=\"hljs-keyword\">await</span> tier.report(org, <span class=\"hljs-string\">'feature:convert'</span>)\n</code></pre>\n<p>The default count is 1, but if you want to report more than 1 of\nsomething, you can just pass <code>n</code> as the third argument:</p>\n<pre><code class=\"lang-js\"><span class=\"hljs-keyword\">await</span> tier.report(org, <span class=\"hljs-string\">'feature:morethanone'</span>, <span class=\"hljs-number\">100</span>)\n</code></pre>\n<p>In this demo, we're reporting feature usage right at the point\nof delivery.  For many use cases, that's perfectly fine.  But,\nfor example, if you're tracking download bandwidth or some other\nhigh-volume metric, you can of course roll that up and report it\nin a batch at any cadence that makes sense for your application.</p>\n<p>The caveat, of course, is that the usage data you pull from Tier\nwon't be fully up to date if you haven't yet updated it.</p>\n<p><a target=\"_blank\" href=\"https://github.com/tierrun/tier-node-demo/commit/18bfb50\">18bfb50</a></p>\n<h2 id=\"heading-limiting-access\">Limiting Access</h2>\n<p>We said that users on the <code>free</code> account can only get 10\nconversions per month.  In order to make sure they haven't gone\nover (and that they're on a plan that has access to the feature\nat all!) we can call the <code>tier.limit</code> method, like this:</p>\n<pre><code class=\"lang-js\"><span class=\"hljs-keyword\">const</span> usage = <span class=\"hljs-keyword\">await</span> tier.limit(org, feature)\n</code></pre>\n<p>This method will return an object with <code>used</code> and <code>limit</code> fields,\nwhich you can check to see whether the feature should be enabled.</p>\n<p>Again, there's no need to keep track of Customer or Price\nobjects, or even know what plan a user is subscribed to.  Just\ncheck whether they have access to the feature, and if so, give\nthem the feature.</p>\n<p><a target=\"_blank\" href=\"https://github.com/tierrun/tier-node-demo/commit/920f8c1\">920f8c1</a></p>\n<h2 id=\"heading-changing-plans\">Changing Plans</h2>\n<p>You can try out changing the pricing model any time you like, as\noften as you like:</p>\n<pre><code>tier push pricing<span class=\"hljs-number\">-2.</span>json\n</code></pre><p>When you do this, the <code>/pricing</code> page gets updated with the new\nversion of the plan, but importantly, the customer's plan <em>isn't</em>\nchanged.  With Tier, grandparenting in your existing userbase is\nthe default, so you never have a situation where you try a\ndifferent price, and make everyone upset.</p>\n<p>In fact, you could even have multiple versions of a plan living\nside by side, and see which one encourages better user behavior\nor gets better conversions.</p>\n<h2 id=\"heading-collecting-payment-info\">Collecting Payment Info</h2>\n<p>For this, we still will need to go direct to Stripe, so that the\nuser can submit their credit card information directly to Stripe\nfrom their browser, using <code>stripe.Elements</code>.</p>\n<p>Thankfully, the <code>tier.whois(org)</code> method will give us their\nStripe Customer ID.</p>\n<p><a target=\"_blank\" href=\"https://github.com/tierrun/tier-node-demo/commit/cd8b1ae\">cd8b1ae</a></p>\n<h2 id=\"heading-thats-it\">That's it!</h2>\n<p>In this demo, we took a working application and monetized it,\nwithout ever having to worry about managing Stripe object\nidentifiers, and any future change to our pricing model is\ntrivial.</p>\n<p>There's a lot more documentation available <a target=\"_blank\" href=\"https://tier.run/docs\">on the Tier website</a>.  Try it out, and <a target=\"_blank\" href=\"https://join.slack.com/t/tier-community/shared_invite/zt-1blotqjb9-wvkYMo8QkhaEWziprdjnIA\">let us know what you think</a>!</p>\n",
      "contentMarkdown": "This is an example application that shows using Tier to integrate\npricing, in a way that makes it possible to implement best\n[PriceOps](https://priceops.org) practices with a trivial amount\nof effort.\n\nThe example app is exceedingly simple, but the principles are\nflexible enough to easily be put into practice in much more\ncomplicated applications.\n\nAll of the code for this demo is available on GitHub, at\n[tierrun/tier-node-demo](https://github.com/tierrun/tier-node-demo).\n\n## The App\n\nThe application we'll be monetizing is a simple temperature\nconversion app.  If you give it a Fahrenheit temperature, it'll\nconvert it to Celsius, and vice versa.  This is provided via a\nsimple site built on [express](https://expressjs.com).\n\nTo see the app as it exists _before_ adding any Tier integration,\ncheck out the [`pre-tier`\nbranch](https://github.com/tierrun/tier-node-demo/tree/pre-tier).\n\n## Nothing Up Our Sleeves\n\nNothing described here relies on any services running on\nhttps://tier.run, or anything at all other than Stripe.\n\nYou can think of Tier as a very fancy Stripe client that manages\nmetadata and connections.  It sets up your system so that the\npath of least resistance is also the path of optimum\n[PriceOps](https://priceops.org).\n\n## Setting Up Tier\n\nFirst, we'll have to [install the Tier\nbinary](https://tier.run/docs/install).  On macOS machines, you\ncan do this with Homebrew:\n\n```\nbrew install tierrun/tap/tier\n```\n\nBinaries for major architectures can be found [on\nGitHub](https://github.com/tierrun/tier/releases).\n\nYou can also install it using `go` version 1.19 or later:\n\n```\ngo install tier.run/cmd/tier@latest\n```\n\nOnce it's installed, use the [`tier\nconnect`](https://tier.run/docs/cli/connect) command to give Tier\naccess to your Stripe account.  By default, Tier will only work\non test mode Stripe data, using a restricted key with permissions\nthat you can easily lock down.\n\nAlternatively, you can set the `STRIPE_API_KEY` in the\nenvironment, if you have a key that you'd like Tier to use.\n\n## Installing Tier SDK\n\nIn the app, we install the Tier SDK by running:\n\n```\nnpm install tier\n```\n\n[f32b5b4](https://github.com/tierrun/tier-node-demo/commit/f32b5b4)\n\n## Create Pricing Model\n\nWe create a pricing model by writing a [`pricing.json`\nfile](https://www.tier.run/docs/pricing.json).\n\nThe pricing model is a simple free/pro scheme.  Free accounts get\n10 free temperature conversions per month, then they have to upgrade.\n\nPro accounts cost $10 per month, and get 100 conversions per\nmonth included with that base price.  Beyond that, they will be\ncharged $0.01 per conversion.\n\nTo do this, we define two plans in our pricing.json file with the\nappropriate tiers.  We're calling the feature `feature:convert`.\n\n```json\n{\n  \"plans\": {\n    \"plan:free@1\": {\n      \"title\": \"Convert (free)\",\n      \"features\": {\n        \"feature:convert\": {\n          \"title\": \"Temperature Conversions\",\n          \"tiers\": [\n            {\n              \"upto\": 10,\n              \"price\": 0\n            }\n          ]\n        }\n      }\n    },\n    \"plan:pro@1\": {\n      \"title\": \"Convert (Pro)\",\n      \"features\": {\n        \"feature:convert\": {\n          \"title\": \"Temperature Conversions\",\n          \"tiers\": [\n            {\n              \"base\": 1000,\n              \"price\": 0,\n              \"upto\": 100\n            },\n            {\n              \"price\": 1\n            }\n          ]\n        }\n      }\n    }\n  }\n}\n```\n\nThe most important part is that plans are named like\n`plan:<name>@<version>`, and features start with `feature:`.  But\nif you try to do something against the rules, Tier will give you\nan error telling you what's wrong.\n\nWhen we want to change this scheme, we can add a new\nplan (or a new version of the `free` or `pro` plan).  Any\ncustomers still on the old version will be unaffected.\n\nTo push the pricing model live, run:\n\n```\ntier push pricing.json\n```\n\n[3f6e7cf](https://github.com/tierrun/tier-node-demo/commit/3f6e7cf)\n\n## The `/pricing` Page\n\nIn order to create a nice little two-column page showing the plan\noptions, we can pull the highest version of each plan with the\n`tier.pullLatest()` method, and hand that object off to our\n[template](https://github.com/tierrun/tier-node-demo/blob/main/lib/templates/pricing.ejs)\nto turn into HTML.  I'm using EJS in this example, because it's\nso dead simple to throw together an example like this, but you\ncan of course do the same thing with React, nunjucks, or any\nother templating system.\n\nNote: beware that this is definitely some demo magic.  We're just sorting the plan versions lexically, but in practice, you'll probably want a config or some other system to say what the \"public\" version of any given plan is, so you don't end up with something like `plan:free@zzzZZZ:final2.final.latest.final`.  The `tier.pullLatest()` method is marked as \"experimental\" in the Node SDK for this reason, we expect to add more utility in this area soon.\n\nThe important part is that we're _not_ reading the file from\ndisk, or hard-coding the plan details into our app.  Instead, we\npull from the single source of truth, and let that drive the rest\nof the system.\n\n[c0a7859](https://github.com/tierrun/tier-node-demo/commit/c0a7859)\n\n## Subscribing Users To Plans\n\nStripe doesn't really have a concept of a \"plan\".  There are\n_Products_ which have _Prices_, and multiple Price objects can be\nattached to a customer's subscription.\n\nEach of those Price objects has a unique identifier.  So, if you\nwant to treat multiple \"Prices\" as a \"plan\", you\nhave to keep track of them to use the right ones when creating a\nsubscription.  As you add more tracked features, and test more\ndifferent iterations of packaging them up into plans for\ncustomers, the complexity increases geometrically.\n\nThankfully, using Tier, we can just do:\n\n```js\nawait tier.subscribe(org, plan)\n```\n\nAll of the Price objects associated with the plan\nwill be attached automatically.\n\nThe `org` is an opaque string that identifies the customer.  It\nmust start with `org:`, and it must be unique, but you can use\nwhatever identifier you use for customers in your system already.\nThese are all perfectly acceptable: `org:user@email.com`,\n`org:beefcafebad1d3a`, `org:213415-221321-4321`.  There's\n(almost) never any reason to deal with the Stripe Customer ID.\n\nThe `plan` is the `plan:<name>@<version>` from your\n`pricing.json` model.  You should not hard code this!  In the\ndemo, you'll note that we get it from a `POST` request when the\nuser clicks the \"Subscribe\" button on the programmatically\ngenerated pricing page.\n\nNo matter how many versions of your plans you have, the plan identifier is\nall you need to create the correct subscription for your customer.\n\n> Note: you _can_ still create subscriptions using Tier that mix\n> and match any prices and entitlements you like.  We'll cover\n> that in a future \"advanced usage\" blog post, as it's out of\n> scope for a \"Hello, World\" app such as this.\n\n[ecb1cf1](https://github.com/tierrun/tier-node-demo/commit/ecb1cf1)\n\n## Reporting Usage\n\nJust like with subscriptions, rather than having to track Price objects\nto know how to report feature usage to Stripe, using Tier, we just need\nthe `org:...` identifier and the feature name from your pricing model.\n\n```js\nawait tier.report(org, 'feature:convert')\n```\n\nThe default count is 1, but if you want to report more than 1 of\nsomething, you can just pass `n` as the third argument:\n\n```js\nawait tier.report(org, 'feature:morethanone', 100)\n```\n\nIn this demo, we're reporting feature usage right at the point\nof delivery.  For many use cases, that's perfectly fine.  But,\nfor example, if you're tracking download bandwidth or some other\nhigh-volume metric, you can of course roll that up and report it\nin a batch at any cadence that makes sense for your application.\n\nThe caveat, of course, is that the usage data you pull from Tier\nwon't be fully up to date if you haven't yet updated it.\n\n[18bfb50](https://github.com/tierrun/tier-node-demo/commit/18bfb50)\n\n## Limiting Access\n\nWe said that users on the `free` account can only get 10\nconversions per month.  In order to make sure they haven't gone\nover (and that they're on a plan that has access to the feature\nat all!) we can call the `tier.limit` method, like this:\n\n```js\nconst usage = await tier.limit(org, feature)\n```\n\nThis method will return an object with `used` and `limit` fields,\nwhich you can check to see whether the feature should be enabled.\n\nAgain, there's no need to keep track of Customer or Price\nobjects, or even know what plan a user is subscribed to.  Just\ncheck whether they have access to the feature, and if so, give\nthem the feature.\n\n[920f8c1](https://github.com/tierrun/tier-node-demo/commit/920f8c1)\n\n## Changing Plans\n\nYou can try out changing the pricing model any time you like, as\noften as you like:\n\n```\ntier push pricing-2.json\n```\n\nWhen you do this, the `/pricing` page gets updated with the new\nversion of the plan, but importantly, the customer's plan _isn't_\nchanged.  With Tier, grandparenting in your existing userbase is\nthe default, so you never have a situation where you try a\ndifferent price, and make everyone upset.\n\nIn fact, you could even have multiple versions of a plan living\nside by side, and see which one encourages better user behavior\nor gets better conversions.\n\n## Collecting Payment Info\n\nFor this, we still will need to go direct to Stripe, so that the\nuser can submit their credit card information directly to Stripe\nfrom their browser, using `stripe.Elements`.\n\nThankfully, the `tier.whois(org)` method will give us their\nStripe Customer ID.\n\n[cd8b1ae](https://github.com/tierrun/tier-node-demo/commit/cd8b1ae)\n\n## That's it!\n\nIn this demo, we took a working application and monetized it,\nwithout ever having to worry about managing Stripe object\nidentifiers, and any future change to our pricing model is\ntrivial.\n\nThere's a lot more documentation available [on the Tier website](https://tier.run/docs).  Try it out, and [let us know what you think](https://join.slack.com/t/tier-community/shared_invite/zt-1blotqjb9-wvkYMo8QkhaEWziprdjnIA)!",
      "hasPolls": false,
      "totalPollVotes": 0,
      "upvotes": 0,
      "downvotes": 0,
      "tags": [
        "6361477ffe8087002da9197b",
        "56744722958ef13879b95132",
        "591d0f67b5bbb96606f07af4",
        "56b28360a71b2df12bea6f07",
        "56744723958ef13879b9554c"
      ],
      "untaggedFrom": [],
      "upvotedBy": [],
      "downvotedBy": [],
      "popularity": 5741.3645,
      "responses": [],
      "responseCount": 0,
      "replyCount": 0,
      "followers": [],
      "isActive": true,
      "isFeatured": false,
      "isEngaging": false,
      "answeredByTarget": false,
      "inviters": [],
      "isDelisted": false,
      "isNotified": false,
      "duplicatePosts": [],
      "numCollapsed": 0,
      "hasReward": false,
      "bookmarkedIn": [],
      "similarPostIds": [],
      "reactions": [
        "5c090d96c2a9c2a674d35484",
        "5c090d96c2a9c2a674d35485",
        "5c090d96c2a9c2a674d35486",
        "5c090d96c2a9c2a674d35488",
        "5c090d96c2a9c2a674d3548b",
        "567453d0b73d6a82ac8c5ab9",
        "5c090d96c2a9c2a674d3548a"
      ],
      "totalReactions": 15,
      "reactionsByCurrentUser": [],
      "totalReactionsByCurrentUser": 0,
      "isPinnedToBlog": false,
      "disableComments": false,
      "commentsPaused": false,
      "hasLatex": false,
      "syncAlgolia": true,
      "enableToc": false,
      "toc": [
        [
          {
            "id": "ca72f8ca-83d4-4c94-9de5-3532d57e8719",
            "level": 2,
            "previousLevel": null,
            "parentId": null,
            "slug": "the-app",
            "title": "The App"
          }
        ],
        [
          {
            "id": "ede550b6-db21-4a05-9092-47788ae97596",
            "level": 2,
            "previousLevel": 2,
            "parentId": null,
            "slug": "nothing-up-our-sleeves",
            "title": "Nothing Up Our Sleeves"
          }
        ],
        [
          {
            "id": "173e07ff-4b74-4b72-aa98-e0f9217b0d83",
            "level": 2,
            "previousLevel": 2,
            "parentId": null,
            "slug": "setting-up-tier",
            "title": "Setting Up Tier"
          }
        ],
        [
          {
            "id": "d3c922ce-f03c-4164-a52f-ce28ca8615d2",
            "level": 2,
            "previousLevel": 2,
            "parentId": null,
            "slug": "installing-tier-sdk",
            "title": "Installing Tier SDK"
          }
        ],
        [
          {
            "id": "53d345ec-91e7-4a29-885f-01bf3cb210b4",
            "level": 2,
            "previousLevel": 2,
            "parentId": null,
            "slug": "create-pricing-model",
            "title": "Create Pricing Model"
          }
        ],
        [
          {
            "id": "aa052c59-a21d-4ed9-8e19-7e1bd4433c36",
            "level": 2,
            "previousLevel": 2,
            "parentId": null,
            "slug": "the-pricing-page",
            "title": "The /pricing Page"
          }
        ],
        [
          {
            "id": "5141a220-b084-4f5d-8523-98fbfe954ed0",
            "level": 2,
            "previousLevel": 2,
            "parentId": null,
            "slug": "subscribing-users-to-plans",
            "title": "Subscribing Users To Plans"
          }
        ],
        [
          {
            "id": "8b7d8093-86df-4559-83df-746f8a217e23",
            "level": 2,
            "previousLevel": 2,
            "parentId": null,
            "slug": "reporting-usage",
            "title": "Reporting Usage"
          }
        ],
        [
          {
            "id": "a19f8b9c-c587-4563-81a5-960061b00c81",
            "level": 2,
            "previousLevel": 2,
            "parentId": null,
            "slug": "limiting-access",
            "title": "Limiting Access"
          }
        ],
        [
          {
            "id": "de81d4ae-3cc5-4b13-9ba8-39387b4b7ac9",
            "level": 2,
            "previousLevel": 2,
            "parentId": null,
            "slug": "changing-plans",
            "title": "Changing Plans"
          }
        ],
        [
          {
            "id": "11d7db81-14a2-4379-95d3-faf2072cdcf7",
            "level": 2,
            "previousLevel": 2,
            "parentId": null,
            "slug": "collecting-payment-info",
            "title": "Collecting Payment Info"
          }
        ],
        [
          {
            "id": "eedfbcfd-3cad-4268-9240-194a8bbed875",
            "level": 2,
            "previousLevel": 2,
            "parentId": null,
            "slug": "thats-it",
            "title": "That's it!"
          }
        ]
      ],
      "numUniqueUsersWhoReacted": 0,
      "_id": "6361477f4d20fb61546fbc40",
      "createdAt": "2022-11-01T16:21:19.754Z",
      "updatedAt": "2022-11-01T16:21:19.754Z",
      "type": "story",
      "partOfPublication": true,
      "title": "Tier Hello World Demo",
      "cuid": "cl9yf36km000209l01bqqcf81",
      "dateAdded": "2022-11-01T16:21:19.751Z",
      "hasCustomDate": null,
      "isCoverAttributionHidden": false,
      "coverImageAttribution": "",
      "coverImagePhotographer": "",
      "slug": "tier-hello-world-demo",
      "author": "6350f41336b336a3b7f42bc5",
      "sB": false,
      "isRepublished": false,
      "originalArticleURL": "",
      "readTime": 7,
      "draft": "636142bd7c8ae671518e0e56",
      "publication": "62a38c37a2c282d2d8377855",
      "ogImage": "",
      "metaTitle": "Example of monetizing an app with Tier and Stripe",
      "metaDescription": "Simple walk through of using Tier to simplify the process of monetizing an application with Stripe according to best PriceOps practices.",
      "series": null,
      "__v": 2,
      "badges": [],
      "contributors": [],
      "dateUpdated": "2022-11-02T15:32:36.231Z",
      "pendingPublicationApproval": false,
      "pollOptions": [],
      "questionReplies": [],
      "stickCoverToBottom": false,
      "subtitle": "",
      "viewsUpdatedOn": 1687293030046,
      "reactionToCountMap": {
        "reaction_5c090d96c2a9c2a674d35484": 3,
        "reaction_5c090d96c2a9c2a674d35485": 2,
        "reaction_5c090d96c2a9c2a674d35486": 2,
        "reaction_5c090d96c2a9c2a674d35488": 2,
        "reaction_5c090d96c2a9c2a674d3548b": 2,
        "reaction_567453d0b73d6a82ac8c5ab9": 2,
        "reaction_5c090d96c2a9c2a674d3548a": 2
      },
      "uniqueReactions": [
        "5c090d96c2a9c2a674d35484",
        "5c090d96c2a9c2a674d35485",
        "5c090d96c2a9c2a674d35486",
        "5c090d96c2a9c2a674d35488",
        "5c090d96c2a9c2a674d3548b",
        "567453d0b73d6a82ac8c5ab9",
        "5c090d96c2a9c2a674d3548a"
      ],
      "reactionToCountMapUnique": {
        "reaction_5c090d96c2a9c2a674d35484": 3,
        "reaction_5c090d96c2a9c2a674d35485": 2,
        "reaction_5c090d96c2a9c2a674d35486": 2,
        "reaction_5c090d96c2a9c2a674d35488": 2,
        "reaction_5c090d96c2a9c2a674d3548b": 2,
        "reaction_567453d0b73d6a82ac8c5ab9": 2,
        "reaction_5c090d96c2a9c2a674d3548a": 2
      },
      "id": "6361477f4d20fb61546fbc40"
    },
    {
      "reward": { "type": "xlm" },
      "sourcedFromGithub": false,
      "githubAsSourceMeta": null,
      "isAnonymous": false,
      "views": 156,
      "slugOverridden": false,
      "coverImage": "",
      "autoGeneratedCover": "",
      "brief": "The most important thing to know is: not every customer should be a design partner.\nThink about your design partner program as a secret club where you only want to let a specific group of customers in. \n\nIt is difficult and time-consuming to make a d...",
      "content": "<p>The most important thing to know is: <strong>not every customer should be a design partner</strong>.</p>\n<p>Think about your design partner program as a secret club where you only want to let a specific group of customers in. </p>\n<p><img src=\"https://cdn.hashnode.com/res/hashnode/image/upload/v1665151210736/8uLxpNCDt.gif\" alt=\"You are a gatekeeper\" class=\"image--center mx-auto\" /></p>\n<p>It is difficult and time-consuming to make a design partner successful, so you want to keep the bar high for participation. You also need to be sure your partner understands the nature of what they are signing up for (more on that in a later post). </p>\n<p>What makes a good design partner? </p>\n<div class=\"embed-wrapper\"><div class=\"embed-loading\"><div class=\"loadingRow\"></div><div class=\"loadingRow\"></div></div><a class=\"embed-card\" href=\"https://twitter.com/Kellblog/status/1451558105314217984\">https://twitter.com/Kellblog/status/1451558105314217984</a></div>\n<h2 id=\"heading-a-good-design-partner-understands-what-makes-you-unique\">A good design partner understands what makes you unique</h2>\n<p>The ideal partner is motivated by a design to make your vision a reality. Why are you building something that is better than what can be purchased from a competitor? </p>\n<p>As part of your acceptance criteria, you need to be confident that your prospect understands this clearly. If they don't, they go into your regular sales/engagement funnel. </p>\n<h2 id=\"heading-design-partners-have-a-selfish-motivation\">Design partners have a selfish motivation</h2>\n<p>It's not enough that they want to see you succeed, a design partner needs to clearly understand the benefits for themselves.</p>\n<p>Of course, every customer needs to understand this, but a design partner needs to be able to justify an above-average commitment of time and attention. That's a high bar and if you don't meet it then you will find your design partners lose interest quickly. </p>\n<p>Regular check-ins are critical to maintaining excitement and alignment around your program. Without that, customers will lose interest and find it hard to continue to invest their time. </p>\n<h2 id=\"heading-design-partners-can-prioritize-work\">Design partners can prioritize work</h2>\n<p>Your partner needs to be able to dedicate their own time and often their team's time. That often means that the right design partner isn't an IC or even an executive. Often it's a Product or Engineering Manager who desperately wants to solve the problem you are addressing</p>\n<h2 id=\"heading-design-partners-engage-quickly\">Design partners engage quickly</h2>\n<p>One way prospects show their commitment is with their money. The other way is with their time and attention. </p>\n<p>How do you know if a prospective partner is serious to not? <strong>They don't waste time</strong>. </p>\n<p>If they join your Slack, show up for recurring meetings, and prioritize the work they need to do to unlock great feedback, then you've found yourself a diamond in the rough. </p>\n<p><strong>Design Partner qualification checklist:</strong> 📝</p>\n<ol>\n<li>Understands what makes you unique</li>\n<li>Have clear and defined goals for themselves</li>\n<li>Can prioritize the work needed. </li>\n<li>Engage quickly and reliably</li>\n</ol>\n<p>Now that you know who and what to look for, it's time to go find these mythical unicorns. </p>\n<p>Hold on tight, now things are about to get real!</p>\n<p><img src=\"https://cdn.hashnode.com/res/hashnode/image/upload/v1665151780855/75uD15zqN.gif\" alt=\"200.gif\" class=\"image--center mx-auto\" /></p>\n<blockquote>\n<p>Sign up for our newsletter to get all future articles in the Design Partner series, along with our templates and step by step guide to help get you started.</p>\n</blockquote>\n",
      "contentMarkdown": "The most important thing to know is: **not every customer should be a design partner**.\n\nThink about your design partner program as a secret club where you only want to let a specific group of customers in. \n\n![You are a gatekeeper](https://cdn.hashnode.com/res/hashnode/image/upload/v1665151210736/8uLxpNCDt.gif align=\"center\")\n\nIt is difficult and time-consuming to make a design partner successful, so you want to keep the bar high for participation. You also need to be sure your partner understands the nature of what they are signing up for (more on that in a later post). \n\nWhat makes a good design partner? \n\n%[https://twitter.com/Kellblog/status/1451558105314217984]\n\n## A good design partner understands what makes you unique \nThe ideal partner is motivated by a design to make your vision a reality. Why are you building something that is better than what can be purchased from a competitor? \n\nAs part of your acceptance criteria, you need to be confident that your prospect understands this clearly. If they don't, they go into your regular sales/engagement funnel. \n\n## Design partners have a selfish motivation\nIt's not enough that they want to see you succeed, a design partner needs to clearly understand the benefits for themselves.\n \nOf course, every customer needs to understand this, but a design partner needs to be able to justify an above-average commitment of time and attention. That's a high bar and if you don't meet it then you will find your design partners lose interest quickly. \n\nRegular check-ins are critical to maintaining excitement and alignment around your program. Without that, customers will lose interest and find it hard to continue to invest their time. \n\n## Design partners can prioritize work\nYour partner needs to be able to dedicate their own time and often their team's time. That often means that the right design partner isn't an IC or even an executive. Often it's a Product or Engineering Manager who desperately wants to solve the problem you are addressing\n\n## Design partners engage quickly\nOne way prospects show their commitment is with their money. The other way is with their time and attention. \n\nHow do you know if a prospective partner is serious to not? **They don't waste time**. \n\nIf they join your Slack, show up for recurring meetings, and prioritize the work they need to do to unlock great feedback, then you've found yourself a diamond in the rough. \n\n**Design Partner qualification checklist:** 📝\n1. Understands what makes you unique\n2. Have clear and defined goals for themselves\n3. Can prioritize the work needed. \n4. Engage quickly and reliably\n\nNow that you know who and what to look for, it's time to go find these mythical unicorns. \n\nHold on tight, now things are about to get real!\n\n![200.gif](https://cdn.hashnode.com/res/hashnode/image/upload/v1665151780855/75uD15zqN.gif align=\"center\")\n\n> Sign up for our newsletter to get all future articles in the Design Partner series, along with our templates and step by step guide to help get you started.\n\n",
      "hasPolls": false,
      "totalPollVotes": 0,
      "upvotes": 0,
      "downvotes": 0,
      "tags": [
        "56744722958ef13879b950a5",
        "56744721958ef13879b94b5b",
        "5d593c047bf6eae91fbeb461"
      ],
      "untaggedFrom": [],
      "upvotedBy": [],
      "downvotedBy": [],
      "popularity": 5696.4876,
      "responses": [],
      "responseCount": 0,
      "replyCount": 0,
      "followers": [],
      "isActive": true,
      "isFeatured": false,
      "isEngaging": false,
      "answeredByTarget": false,
      "inviters": [],
      "isDelisted": false,
      "isNotified": false,
      "duplicatePosts": [],
      "numCollapsed": 0,
      "hasReward": false,
      "bookmarkedIn": [],
      "similarPostIds": [],
      "reactions": [
        "5c090d96c2a9c2a674d35484",
        "5c090d96c2a9c2a674d35485",
        "567453d0b73d6a82ac8c5ab9",
        "5c090d96c2a9c2a674d3548b",
        "5c090d96c2a9c2a674d3548a",
        "5d9dd859f31791c942dc5b52"
      ],
      "totalReactions": 6,
      "reactionsByCurrentUser": [],
      "totalReactionsByCurrentUser": 0,
      "isPinnedToBlog": false,
      "disableComments": false,
      "commentsPaused": false,
      "hasLatex": false,
      "syncAlgolia": true,
      "enableToc": false,
      "toc": [],
      "numUniqueUsersWhoReacted": 0,
      "_id": "634345b8250857e669efeb3f",
      "title": "Who makes a good design partner?",
      "subtitle": "Choosing the right design partner(s) is your most critical decision.",
      "type": "story",
      "ogImage": "https://cdn.hashnode.com/res/hashnode/image/upload/v1665152465232/uS8ojF6vy.png",
      "isRepublished": false,
      "originalArticleURL": "",
      "partOfPublication": true,
      "publication": "62a38c37a2c282d2d8377855",
      "slug": "who-makes-a-good-design-partner",
      "importedFromMedium": false,
      "dateAdded": "2022-10-09T22:05:44.808Z",
      "hasCustomDate": false,
      "series": "634023f1e1c45ecede088678",
      "coverImageAttribution": "",
      "coverImagePhotographer": "",
      "isCoverAttributionHidden": false,
      "metaTitle": "",
      "metaDescription": "",
      "hasScheduledDate": true,
      "stickCoverToBottom": false,
      "pollOptions": [],
      "badges": [],
      "questionReplies": [],
      "contributors": [],
      "cuid": "cl91w9isu06knl5nv4pog00pn",
      "author": "61eabf4c0b35507a93a04907",
      "followersCount": 1,
      "draft": "63402974e1c45ecede088713",
      "readTime": 3,
      "__v": 0,
      "reactionToCountMap": {
        "reaction_5c090d96c2a9c2a674d35484": 1,
        "reaction_5c090d96c2a9c2a674d35485": 1,
        "reaction_567453d0b73d6a82ac8c5ab9": 1,
        "reaction_5c090d96c2a9c2a674d3548b": 1,
        "reaction_5c090d96c2a9c2a674d3548a": 1,
        "reaction_5d9dd859f31791c942dc5b52": 1
      },
      "viewsUpdatedOn": 1686861028820,
      "uniqueReactions": [
        "5c090d96c2a9c2a674d35484",
        "5c090d96c2a9c2a674d35485",
        "567453d0b73d6a82ac8c5ab9",
        "5c090d96c2a9c2a674d3548b",
        "5c090d96c2a9c2a674d3548a",
        "5d9dd859f31791c942dc5b52"
      ],
      "reactionToCountMapUnique": {
        "reaction_5c090d96c2a9c2a674d35484": 1,
        "reaction_5c090d96c2a9c2a674d35485": 1,
        "reaction_567453d0b73d6a82ac8c5ab9": 1,
        "reaction_5c090d96c2a9c2a674d3548b": 1,
        "reaction_5c090d96c2a9c2a674d3548a": 1,
        "reaction_5d9dd859f31791c942dc5b52": 1
      },
      "id": "634345b8250857e669efeb3f"
    },
    {
      "reward": { "type": "xlm" },
      "sourcedFromGithub": false,
      "githubAsSourceMeta": null,
      "isAnonymous": false,
      "views": 410,
      "slugOverridden": false,
      "coverImage": "",
      "autoGeneratedCover": "https://hcti.io/v1/image/df62c2f7-503a-486c-9000-f28d372e3480",
      "brief": "Customer design partner programs are a great way for you to get early feedback on your products from potential customers. \nA Design Partner Program is an early access program with a prioritization feedback loop. That means you can rapidly implement f...",
      "content": "<p><strong>Customer design partner programs</strong> are a great way for you to get early feedback on your products from potential customers. </p>\n<p><strong>A Design Partner Program is an early access program with a prioritization feedback loop</strong>. That means you can rapidly implement features for customers who will test them and actively suggest new requirements that they think they would have as a (full) paying customer.</p>\n<p>This is different from a Beta or Preview program because you must choose your design partners carefully. You are making a commitment to them, and in return they are committing their time and attention to you.</p>\n<p><img src=\"https://cdn.hashnode.com/res/hashnode/image/upload/v1665158221425/NgAMJTtoi.png\" alt=\"Get Ready!\" /></p>\n<p>By starting a Design Partner Program, you can connect with customers who are interested in helping you to design and build your product. In exchange, your customers get early access and the opportunity to help prioritize the features that will be added to the product.</p>\n<p>There are several reasons why you should start a Design Partner Program early on. </p>\n<blockquote>\n<p><a target=\"_blank\" href=\"https://blog.tier.run/newsletter\">Sign up to our newsletter and get our full set of Design Partner Program templates</a>.</p>\n</blockquote>\n<p>First, <strong>it provides you with valuable feedback on your products</strong>. This feedback can help you make necessary changes and improvements, which means you have a battle tested product and feature backlog when you roll out you more publicly.</p>\n<p>Second, <strong>customer design partner programs help you build relationships with potential customers</strong>. These relationships can be beneficial in the long run, as customers may be more likely to do business with startups that they have worked with in the past.</p>\n<p>Third, <strong>customer design partner programs can help you learn about you customers’ needs and wants</strong>. This information can be used to create products that are more in line with what customers want, which can help you stand out from the competition. </p>\n<p>Finally, <strong>customer design partner programs are a great way to generate publicity</strong>. Participating in these programs give you the early customer testimonials and recommendations that will be critical to closing your first real sales.</p>\n<blockquote>\n<p><a target=\"_blank\" href=\"https://blog.tier.run/series/design-partner-programs\">In this series we will answer</a> why, when and how to start a design partner program and <strong>I will share my templates</strong> that you can use to propose and close your design partner prospects.</p>\n</blockquote>\n",
      "contentMarkdown": "**Customer design partner programs** are a great way for you to get early feedback on your products from potential customers. \n\n**A Design Partner Program is an early access program with a prioritization feedback loop**. That means you can rapidly implement features for customers who will test them and actively suggest new requirements that they think they would have as a (full) paying customer.\n\nThis is different from a Beta or Preview program because you must choose your design partners carefully. You are making a commitment to them, and in return they are committing their time and attention to you.\n\n![Get Ready!](https://cdn.hashnode.com/res/hashnode/image/upload/v1665158221425/NgAMJTtoi.png align=\"left\")\n\nBy starting a Design Partner Program, you can connect with customers who are interested in helping you to design and build your product. In exchange, your customers get early access and the opportunity to help prioritize the features that will be added to the product.\n\nThere are several reasons why you should start a Design Partner Program early on. \n\n>[Sign up to our newsletter and get our full set of Design Partner Program templates](https://blog.tier.run/newsletter).\n\nFirst, **it provides you with valuable feedback on your products**. This feedback can help you make necessary changes and improvements, which means you have a battle tested product and feature backlog when you roll out you more publicly.\n\nSecond, **customer design partner programs help you build relationships with potential customers**. These relationships can be beneficial in the long run, as customers may be more likely to do business with startups that they have worked with in the past.\n\nThird, **customer design partner programs can help you learn about you customers’ needs and wants**. This information can be used to create products that are more in line with what customers want, which can help you stand out from the competition. \n\nFinally, **customer design partner programs are a great way to generate publicity**. Participating in these programs give you the early customer testimonials and recommendations that will be critical to closing your first real sales.\n\n>[In this series we will answer](https://blog.tier.run/series/design-partner-programs) why, when and how to start a design partner program and **I will share my templates** that you can use to propose and close your design partner prospects.\n\n",
      "hasPolls": false,
      "totalPollVotes": 0,
      "upvotes": 0,
      "downvotes": 0,
      "tags": [
        "56744722958ef13879b950a5",
        "58cd06ec68e963fa61d68d7f",
        "56744721958ef13879b94b5b"
      ],
      "untaggedFrom": [],
      "upvotedBy": [],
      "downvotedBy": [],
      "popularity": 5691.936,
      "responses": [],
      "responseCount": 0,
      "replyCount": 0,
      "followers": [],
      "isActive": true,
      "isFeatured": false,
      "isEngaging": false,
      "answeredByTarget": false,
      "inviters": [],
      "isDelisted": false,
      "isNotified": false,
      "duplicatePosts": [],
      "numCollapsed": 0,
      "hasReward": false,
      "bookmarkedIn": [],
      "similarPostIds": [],
      "reactions": [
        "5c090d96c2a9c2a674d35484",
        "5c090d96c2a9c2a674d35485",
        "5c090d96c2a9c2a674d35488",
        "5c090d96c2a9c2a674d3548b",
        "5d9dd859f31791c942dc5b52"
      ],
      "totalReactions": 5,
      "reactionsByCurrentUser": [],
      "totalReactionsByCurrentUser": 0,
      "isPinnedToBlog": false,
      "disableComments": false,
      "commentsPaused": false,
      "hasLatex": false,
      "syncAlgolia": true,
      "enableToc": false,
      "toc": [],
      "numUniqueUsersWhoReacted": 0,
      "_id": "634025a2bf6a2aa644b7f71b",
      "createdAt": "2022-10-07T13:12:02.813Z",
      "updatedAt": "2022-10-07T13:12:03.535Z",
      "type": "story",
      "partOfPublication": true,
      "title": "What is a Design Partner Program?",
      "cuid": "cl8yibgu4001009mgcjlz5ndr",
      "dateAdded": "2022-10-07T13:12:02.812Z",
      "hasCustomDate": null,
      "isCoverAttributionHidden": false,
      "coverImageAttribution": "",
      "coverImagePhotographer": "",
      "slug": "what-is-a-design-partner-program",
      "author": "61eabf4c0b35507a93a04907",
      "sB": true,
      "isRepublished": false,
      "originalArticleURL": "",
      "readTime": 2,
      "draft": "6340243b6971ffceb982008f",
      "publication": "62a38c37a2c282d2d8377855",
      "ogImage": "",
      "metaTitle": "",
      "metaDescription": "",
      "series": "634023f1e1c45ecede088678",
      "__v": 1,
      "badges": [],
      "contributors": [],
      "dateUpdated": "2022-10-07T21:53:35.530Z",
      "pendingPublicationApproval": false,
      "pollOptions": [],
      "questionReplies": [],
      "stickCoverToBottom": false,
      "subtitle": "",
      "viewsUpdatedOn": 1687213828420,
      "reactionToCountMap": {
        "reaction_5c090d96c2a9c2a674d35484": 1,
        "reaction_5c090d96c2a9c2a674d35485": 1,
        "reaction_5c090d96c2a9c2a674d35488": 1,
        "reaction_5c090d96c2a9c2a674d3548b": 1,
        "reaction_5d9dd859f31791c942dc5b52": 1
      },
      "uniqueReactions": [
        "5c090d96c2a9c2a674d35484",
        "5c090d96c2a9c2a674d35485",
        "5c090d96c2a9c2a674d35488",
        "5c090d96c2a9c2a674d3548b",
        "5d9dd859f31791c942dc5b52"
      ],
      "reactionToCountMapUnique": {
        "reaction_5c090d96c2a9c2a674d35484": 1,
        "reaction_5c090d96c2a9c2a674d35485": 1,
        "reaction_5c090d96c2a9c2a674d35488": 1,
        "reaction_5c090d96c2a9c2a674d3548b": 1,
        "reaction_5d9dd859f31791c942dc5b52": 1
      },
      "id": "634025a2bf6a2aa644b7f71b"
    },
    {
      "reward": { "type": "xlm" },
      "sourcedFromGithub": false,
      "githubAsSourceMeta": null,
      "isAnonymous": false,
      "views": 93,
      "slugOverridden": false,
      "coverImage": "",
      "autoGeneratedCover": "https://hcti.io/v1/image/d68f7a60-7747-47c0-b914-4cf6e6eccea9",
      "brief": "When pricing your software, you want to find the right balance between making it enticing for people to try it and not being too expensive for them to ever consider. You don't want to price your software so high that people are unwilling to even take...",
      "content": "<p>When pricing your software, you want to find the right balance between making it enticing for people to try it and not being too expensive for them to ever consider. You don't want to price your software so high that people are unwilling to even take a chance on it, but you also don't want to set the price so low that you give people the idea that your software is low quality.</p>\n<p>A good way to price software is by offering a free trial period. This helps get users interested in seeing what you have, but it also gives them an opportunity to see if they really want or need the full version of your product and ultimately makes more sales because they already know how awesome your software is.</p>\n<p>Finding the right price for your software can be tricky, but it's definitely worth taking the time to get it right. With a little experimentation and some tweaking, you'll be able to set a price that will have people clamoring to try out your product!</p>\n<p>Keep in mind:</p>\n<p>Price your software in a way that entices people to try it, but isn't too expensive for them to ever consider.</p>\n<p>Offer a free trial period to help people get interested and see if they want the full version of your product.</p>\n<p>Make sure you are set up to tweak your your price until you find the right balance that makes people clamor to try out your software! This means having a system in place that is flexible and agile enough to keep up with pricing and packaging changes.</p>\n<p>Happy Pricing! :)</p>\n",
      "contentMarkdown": "When pricing your software, you want to find the right balance between making it enticing for people to try it and not being too expensive for them to ever consider. You don't want to price your software so high that people are unwilling to even take a chance on it, but you also don't want to set the price so low that you give people the idea that your software is low quality.\n\nA good way to price software is by offering a free trial period. This helps get users interested in seeing what you have, but it also gives them an opportunity to see if they really want or need the full version of your product and ultimately makes more sales because they already know how awesome your software is.\n\nFinding the right price for your software can be tricky, but it's definitely worth taking the time to get it right. With a little experimentation and some tweaking, you'll be able to set a price that will have people clamoring to try out your product!\n\nKeep in mind:\n\nPrice your software in a way that entices people to try it, but isn't too expensive for them to ever consider.\n\nOffer a free trial period to help people get interested and see if they want the full version of your product.\n\nMake sure you are set up to tweak your your price until you find the right balance that makes people clamor to try out your software! This means having a system in place that is flexible and agile enough to keep up with pricing and packaging changes.\n\nHappy Pricing! :)",
      "hasPolls": false,
      "totalPollVotes": 0,
      "upvotes": 0,
      "downvotes": 0,
      "tags": [
        "56744722958ef13879b950a5",
        "56744723958ef13879b9554c",
        "63085d4a79f56556d0cbc716",
        "631ca902f73f4734bc054995",
        "631ca98d3e8d6f3497ad36da"
      ],
      "untaggedFrom": [],
      "upvotedBy": [],
      "downvotedBy": [],
      "popularity": 5640.2577,
      "responses": [],
      "responseCount": 0,
      "replyCount": 0,
      "followers": [],
      "isActive": true,
      "isFeatured": false,
      "isEngaging": false,
      "answeredByTarget": false,
      "inviters": [],
      "isDelisted": false,
      "isNotified": false,
      "duplicatePosts": [],
      "numCollapsed": 0,
      "hasReward": false,
      "bookmarkedIn": [],
      "similarPostIds": [],
      "reactions": [],
      "totalReactions": 0,
      "reactionsByCurrentUser": [],
      "totalReactionsByCurrentUser": 0,
      "isPinnedToBlog": false,
      "disableComments": false,
      "commentsPaused": false,
      "hasLatex": false,
      "syncAlgolia": false,
      "enableToc": false,
      "toc": [],
      "numUniqueUsersWhoReacted": 0,
      "_id": "631ca98d3e8d6f3497ad36d9",
      "title": "How to Price Software: Find the Right Balance",
      "subtitle": "",
      "pollOptions": [],
      "type": "story",
      "coverImageAttribution": "",
      "coverImagePhotographer": "",
      "isCoverAttributionHidden": false,
      "ogImage": "",
      "metaTitle": "",
      "metaDescription": "",
      "isRepublished": false,
      "originalArticleURL": "",
      "partOfPublication": true,
      "publication": "62a38c37a2c282d2d8377855",
      "slug": "how-to-price-software-find-the-right-balance",
      "importedFromMedium": false,
      "dateAdded": "2022-09-10T15:13:17.906Z",
      "hasCustomDate": false,
      "hasScheduledDate": false,
      "stickCoverToBottom": false,
      "badges": [],
      "questionReplies": [],
      "contributors": [],
      "cuid": "cl7w1reca088yw8nv2f0z03xb",
      "author": "61eabf4c0b35507a93a04907",
      "followersCount": 1,
      "draft": "631ca962f73f4734bc0549a0",
      "readTime": 2,
      "__v": 0,
      "viewsUpdatedOn": 1685809829954,
      "uniqueReactions": [],
      "reactionToCountMapUnique": { "any": 1 },
      "id": "631ca98d3e8d6f3497ad36d9"
    },
    {
      "reward": { "type": "xlm" },
      "sourcedFromGithub": false,
      "githubAsSourceMeta": null,
      "isAnonymous": false,
      "views": 45,
      "slugOverridden": false,
      "coverImage": "",
      "autoGeneratedCover": "https://hcti.io/v1/image/41f19d52-c4f0-4a01-a6d6-7183115e743c",
      "brief": "Feature Flagging is a common strategy for software developers in order to release features at a certain pace. A developer might not want all their code to be seen by a user until it's ready, which they can control through the use of the flags. They a...",
      "content": "<p><strong>Feature Flagging</strong> is a common strategy for software developers in order to release features at a certain pace. A developer might not want all their code to be seen by a user until it's ready, which they can control through the use of the flags. They also help when rolling back features that may have had some bugs or issues, and provide a way for developers to test out new features before releasing them to the public.</p>\n<p>The importance of feature flagging is that it's a common strategy for software developers to release features at a certain pace. A developer might not want all their code to be seen by a user until it's ready, which can be controlled through the use of flags. They also help when rolling back features that may have had bugs or issues, and provide a way for developers to test out new features before releasing them to the public.</p>\n",
      "contentMarkdown": "**Feature Flagging** is a common strategy for software developers in order to release features at a certain pace. A developer might not want all their code to be seen by a user until it's ready, which they can control through the use of the flags. They also help when rolling back features that may have had some bugs or issues, and provide a way for developers to test out new features before releasing them to the public.\n\nThe importance of feature flagging is that it's a common strategy for software developers to release features at a certain pace. A developer might not want all their code to be seen by a user until it's ready, which can be controlled through the use of flags. They also help when rolling back features that may have had bugs or issues, and provide a way for developers to test out new features before releasing them to the public.",
      "hasPolls": false,
      "totalPollVotes": 0,
      "upvotes": 0,
      "downvotes": 0,
      "tags": [
        "56744722958ef13879b950a5",
        "62fe24848a6134f98d577a1d",
        "56744723958ef13879b9554c"
      ],
      "untaggedFrom": [],
      "upvotedBy": [],
      "downvotedBy": [],
      "popularity": 5640.2562,
      "responses": [],
      "responseCount": 0,
      "replyCount": 0,
      "followers": [],
      "isActive": true,
      "isFeatured": false,
      "isEngaging": false,
      "answeredByTarget": false,
      "inviters": [],
      "isDelisted": false,
      "isNotified": false,
      "duplicatePosts": [],
      "numCollapsed": 0,
      "hasReward": false,
      "bookmarkedIn": [],
      "similarPostIds": [],
      "reactions": [],
      "totalReactions": 0,
      "reactionsByCurrentUser": [],
      "totalReactionsByCurrentUser": 0,
      "isPinnedToBlog": false,
      "disableComments": false,
      "commentsPaused": false,
      "hasLatex": false,
      "syncAlgolia": false,
      "enableToc": false,
      "toc": [],
      "numUniqueUsersWhoReacted": 0,
      "_id": "631ca9473e8d6f3497ad36c8",
      "title": "The power of feature flagging in software development",
      "subtitle": "",
      "pollOptions": [],
      "type": "story",
      "coverImageAttribution": "",
      "coverImagePhotographer": "",
      "isCoverAttributionHidden": false,
      "ogImage": "",
      "metaTitle": "",
      "metaDescription": "",
      "isRepublished": false,
      "originalArticleURL": "",
      "partOfPublication": true,
      "publication": "62a38c37a2c282d2d8377855",
      "slug": "the-power-of-feature-flagging-in-software-development",
      "importedFromMedium": false,
      "dateAdded": "2022-09-10T15:12:07.063Z",
      "hasCustomDate": false,
      "hasScheduledDate": false,
      "stickCoverToBottom": false,
      "badges": [],
      "questionReplies": [],
      "contributors": [],
      "cuid": "cl7w1pvoi088fw8nv1lm8ckgc",
      "author": "61eabf4c0b35507a93a04907",
      "followersCount": 1,
      "draft": "631ca925f73f4734bc05499b",
      "readTime": 1,
      "__v": 0,
      "viewsUpdatedOn": 1686162631782,
      "uniqueReactions": [],
      "reactionToCountMapUnique": { "any": 1 },
      "id": "631ca9473e8d6f3497ad36c8"
    },
    {
      "reward": { "type": "xlm" },
      "sourcedFromGithub": false,
      "githubAsSourceMeta": null,
      "isAnonymous": false,
      "views": 67,
      "slugOverridden": false,
      "coverImage": "",
      "autoGeneratedCover": "https://hcti.io/v1/image/ab512aa3-9894-4ffc-8dc1-356b3345c6be",
      "brief": "When a company decides to change what they charge for their services, there are many ways they can go about this. One popular option is to grandfather in the old price for one or more years for anyone who was subscribed before the new price went into...",
      "content": "<p>When a company decides to change what they charge for their services, there are many ways they can go about this. One popular option is to grandfather in the old price for one or more years for anyone who was subscribed before the new price went into effect.</p>\n<p><strong>Pros</strong>: The main pro of grandfathered pricing is that it creates an incentive to subscribe sooner rather than later. This not only benefits current customers by giving them a discounted rate but also helps you retain your customer base longer because it would be cheaper if they were to wait until next year. It also makes it easier on you since all of your marketing and advertising will mention the discount so people know what's up when they see your ads online or on TV or anywhere else where  you may advertise. You also won't have to worry about people canceling their subscription when the price goes up because they were subscribed before you raised prices, so it will make your life easier in terms of the customer service aspect of things. Grandfathering customers in is also beneficial to you in that it can cause some people who might otherwise not subscribe to become a paying customer, and it is possible that those customers may even stick around longer because they were upsold on your new premium features or became a customer at a discount.</p>\n<p><strong>Pros</strong>: If you're going to grandfather in some people then you also have to grandfather some out as well. This means that there will be people who subscribed before the price change date who will still pay the old price even though they could be paying less if they were to subscribe now. If you only let some people keep their discounted rates then it can come off as unfair and insulting to those who don't get the discount. This also means that your current customers may feel like there is no incentive for them to upgrade since they'll just have to pay the new price sooner or later. There is also a risk that your revenue won't be as high as it should because you're giving a discount out to some people and not others, so there is a chance you could lose money if you don't make up for it by gaining more subscriptions from those who aren't grandfathered in.</p>\n<p><strong>Pros</strong>: There are many pros of grandfathering users when you change your prices. One big pro is that you will retain customers who were subscribed before the price changes went into effect, so you won't have to worry about people canceling their subscription because they're not getting the discount anymore. It's also possible that retaining some subscribers will increase sales in general, so you might gain more money than if you had made everyone pay full price immediately after changing your prices. You can still give out discounts through things like loyalty programs and special offers, so you're not completely taking away the incentive to subscribe sooner rather than later.</p>\n<p><strong>Cons</strong>: One con of grandfathering users is that it can also come off as a bit unfair to those who subscribe after the price change goes into effect. This means you can't give honest feedback to people about what your service costs because others are getting different rates based on when they signed up, and this could cause some people who should upgrade to not do so because they think it's too expensive. Someone subscribing after the price hikes also won't be able to get as much value out of your service since their rate is higher than what other people are paying, and this might cause them to say you're overpriced even if you aren't since they can't get the lower rate.</p>\n<p><strong>Cons</strong>: The main con of not grandfathering users is that you'll lose money by being more strict with your price changes. By not grandfathering people in then you're basically saying that there is no incentive to subscribe sooner rather than later, and this can cause people to wait until the last minute to sign up which means you'll have less income on a monthly basis. You also risk losing customers who would be willing to pay full price but won't subscribe because the discount isn't worth it to them, and some people may even cancel their subscription if they think your service is overpriced.</p>\n<p>Grandfathering users can also be a way of showing that you appreciate your loyal customers, and this can help increase brand loyalty if done right. Grandfathering some people into your new prices is a way of rewarding those who have been subscribing from the beginning, and this can be good for your business as long as you only do it to some people and not everyone.</p>\n<p><strong>Conclusion</strong>: There are many pros and cons of grandfathering users when prices change, but it's possible that the benefits outweigh the negative effects. If you're planning on changing your company's pricing then it might be a good idea to think about what other companies have done in the past, and decide from there.</p>\n",
      "contentMarkdown": "When a company decides to change what they charge for their services, there are many ways they can go about this. One popular option is to grandfather in the old price for one or more years for anyone who was subscribed before the new price went into effect.\n\n**Pros**: The main pro of grandfathered pricing is that it creates an incentive to subscribe sooner rather than later. This not only benefits current customers by giving them a discounted rate but also helps you retain your customer base longer because it would be cheaper if they were to wait until next year. It also makes it easier on you since all of your marketing and advertising will mention the discount so people know what's up when they see your ads online or on TV or anywhere else where  you may advertise. You also won't have to worry about people canceling their subscription when the price goes up because they were subscribed before you raised prices, so it will make your life easier in terms of the customer service aspect of things. Grandfathering customers in is also beneficial to you in that it can cause some people who might otherwise not subscribe to become a paying customer, and it is possible that those customers may even stick around longer because they were upsold on your new premium features or became a customer at a discount.\n\n**Pros**: If you're going to grandfather in some people then you also have to grandfather some out as well. This means that there will be people who subscribed before the price change date who will still pay the old price even though they could be paying less if they were to subscribe now. If you only let some people keep their discounted rates then it can come off as unfair and insulting to those who don't get the discount. This also means that your current customers may feel like there is no incentive for them to upgrade since they'll just have to pay the new price sooner or later. There is also a risk that your revenue won't be as high as it should because you're giving a discount out to some people and not others, so there is a chance you could lose money if you don't make up for it by gaining more subscriptions from those who aren't grandfathered in.\n\n**Pros**: There are many pros of grandfathering users when you change your prices. One big pro is that you will retain customers who were subscribed before the price changes went into effect, so you won't have to worry about people canceling their subscription because they're not getting the discount anymore. It's also possible that retaining some subscribers will increase sales in general, so you might gain more money than if you had made everyone pay full price immediately after changing your prices. You can still give out discounts through things like loyalty programs and special offers, so you're not completely taking away the incentive to subscribe sooner rather than later.\n\n**Cons**: One con of grandfathering users is that it can also come off as a bit unfair to those who subscribe after the price change goes into effect. This means you can't give honest feedback to people about what your service costs because others are getting different rates based on when they signed up, and this could cause some people who should upgrade to not do so because they think it's too expensive. Someone subscribing after the price hikes also won't be able to get as much value out of your service since their rate is higher than what other people are paying, and this might cause them to say you're overpriced even if you aren't since they can't get the lower rate.\n\n**Cons**: The main con of not grandfathering users is that you'll lose money by being more strict with your price changes. By not grandfathering people in then you're basically saying that there is no incentive to subscribe sooner rather than later, and this can cause people to wait until the last minute to sign up which means you'll have less income on a monthly basis. You also risk losing customers who would be willing to pay full price but won't subscribe because the discount isn't worth it to them, and some people may even cancel their subscription if they think your service is overpriced.\n\nGrandfathering users can also be a way of showing that you appreciate your loyal customers, and this can help increase brand loyalty if done right. Grandfathering some people into your new prices is a way of rewarding those who have been subscribing from the beginning, and this can be good for your business as long as you only do it to some people and not everyone.\n\n**Conclusion**: There are many pros and cons of grandfathering users when prices change, but it's possible that the benefits outweigh the negative effects. If you're planning on changing your company's pricing then it might be a good idea to think about what other companies have done in the past, and decide from there.\n",
      "hasPolls": false,
      "totalPollVotes": 0,
      "upvotes": 0,
      "downvotes": 0,
      "tags": [
        "56744722958ef13879b950a5",
        "56744723958ef13879b9554c",
        "631ca902f73f4734bc054995",
        "631ca902f73f4734bc054996"
      ],
      "untaggedFrom": [],
      "upvotedBy": [],
      "downvotedBy": [],
      "popularity": 5640.2546,
      "responses": [],
      "responseCount": 0,
      "replyCount": 0,
      "followers": [],
      "isActive": true,
      "isFeatured": false,
      "isEngaging": false,
      "answeredByTarget": false,
      "inviters": [],
      "isDelisted": false,
      "isNotified": false,
      "duplicatePosts": [],
      "numCollapsed": 0,
      "hasReward": false,
      "bookmarkedIn": [],
      "similarPostIds": [],
      "reactions": [],
      "totalReactions": 0,
      "reactionsByCurrentUser": [],
      "totalReactionsByCurrentUser": 0,
      "isPinnedToBlog": false,
      "disableComments": false,
      "commentsPaused": false,
      "hasLatex": false,
      "syncAlgolia": false,
      "enableToc": false,
      "toc": [],
      "numUniqueUsersWhoReacted": 0,
      "_id": "631ca902f73f4734bc054994",
      "title": "Pros and Cons of Grandfathering a User's Pricing",
      "subtitle": "",
      "pollOptions": [],
      "type": "story",
      "coverImageAttribution": "",
      "coverImagePhotographer": "",
      "isCoverAttributionHidden": false,
      "ogImage": "",
      "metaTitle": "",
      "metaDescription": "",
      "isRepublished": false,
      "originalArticleURL": "",
      "partOfPublication": true,
      "publication": "62a38c37a2c282d2d8377855",
      "slug": "pros-and-cons-of-grandfathering-a-users-pricing",
      "importedFromMedium": false,
      "dateAdded": "2022-09-10T15:10:58.151Z",
      "hasCustomDate": false,
      "hasScheduledDate": false,
      "stickCoverToBottom": false,
      "badges": [],
      "questionReplies": [],
      "contributors": [],
      "cuid": "cl7w1oeia0807x9nvglxg0gns",
      "author": "61eabf4c0b35507a93a04907",
      "followersCount": 1,
      "draft": "631ca83df73f4734bc05496a",
      "readTime": 4,
      "__v": 0,
      "viewsUpdatedOn": 1685809829929,
      "uniqueReactions": [],
      "reactionToCountMapUnique": { "any": 1 },
      "id": "631ca902f73f4734bc054994"
    },
    {
      "reward": { "type": "xlm" },
      "sourcedFromGithub": false,
      "githubAsSourceMeta": null,
      "isAnonymous": false,
      "views": 67,
      "slugOverridden": false,
      "coverImage": "",
      "autoGeneratedCover": "https://hcti.io/v1/image/e54c2c41-4450-452b-88b9-cd9911a49b54",
      "brief": "Setting the right price for your SaaS product is essential to success. Unfortunately, many startups make common pricing mistakes that can doom their business. Here are four of the most common pricing mistakes and how to avoid them.\n1. Selling to the ...",
      "content": "<p>Setting the right price for your SaaS product is essential to success. Unfortunately, many startups make common pricing mistakes that can doom their business. Here are four of the most common pricing mistakes and how to avoid them.</p>\n<p><strong>1. Selling to the wrong customers</strong></p>\n<p>Your product may be great, but it doesn't matter if you're selling to the wrong customers. Let's say your SaaS app shuts down after 30 days of free trial, and users are charged $20 per month. If your average customer makes $100,000 per year, then losing them after just 30 days of use is a massive loss. You need to be very clear on who your ideal customer is, how much they're willing to spend, and whether your product can deliver value long-term.</p>\n<p><strong>2. Not using feature differentiation</strong></p>\n<p>Pricing by the number of features in your software is risky because it doesn't reflect customer value. Two SaaS apps that do the exact same things can have vastly different prices based on how their features are organized, which is why feature differentiation is key to success. If you offer slightly more advanced features than your competition for a price similar to theirs, it's an easy way to establish pricing power without having to compete purely on price.</p>\n<p><strong>3. Neglecting to consider your competitors</strong></p>\n<p>It's not enough to just know what you're selling and to whom - it's also crucial to know who your competitors are, how much they charge, and how their pricing compares with yours. You need a thorough competitive analysis so that you can understand where the gaps in value lie and establish a pricing strategy that will help you win new customers.</p>\n<p><strong>4. Using one-size-fits-all pricing</strong></p>\n<p>You have to consider all of your potential customer segments, not just the biggest. If you only plan on targeting one niche market, your price doesn't need to be as competitive as a company whose product is more versatile and appeals to a wider range of customers. Ideally, the best pricing strategy is to find a balance between all segments to maximize revenue and profitability.</p>\n<p>If you keep these four common mistakes in mind when deciding on a pricing strategy, your startup will be more likely to avoid failure and enjoy long-term success.</p>\n",
      "contentMarkdown": "Setting the right price for your SaaS product is essential to success. Unfortunately, many startups make common pricing mistakes that can doom their business. Here are four of the most common pricing mistakes and how to avoid them.\n\n**1. Selling to the wrong customers**\n\nYour product may be great, but it doesn't matter if you're selling to the wrong customers. Let's say your SaaS app shuts down after 30 days of free trial, and users are charged $20 per month. If your average customer makes $100,000 per year, then losing them after just 30 days of use is a massive loss. You need to be very clear on who your ideal customer is, how much they're willing to spend, and whether your product can deliver value long-term.\n\n**2. Not using feature differentiation**\n\nPricing by the number of features in your software is risky because it doesn't reflect customer value. Two SaaS apps that do the exact same things can have vastly different prices based on how their features are organized, which is why feature differentiation is key to success. If you offer slightly more advanced features than your competition for a price similar to theirs, it's an easy way to establish pricing power without having to compete purely on price.\n\n**3. Neglecting to consider your competitors**\n\nIt's not enough to just know what you're selling and to whom - it's also crucial to know who your competitors are, how much they charge, and how their pricing compares with yours. You need a thorough competitive analysis so that you can understand where the gaps in value lie and establish a pricing strategy that will help you win new customers.\n\n**4. Using one-size-fits-all pricing**\n\nYou have to consider all of your potential customer segments, not just the biggest. If you only plan on targeting one niche market, your price doesn't need to be as competitive as a company whose product is more versatile and appeals to a wider range of customers. Ideally, the best pricing strategy is to find a balance between all segments to maximize revenue and profitability.\n\nIf you keep these four common mistakes in mind when deciding on a pricing strategy, your startup will be more likely to avoid failure and enjoy long-term success.",
      "hasPolls": false,
      "totalPollVotes": 0,
      "upvotes": 0,
      "downvotes": 0,
      "tags": [
        "56744722958ef13879b950a5",
        "63085d4a79f56556d0cbc716",
        "631c97ddf73f4734bc054644",
        "631c97ddf73f4734bc054645",
        "631c97ddf73f4734bc054646"
      ],
      "untaggedFrom": [],
      "upvotedBy": [],
      "downvotedBy": [],
      "popularity": 5640.1571,
      "responses": [],
      "responseCount": 0,
      "replyCount": 0,
      "followers": [],
      "isActive": true,
      "isFeatured": false,
      "isEngaging": false,
      "answeredByTarget": false,
      "inviters": [],
      "isDelisted": false,
      "isNotified": false,
      "duplicatePosts": [],
      "numCollapsed": 0,
      "hasReward": false,
      "bookmarkedIn": [],
      "similarPostIds": [],
      "reactions": ["5c090d96c2a9c2a674d35485"],
      "totalReactions": 1,
      "reactionsByCurrentUser": [],
      "totalReactionsByCurrentUser": 0,
      "isPinnedToBlog": false,
      "disableComments": false,
      "commentsPaused": false,
      "hasLatex": false,
      "syncAlgolia": true,
      "enableToc": false,
      "toc": [],
      "numUniqueUsersWhoReacted": 0,
      "_id": "631c97ddf73f4734bc054643",
      "title": "4 SaaS Pricing Mistakes to Avoid",
      "subtitle": "",
      "pollOptions": [],
      "type": "story",
      "coverImageAttribution": "",
      "coverImagePhotographer": "",
      "isCoverAttributionHidden": false,
      "ogImage": "",
      "metaTitle": "",
      "metaDescription": "",
      "isRepublished": false,
      "originalArticleURL": "",
      "partOfPublication": true,
      "publication": "62a38c37a2c282d2d8377855",
      "slug": "4-saas-pricing-mistakes-to-avoid",
      "importedFromMedium": false,
      "dateAdded": "2022-09-10T13:57:49.550Z",
      "hasCustomDate": false,
      "hasScheduledDate": false,
      "stickCoverToBottom": false,
      "badges": [],
      "questionReplies": [],
      "contributors": [],
      "cuid": "cl7vz2c8m07kvx9nv6d9x7fxo",
      "author": "61eabf4c0b35507a93a04907",
      "followersCount": 1,
      "draft": "631c9759f73f4734bc054628",
      "readTime": 2,
      "__v": 0,
      "viewsUpdatedOn": 1686256228432,
      "reactionToCountMap": { "reaction_5c090d96c2a9c2a674d35485": 1 },
      "uniqueReactions": ["5c090d96c2a9c2a674d35485"],
      "reactionToCountMapUnique": {
        "reaction_5c090d96c2a9c2a674d35485": 1,
        "reaction_5c090d96c2a9c2a674d35484": 0
      },
      "id": "631c97ddf73f4734bc054643"
    }
  ]
}
